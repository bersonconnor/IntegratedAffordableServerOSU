{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getIcon = getIcon;\n\nvar _iconsSvg = require('./icons-svg');\n\nvar _iconsSvg2 = _interopRequireDefault(_iconsSvg);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar dirIcon = _iconsSvg2.default.folder;\nvar soundFileIcon = _iconsSvg2.default.volumeUp;\nvar pictureFileIcon = _iconsSvg2.default.image;\nvar videoFileIcon = _iconsSvg2.default.ondemandVideo;\nvar archiveFileIcon = _iconsSvg2.default.archive;\nvar booksFileIcon = _iconsSvg2.default.book;\nvar unknownFileIcon = _iconsSvg2.default.insertDriveFile;\nvar defaultFillColor = '#424242';\nvar soundFilesExtensions = ['aac', 'aiff', 'flac', 'm4a', 'ogg', 'mp3', 'wav', 'wma'];\nvar pictureFilesExtensions = ['gif', 'png', 'jpg', 'jpeg', 'bmp', 'svg'];\nvar videoFilesExtensions = ['avi', 'flv', 'wmv', 'mov', 'mp4'];\nvar archiveFilesExtensions = ['tar', 'zip', 'gz', 'bz2', 'rar'];\nvar booksFilesExtensions = ['pdf', 'epub', 'fb2'];\n\nfunction matchFileExtensions(filename, extensions) {\n  var extensionsRegExp = '(' + extensions.join('|') + ')';\n  return extensions.some(function (o) {\n    return new RegExp('^.*.' + extensionsRegExp + '$').test(filename.toLowerCase());\n  });\n}\n\nfunction getIcon(resource) {\n  if (resource.type === 'dir') {\n    return {\n      svg: dirIcon,\n      fill: defaultFillColor\n    };\n  } else if (matchFileExtensions(resource.name, soundFilesExtensions)) {\n    return {\n      svg: soundFileIcon,\n      fill: '#e53935'\n    };\n  } else if (matchFileExtensions(resource.name, pictureFilesExtensions)) {\n    return {\n      svg: pictureFileIcon,\n      fill: '#e53935'\n    };\n  } else if (matchFileExtensions(resource.name, videoFilesExtensions)) {\n    return {\n      svg: videoFileIcon,\n      fill: '#e53935'\n    };\n  } else if (matchFileExtensions(resource.name, archiveFilesExtensions)) {\n    return {\n      svg: archiveFileIcon,\n      fill: '#616161'\n    };\n  } else if (matchFileExtensions(resource.name, booksFilesExtensions)) {\n    return {\n      svg: booksFileIcon,\n      fill: '#e53935'\n    };\n  } else {\n    return {\n      svg: unknownFileIcon,\n      fill: '#616161'\n    };\n  }\n}","map":{"version":3,"sources":["/home/ubuntu/Connor/Demo_OSU_Filemanager/node_modules/@opuscapita/react-filemanager-connector-node-v1/lib/icons.js"],"names":["Object","defineProperty","exports","value","getIcon","_iconsSvg","require","_iconsSvg2","_interopRequireDefault","obj","__esModule","default","dirIcon","folder","soundFileIcon","volumeUp","pictureFileIcon","image","videoFileIcon","ondemandVideo","archiveFileIcon","archive","booksFileIcon","book","unknownFileIcon","insertDriveFile","defaultFillColor","soundFilesExtensions","pictureFilesExtensions","videoFilesExtensions","archiveFilesExtensions","booksFilesExtensions","matchFileExtensions","filename","extensions","extensionsRegExp","join","some","o","RegExp","test","toLowerCase","resource","type","svg","fill","name"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getIcon = getIcon;\n\nvar _iconsSvg = require('./icons-svg');\n\nvar _iconsSvg2 = _interopRequireDefault(_iconsSvg);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar dirIcon = _iconsSvg2.default.folder;\nvar soundFileIcon = _iconsSvg2.default.volumeUp;\nvar pictureFileIcon = _iconsSvg2.default.image;\nvar videoFileIcon = _iconsSvg2.default.ondemandVideo;\nvar archiveFileIcon = _iconsSvg2.default.archive;\nvar booksFileIcon = _iconsSvg2.default.book;\nvar unknownFileIcon = _iconsSvg2.default.insertDriveFile;\n\nvar defaultFillColor = '#424242';\nvar soundFilesExtensions = ['aac', 'aiff', 'flac', 'm4a', 'ogg', 'mp3', 'wav', 'wma'];\nvar pictureFilesExtensions = ['gif', 'png', 'jpg', 'jpeg', 'bmp', 'svg'];\nvar videoFilesExtensions = ['avi', 'flv', 'wmv', 'mov', 'mp4'];\nvar archiveFilesExtensions = ['tar', 'zip', 'gz', 'bz2', 'rar'];\nvar booksFilesExtensions = ['pdf', 'epub', 'fb2'];\n\nfunction matchFileExtensions(filename, extensions) {\n  var extensionsRegExp = '(' + extensions.join('|') + ')';\n  return extensions.some(function (o) {\n    return new RegExp('^.*.' + extensionsRegExp + '$').test(filename.toLowerCase());\n  });\n}\n\nfunction getIcon(resource) {\n  if (resource.type === 'dir') {\n    return { svg: dirIcon, fill: defaultFillColor };\n  } else if (matchFileExtensions(resource.name, soundFilesExtensions)) {\n    return { svg: soundFileIcon, fill: '#e53935' };\n  } else if (matchFileExtensions(resource.name, pictureFilesExtensions)) {\n    return { svg: pictureFileIcon, fill: '#e53935' };\n  } else if (matchFileExtensions(resource.name, videoFilesExtensions)) {\n    return { svg: videoFileIcon, fill: '#e53935' };\n  } else if (matchFileExtensions(resource.name, archiveFilesExtensions)) {\n    return { svg: archiveFileIcon, fill: '#616161' };\n  } else if (matchFileExtensions(resource.name, booksFilesExtensions)) {\n    return { svg: booksFileIcon, fill: '#e53935' };\n  } else {\n    return { svg: unknownFileIcon, fill: '#616161' };\n  }\n}"]},"metadata":{},"sourceType":"script"}