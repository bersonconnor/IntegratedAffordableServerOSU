{"ast":null,"code":"import _slicedToArray from \"/home/ubuntu/Connor/Demo_OSU_Filemanager/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ubuntu/Connor/Demo_OSU_Filemanager/app/src/components/Modal/AddBankAccountTest.js\";\nimport React, { Component, useState } from \"react\";\nimport Popup from \"reactjs-popup\";\nimport PropTypes from 'prop-types';\nimport { AffordableClient } from \"affordable-client\";\nimport \"../../styles/buttons.css\";\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport Stripe from 'stripe';\n\nvar dotenv_1 = require(\"dotenv\");\n\ndotenv_1.config();\nvar client = new AffordableClient(); //The popup component to register bank info\n\nvar AddBankAccountTest = props => {\n  var REACT_APP_AF_BACKEND_URL = process.env.REACT_APP_AF_BACKEND_URL || window.REACT_APP_AF_BACKEND_URL;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var handleClose = () => setShow(false);\n\n  var handleShow = () => setShow(true);\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      holderName = _useState4[0],\n      setHolderName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      accountNum = _useState6[0],\n      setAccountNum = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      routeNum = _useState8[0],\n      setRouteNum = _useState8[1];\n\n  var submit = () => {\n    var api = REACT_APP_AF_BACKEND_URL + \"/stripe\" + \"/customer\";\n    var username = JSON.parse(sessionStorage.getItem('userInfo')).username;\n    var email = JSON.parse(sessionStorage.getItem('userInfo')).primaryEmail;\n    var userID = JSON.parse(sessionStorage.getItem('userInfo')).id;\n    fetch(api, {\n      //will call the POST: Customer api\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        name: username,\n        email: email,\n        id: userID\n      })\n    }).then(res => {\n      //converts the response of customer api to json\n      return res.json();\n    }).then(customer_data => {\n      //pass customer info to POST: bank api call\n      fetch(REACT_APP_AF_BACKEND_URL + \"/stripe\" + \"/bank\", {\n        //will call the POST: Customer api\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          customer_id: customer_data.id,\n          account_holder_name: holderName,\n          routing_number: routeNum,\n          account_number: accountNum,\n          id: userID //Affordable ID\n\n        })\n      });\n    });\n    setShow(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Add Bank\"), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Add Bank Account\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formHolderName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Account Holder Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: holderName,\n    onChange: e => setHolderName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formAccountNum\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Bank Account Number\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: accountNum,\n    onChange: e => setAccountNum(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formRouteNum\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Routing Number\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: routeNum,\n    onChange: e => setRouteNum(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"Add Account\"))));\n};\n\nexport default AddBankAccountTest;","map":{"version":3,"sources":["/home/ubuntu/Connor/Demo_OSU_Filemanager/app/src/components/Modal/AddBankAccountTest.js"],"names":["React","Component","useState","Popup","PropTypes","AffordableClient","Modal","Button","Form","Stripe","dotenv_1","require","config","client","AddBankAccountTest","props","REACT_APP_AF_BACKEND_URL","process","env","window","show","setShow","handleClose","handleShow","holderName","setHolderName","accountNum","setAccountNum","routeNum","setRouteNum","submit","api","username","JSON","parse","sessionStorage","getItem","email","primaryEmail","userID","id","fetch","method","headers","body","stringify","name","then","res","json","customer_data","customer_id","account_holder_name","routing_number","account_number","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport Popup from \"reactjs-popup\";\nimport PropTypes from 'prop-types'\nimport {AffordableClient} from \"affordable-client\";\nimport \"../../styles/buttons.css\";\nimport {Modal, Button,Form} from 'react-bootstrap'\nimport Stripe from 'stripe'\nconst dotenv_1 = require(\"dotenv\");\ndotenv_1.config();\n\n\nconst client = new AffordableClient();\n\n//The popup component to register bank info\nconst AddBankAccountTest = props => {\n    const REACT_APP_AF_BACKEND_URL = process.env.REACT_APP_AF_BACKEND_URL || window.REACT_APP_AF_BACKEND_URL;\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [holderName,setHolderName] = useState(''); \n    const [accountNum,setAccountNum] = useState(''); \n    const [routeNum,setRouteNum] = useState(''); \n\n    const submit=() =>{\n        const api = REACT_APP_AF_BACKEND_URL + \"/stripe\" + \"/customer\";\n        const username = JSON.parse(sessionStorage.getItem('userInfo')).username;\n        const email = JSON.parse(sessionStorage.getItem('userInfo')).primaryEmail;\n        const userID = JSON.parse(sessionStorage.getItem('userInfo')).id;\n        fetch(api, { //will call the POST: Customer api\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                name: username,\n                email: email,\n                id: userID\n            })\n        }).then(res => { //converts the response of customer api to json\n            return res.json()\n        }).then(customer_data =>{//pass customer info to POST: bank api call\n            fetch(REACT_APP_AF_BACKEND_URL + \"/stripe\" + \"/bank\", { //will call the POST: Customer api\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify({\n                    customer_id: customer_data.id,\n                    account_holder_name: holderName,\n                    routing_number: routeNum,\n                    account_number: accountNum,\n                    id:userID //Affordable ID\n                })\n            })\n        })\n        setShow(false)\n    }\n\n    return (\n        <div>\n            <Button variant=\"primary\" onClick={handleShow}>\n            Add Bank\n            </Button>\n            <Modal show={show} onHide={handleClose}>\n\n            <Modal.Header closeButton>\n                <Modal.Title>Add Bank Account</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n            <Form>\n                <Form.Group controlId=\"formHolderName\">\n                    <Form.Label>Account Holder Name</Form.Label>\n                    <Form.Control type=\"text\" value = {holderName} onChange ={e => setHolderName(e.target.value)}/>\n                </Form.Group>\n\n                <Form.Group controlId=\"formAccountNum\">\n                    <Form.Label>Bank Account Number</Form.Label>\n                    <Form.Control type=\"text\" value = {accountNum} onChange ={e => setAccountNum(e.target.value)}/>\n                </Form.Group>\n\n                <Form.Group controlId=\"formRouteNum\">\n                    <Form.Label>Routing Number</Form.Label>\n                    <Form.Control type=\"text\" value = {routeNum} onChange ={e => setRouteNum(e.target.value)}/>\n                </Form.Group>\n                </Form>\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n                </Button>\n                <Button variant=\"primary\" type= \"submit\" onClick={submit}>\n                Add Account\n                </Button>\n            </Modal.Footer>\n\n            </Modal>\n        </div>\n    )\n}\n\nexport default AddBankAccountTest\n"]},"metadata":{},"sourceType":"module"}