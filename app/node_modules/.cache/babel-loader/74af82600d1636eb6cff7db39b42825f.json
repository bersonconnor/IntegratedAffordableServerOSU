{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Connor/Demo_OSU_Filemanager/app/src/pages/MainPages/ProfileForm/ProfileForm.tsx\";\nimport React, { Component } from \"react\";\nimport swal from \"sweetalert\";\nimport { ProfileFields } from \"affordable-shared-models\";\nimport \"./scss/profile.scss\";\nimport { AffordableHttpError } from \"affordable-client\";\nimport CollapseWithHeader from \"../../../components/CollapseWithHeader\";\nimport { Input, Select } from \"./FormComponents\";\nimport { FormValidation } from \"./FormValidation\";\nimport moment from \"moment\";\nimport states from \"./data/states.json\";\n\nclass FormProps {\n  constructor() {\n    this.name = void 0;\n    this.handleSubmit = void 0;\n    this.children = void 0;\n  }\n\n}\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      name: this.props.name,\n      onSubmit: this.props.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, this.props.children, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"submit-button\",\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nfunction convertProfileToFormState(profile) {\n  var _profile$legalNames$, _profile$legalNames$2, _profile$legalNames$3, _profile$legalNames$4;\n\n  var formState = {\n    isFilledOut: false\n  };\n  formState.primaryFirstName = (_profile$legalNames$ = profile.legalNames[0]) === null || _profile$legalNames$ === void 0 ? void 0 : _profile$legalNames$.firstName;\n  formState.primaryMiddleName = (_profile$legalNames$2 = (_profile$legalNames$3 = profile.legalNames[0]) === null || _profile$legalNames$3 === void 0 ? void 0 : _profile$legalNames$3.middleName) !== null && _profile$legalNames$2 !== void 0 ? _profile$legalNames$2 : \"\";\n  formState.primaryLastName = (_profile$legalNames$4 = profile.legalNames[0]) === null || _profile$legalNames$4 === void 0 ? void 0 : _profile$legalNames$4.lastName;\n\n  if (profile.legalNames[0] && profile.legalNames[0].suffix === undefined) {\n    formState.primarySuffix = \"None\";\n  } else {\n    var _profile$legalNames$5;\n\n    formState.primarySuffix = (_profile$legalNames$5 = profile.legalNames[0]) === null || _profile$legalNames$5 === void 0 ? void 0 : _profile$legalNames$5.suffix;\n  }\n\n  if (profile.birthDate) {\n    formState.dateOfBirth = moment(profile.birthDate).format(\"YYYY-MM-DD\");\n  }\n\n  if (profile.address) {\n    var _profile$address$stre, _profile$address$city, _profile$address$stat, _profile$address$zip;\n\n    formState.streetAddress = (_profile$address$stre = profile.address.street) !== null && _profile$address$stre !== void 0 ? _profile$address$stre : \"\";\n    formState.cityAddress = (_profile$address$city = profile.address.city) !== null && _profile$address$city !== void 0 ? _profile$address$city : \"\";\n    formState.stateAddress = (_profile$address$stat = profile.address.state) !== null && _profile$address$stat !== void 0 ? _profile$address$stat : \"\";\n    formState.zipCode = (_profile$address$zip = profile.address.zip) !== null && _profile$address$zip !== void 0 ? _profile$address$zip : \"\";\n  }\n\n  if (profile.phoneNumbers) {\n    var _profile$phoneNumbers;\n\n    formState.primaryPhone = (_profile$phoneNumbers = profile.phoneNumbers[0]) !== null && _profile$phoneNumbers !== void 0 ? _profile$phoneNumbers : \"\";\n  } else {\n    formState.primaryPhone = \"\";\n  }\n\n  return formState;\n}\n\nfunction convertFormStateToProfile(state) {\n  var profile = new ProfileFields.Profile();\n  profile.legalNames = [];\n  var primaryName = new ProfileFields.LegalName();\n  primaryName.firstName = state.primaryFirstName;\n  primaryName.middleName = state.primaryMiddleName;\n  primaryName.lastName = state.primaryLastName;\n\n  if (state.primarySuffix) {\n    primaryName.suffix = ProfileFields.Suffix[state.primarySuffix];\n  }\n\n  primaryName.currentName = true;\n  profile.legalNames.push(primaryName);\n\n  if (state.dateOfBirth !== null) {\n    profile.birthDate = state.dateOfBirth;\n  }\n\n  profile.address = new ProfileFields.Address();\n  profile.address.street = state.streetAddress;\n  profile.address.city = state.cityAddress;\n  profile.address.state = state.stateAddress;\n  profile.address.zip = state.zipCode;\n  profile.phoneNumbers = new Array();\n  profile.phoneNumbers.push(state.primaryPhone);\n  return profile;\n}\n\nclass ProfileForm extends Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this.state = {\n      loading: true,\n      isFilledOut: false,\n      verified: false,\n      // Legal names\n      primaryFirstName: \"\",\n      primaryMiddleName: \"\",\n      primaryLastName: \"\",\n      primarySuffix: \"\",\n      // Birth date\n      dateOfBirth: \"\",\n      // Address\n      streetAddress: \"\",\n      cityAddress: \"\",\n      stateAddress: \"\",\n      zipCode: \"\",\n      // Phone number\n      primaryPhone: \"\" // secondaryPhone: \"\"\n\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.props.client.getProfile(this.props.userId).then(profile => {\n      var newState = convertProfileToFormState(profile);\n\n      if (this._isMounted) {\n        this.setState(newState);\n      }\n    }).catch(error => {\n      if (error instanceof AffordableHttpError) {\n        console.log(error);\n      }\n    });\n    this.setState({\n      loading: false\n    }); // this.setState(this.state);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var i = 0;\n    var isValid = true;\n    var data = new FormData();\n\n    while (event.target[i].type !== \"submit\") {\n      var fieldIsValidOrOptional = event.target[i].className.includes(\"is-valid\") || event.target[i].className.includes(\"optional\");\n\n      if (!fieldIsValidOrOptional) {\n        event.target[i].className = \"form-control is-invalid\";\n      }\n\n      isValid = isValid && fieldIsValidOrOptional;\n      data.append(event.target[i].name, event.target[i].value);\n      i++;\n    }\n\n    this.setState({\n      isFilledOut: isValid\n    });\n\n    if (isValid) {\n      // isValid\n      console.log(\"State:\");\n      console.log(this.state);\n      console.log(\"Profile:\");\n      console.log(convertFormStateToProfile(this.state));\n      this.props.client.createProfile(convertFormStateToProfile(this.state)).then(() => {\n        swal(\"Profile Saved\", \"Your profile has successfully been saved\", \"success\");\n      }).catch(error => {\n        console.log(error);\n        swal(\"There was an error saving your profile\", error.message, \"error\");\n      });\n    } else {\n      swal(\"Can't complete your profile\", \"Verify that all required fields are filled out\", \"error\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }\n    }, this.state.loading ? \"Loading...\" : /*#__PURE__*/React.createElement(Form, {\n      name: \"ProfileForm\",\n      handleSubmit: this.handleSubmit,\n      key: \"Profile-Form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CollapseWithHeader, {\n      key: \"legal-name-form\",\n      title: \"Legal Name\",\n      open: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      key: \"primary-first-name-input\",\n      inputType: \"text\",\n      title: \"First Name\",\n      name: \"given-name\",\n      placeholder: \"Enter your first name\",\n      value: this.state.primaryFirstName,\n      onChange: e => {\n        this.setState({\n          primaryFirstName: e.target.value\n        });\n      },\n      validationFunction: FormValidation.validIfNonEmpty,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      key: \"primary-middle-name-input\",\n      inputType: \"text\",\n      title: \"Middle Name\",\n      name: \"additional-name\",\n      placeholder: \"Enter your middle name\",\n      value: this.state.primaryMiddleName,\n      optional: true,\n      onChange: e => {\n        this.setState({\n          primaryMiddleName: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      key: \"primary-last-name-input\",\n      inputType: \"text\",\n      title: \"Last Name\",\n      name: \"family-name\",\n      placeholder: \"Enter your last name\",\n      value: this.state.primaryLastName,\n      onChange: e => {\n        this.setState({\n          primaryLastName: e.target.value\n        });\n      },\n      validationFunction: FormValidation.validIfNonEmpty,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      key: \"primary-suffix-input\",\n      title: \"Suffix\",\n      name: \"honorific-suffix\",\n      choices: [{\n        value: \"None\",\n        text: \"None\"\n      }, {\n        value: ProfileFields.Suffix.JR,\n        text: \"Jr\"\n      }, {\n        value: ProfileFields.Suffix.SR,\n        text: \"Sr\"\n      }, {\n        value: ProfileFields.Suffix.THIRD,\n        text: \"III\"\n      }, {\n        value: ProfileFields.Suffix.FOURTH,\n        text: \"IV\"\n      }],\n      value: this.state.primarySuffix,\n      placeholder: \"Select Suffix\",\n      onChange: e => {\n        this.setState({\n          primarySuffix: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(CollapseWithHeader, {\n      key: \"date-of-birth-form\",\n      title: \"Birthdate\",\n      open: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      key: \"date-of-birth-input\",\n      inputType: \"date\",\n      title: \"Date of Birth\",\n      name: \"birthdate\",\n      placeholder: \"Enter your birthday\",\n      value: this.state.dateOfBirth,\n      validationFunction: FormValidation.validIfNonEmpty,\n      onChange: e => {\n        this.setState({\n          dateOfBirth: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(CollapseWithHeader, {\n      key: \"address-form\",\n      title: \"Address\",\n      open: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      key: \"street-address-input\",\n      inputType: \"text\",\n      title: \"Street\",\n      name: \"streetAddress\",\n      placeholder: \"Enter your Street\",\n      value: this.state.streetAddress,\n      onChange: e => {\n        this.setState({\n          streetAddress: e.target.value\n        });\n      },\n      validationFunction: FormValidation.validIfNonEmpty,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      key: \"city-address-input\",\n      inputType: \"text\",\n      title: \"City\",\n      name: \"cityAddress\",\n      placeholder: \"Enter your City\",\n      value: this.state.cityAddress,\n      onChange: e => {\n        this.setState({\n          cityAddress: e.target.value\n        });\n      },\n      validationFunction: FormValidation.validIfNonEmpty,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      key: \"state-address-input\",\n      title: \"State\",\n      name: \"stateAddress\",\n      choices: states.map(s => {\n        return {\n          text: s.name,\n          value: s.abbreviation\n        };\n      }),\n      placeholder: \"Select State\",\n      value: this.state.stateAddress,\n      onChange: e => {\n        this.setState({\n          stateAddress: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      key: \"zip-code-input\",\n      inputType: \"number\",\n      title: \"Zip Code\",\n      name: \"zipCode\",\n      placeholder: \"Enter your Zip Code\",\n      value: this.state.zipCode,\n      onChange: e => {\n        this.setState({\n          zipCode: e.target.value\n        });\n      },\n      validationFunction: value => {\n        return FormValidation.validIfOfLength(value, 5) || FormValidation.validIfOfLength(value, 9);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(CollapseWithHeader, {\n      key: \"phone-language-form\",\n      title: \"Phone Number\",\n      open: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      inputType: \"number\",\n      title: \"Primary Phone\",\n      name: \"primaryPhone\",\n      placeholder: \"Enter Your Primary Phone Number\",\n      value: this.state.primaryPhone,\n      onChange: e => {\n        this.setState({\n          primaryPhone: e.target.value\n        });\n      },\n      validationFunction: value => FormValidation.validIfOfLength(value, 10) // error=\"Phone Numbers should be 10 digits long\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nexport default ProfileForm;","map":{"version":3,"sources":["/home/ubuntu/Connor/Demo_OSU_Filemanager/app/src/pages/MainPages/ProfileForm/ProfileForm.tsx"],"names":["React","Component","swal","ProfileFields","AffordableHttpError","CollapseWithHeader","Input","Select","FormValidation","moment","states","FormProps","name","handleSubmit","children","Form","constructor","props","render","convertProfileToFormState","profile","formState","isFilledOut","primaryFirstName","legalNames","firstName","primaryMiddleName","middleName","primaryLastName","lastName","suffix","undefined","primarySuffix","birthDate","dateOfBirth","format","address","streetAddress","street","cityAddress","city","stateAddress","state","zipCode","zip","phoneNumbers","primaryPhone","convertFormStateToProfile","Profile","primaryName","LegalName","Suffix","currentName","push","Address","Array","ProfileForm","_isMounted","loading","verified","bind","componentDidMount","client","getProfile","userId","then","newState","setState","catch","error","console","log","componentWillUnmount","event","preventDefault","i","isValid","data","FormData","target","type","fieldIsValidOrOptional","className","includes","append","value","createProfile","message","e","validIfNonEmpty","text","JR","SR","THIRD","FOURTH","map","s","abbreviation","validIfOfLength"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAO,qBAAP;AACA,SAA2BC,mBAA3B,QAAsD,mBAAtD;AACA,OAAOC,kBAAP,MAA+B,wCAA/B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA4C,kBAA5C;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAGA,MAAMC,SAAN,CAAgB;AAAA;AAAA,SACdC,IADc;AAAA,SAEdC,YAFc;AAAA,SAGdC,QAHc;AAAA;;AAAA;;AAMhB,MAAMC,IAAN,SAAmBd,SAAnB,CAA4C;AAC1Ce,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,MAAM,GAAoB;AACxB,wBACE;AAAM,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWL,IAAvB;AAA6B,MAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWJ,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKI,KAAL,CAAWH,QADd,eAEE;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAiC,MAAA,IAAI,EAAC,QAAtC;AAA+C,MAAA,KAAK,EAAC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAZyC;;AA2C5C,SAASK,yBAAT,CACEC,OADF,EAEoB;AAAA;;AAClB,MAAMC,SAAS,GAAG;AAChBC,IAAAA,WAAW,EAAE;AADG,GAAlB;AAIAD,EAAAA,SAAS,CAACE,gBAAV,2BAA6BH,OAAO,CAACI,UAAR,CAAmB,CAAnB,CAA7B,yDAA6B,qBAAuBC,SAApD;AACAJ,EAAAA,SAAS,CAACK,iBAAV,qDAA8BN,OAAO,CAACI,UAAR,CAAmB,CAAnB,CAA9B,0DAA8B,sBAAuBG,UAArD,yEAAmE,EAAnE;AACAN,EAAAA,SAAS,CAACO,eAAV,4BAA4BR,OAAO,CAACI,UAAR,CAAmB,CAAnB,CAA5B,0DAA4B,sBAAuBK,QAAnD;;AACA,MAAIT,OAAO,CAACI,UAAR,CAAmB,CAAnB,KAAyBJ,OAAO,CAACI,UAAR,CAAmB,CAAnB,EAAsBM,MAAtB,KAAiCC,SAA9D,EAAyE;AACvEV,IAAAA,SAAS,CAACW,aAAV,GAA0B,MAA1B;AACD,GAFD,MAEO;AAAA;;AACLX,IAAAA,SAAS,CAACW,aAAV,4BAA0BZ,OAAO,CAACI,UAAR,CAAmB,CAAnB,CAA1B,0DAA0B,sBAAuBM,MAAjD;AACD;;AAED,MAAIV,OAAO,CAACa,SAAZ,EAAuB;AACrBZ,IAAAA,SAAS,CAACa,WAAV,GAAwBzB,MAAM,CAACW,OAAO,CAACa,SAAT,CAAN,CAA0BE,MAA1B,CAAiC,YAAjC,CAAxB;AACD;;AAED,MAAIf,OAAO,CAACgB,OAAZ,EAAqB;AAAA;;AACnBf,IAAAA,SAAS,CAACgB,aAAV,4BAA0BjB,OAAO,CAACgB,OAAR,CAAgBE,MAA1C,yEAAoD,EAApD;AACAjB,IAAAA,SAAS,CAACkB,WAAV,4BAAwBnB,OAAO,CAACgB,OAAR,CAAgBI,IAAxC,yEAAgD,EAAhD;AACAnB,IAAAA,SAAS,CAACoB,YAAV,4BAAyBrB,OAAO,CAACgB,OAAR,CAAgBM,KAAzC,yEAAkD,EAAlD;AACArB,IAAAA,SAAS,CAACsB,OAAV,2BAAoBvB,OAAO,CAACgB,OAAR,CAAgBQ,GAApC,uEAA2C,EAA3C;AACD;;AAED,MAAIxB,OAAO,CAACyB,YAAZ,EAA0B;AAAA;;AACxBxB,IAAAA,SAAS,CAACyB,YAAV,4BAAyB1B,OAAO,CAACyB,YAAR,CAAqB,CAArB,CAAzB,yEAAoD,EAApD;AACD,GAFD,MAEO;AACLxB,IAAAA,SAAS,CAACyB,YAAV,GAAyB,EAAzB;AACD;;AAED,SAAOzB,SAAP;AACD;;AAED,SAAS0B,yBAAT,CACEL,KADF,EAEyB;AACvB,MAAMtB,OAAO,GAAG,IAAIjB,aAAa,CAAC6C,OAAlB,EAAhB;AACA5B,EAAAA,OAAO,CAACI,UAAR,GAAqB,EAArB;AACA,MAAMyB,WAAW,GAAG,IAAI9C,aAAa,CAAC+C,SAAlB,EAApB;AACAD,EAAAA,WAAW,CAACxB,SAAZ,GAAwBiB,KAAK,CAACnB,gBAA9B;AACA0B,EAAAA,WAAW,CAACtB,UAAZ,GAAyBe,KAAK,CAAChB,iBAA/B;AACAuB,EAAAA,WAAW,CAACpB,QAAZ,GAAuBa,KAAK,CAACd,eAA7B;;AACA,MAAIc,KAAK,CAACV,aAAV,EAAyB;AACvBiB,IAAAA,WAAW,CAACnB,MAAZ,GAAqB3B,aAAa,CAACgD,MAAd,CAAqBT,KAAK,CAACV,aAA3B,CAArB;AACD;;AACDiB,EAAAA,WAAW,CAACG,WAAZ,GAA0B,IAA1B;AACAhC,EAAAA,OAAO,CAACI,UAAR,CAAmB6B,IAAnB,CAAwBJ,WAAxB;;AAEA,MAAIP,KAAK,CAACR,WAAN,KAAsB,IAA1B,EAAgC;AAC9Bd,IAAAA,OAAO,CAACa,SAAR,GAAoBS,KAAK,CAACR,WAA1B;AACD;;AAEDd,EAAAA,OAAO,CAACgB,OAAR,GAAkB,IAAIjC,aAAa,CAACmD,OAAlB,EAAlB;AACAlC,EAAAA,OAAO,CAACgB,OAAR,CAAgBE,MAAhB,GAAyBI,KAAK,CAACL,aAA/B;AACAjB,EAAAA,OAAO,CAACgB,OAAR,CAAgBI,IAAhB,GAAuBE,KAAK,CAACH,WAA7B;AACAnB,EAAAA,OAAO,CAACgB,OAAR,CAAgBM,KAAhB,GAAwBA,KAAK,CAACD,YAA9B;AACArB,EAAAA,OAAO,CAACgB,OAAR,CAAgBQ,GAAhB,GAAsBF,KAAK,CAACC,OAA5B;AAEAvB,EAAAA,OAAO,CAACyB,YAAR,GAAuB,IAAIU,KAAJ,EAAvB;AACAnC,EAAAA,OAAO,CAACyB,YAAR,CAAqBQ,IAArB,CAA0BX,KAAK,CAACI,YAAhC;AACA,SAAO1B,OAAP;AACD;;AAED,MAAMoC,WAAN,SAA0BvD,SAA1B,CAAwE;AAGtEe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAFXwC,UAEW,GAFE,KAEF;AAEjB,SAAKf,KAAL,GAAa;AACXgB,MAAAA,OAAO,EAAE,IADE;AAEXpC,MAAAA,WAAW,EAAE,KAFF;AAGXqC,MAAAA,QAAQ,EAAE,KAHC;AAIX;AACApC,MAAAA,gBAAgB,EAAE,EALP;AAMXG,MAAAA,iBAAiB,EAAE,EANR;AAOXE,MAAAA,eAAe,EAAE,EAPN;AAQXI,MAAAA,aAAa,EAAE,EARJ;AAUX;AACAE,MAAAA,WAAW,EAAE,EAXF;AAaX;AACAG,MAAAA,aAAa,EAAE,EAdJ;AAeXE,MAAAA,WAAW,EAAE,EAfF;AAgBXE,MAAAA,YAAY,EAAE,EAhBH;AAiBXE,MAAAA,OAAO,EAAE,EAjBE;AAmBX;AACAG,MAAAA,YAAY,EAAE,EApBH,CAqBX;;AArBW,KAAb;AAwBA,SAAKjC,YAAL,GAAoB,KAAKA,YAAL,CAAkB+C,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAS;AACxB,SAAKJ,UAAL,GAAkB,IAAlB;AACA,SAAKxC,KAAL,CAAW6C,MAAX,CAAkBC,UAAlB,CAA6B,KAAK9C,KAAL,CAAW+C,MAAxC,EACGC,IADH,CACS7C,OAAD,IAAoC;AACxC,UAAM8C,QAAQ,GAAG/C,yBAAyB,CAACC,OAAD,CAA1C;;AACA,UAAI,KAAKqC,UAAT,EAAqB;AACnB,aAAKU,QAAL,CAAcD,QAAd;AACD;AACF,KANH,EAOGE,KAPH,CAOSC,KAAK,IAAI;AACd,UAAIA,KAAK,YAAYjE,mBAArB,EAA0C;AACxCkE,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,KAXH;AAYA,SAAKF,QAAL,CAAc;AAAET,MAAAA,OAAO,EAAE;AAAX,KAAd,EAdwB,CAexB;AACD;;AAEDc,EAAAA,oBAAoB,GAAS;AAC3B,SAAKf,UAAL,GAAkB,KAAlB;AACD;;AACD5C,EAAAA,YAAY,CAAC4D,KAAD,EAAiC;AAC3CA,IAAAA,KAAK,CAACC,cAAN;AAEA,QAAIC,CAAC,GAAG,CAAR;AACA,QAAIC,OAAO,GAAG,IAAd;AACA,QAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;;AACA,WAAOL,KAAK,CAACM,MAAN,CAAaJ,CAAb,EAAgBK,IAAhB,KAAyB,QAAhC,EAA0C;AACxC,UAAMC,sBAAsB,GAC1BR,KAAK,CAACM,MAAN,CAAaJ,CAAb,EAAgBO,SAAhB,CAA0BC,QAA1B,CAAmC,UAAnC,KACAV,KAAK,CAACM,MAAN,CAAaJ,CAAb,EAAgBO,SAAhB,CAA0BC,QAA1B,CAAmC,UAAnC,CAFF;;AAGA,UAAI,CAACF,sBAAL,EAA6B;AAC3BR,QAAAA,KAAK,CAACM,MAAN,CAAaJ,CAAb,EAAgBO,SAAhB,GAA4B,yBAA5B;AACD;;AACDN,MAAAA,OAAO,GAAGA,OAAO,IAAIK,sBAArB;AACAJ,MAAAA,IAAI,CAACO,MAAL,CAAYX,KAAK,CAACM,MAAN,CAAaJ,CAAb,EAAgB/D,IAA5B,EAAkC6D,KAAK,CAACM,MAAN,CAAaJ,CAAb,EAAgBU,KAAlD;AACAV,MAAAA,CAAC;AACF;;AACD,SAAKR,QAAL,CAAc;AAAE7C,MAAAA,WAAW,EAAEsD;AAAf,KAAd;;AACA,QAAIA,OAAJ,EAAa;AACX;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK7B,KAAjB;AACA4B,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYxB,yBAAyB,CAAC,KAAKL,KAAN,CAArC;AAEA,WAAKzB,KAAL,CAAW6C,MAAX,CAAkBwB,aAAlB,CACEvC,yBAAyB,CAAC,KAAKL,KAAN,CAD3B,EAGGuB,IAHH,CAGQ,MAAM;AACV/D,QAAAA,IAAI,CACF,eADE,EAEF,0CAFE,EAGF,SAHE,CAAJ;AAKD,OATH,EAUGkE,KAVH,CAUSC,KAAK,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAnE,QAAAA,IAAI,CACF,wCADE,EAEFmE,KAAK,CAACkB,OAFJ,EAGF,OAHE,CAAJ;AAKD,OAjBH;AAkBD,KAzBD,MAyBO;AACLrF,MAAAA,IAAI,CACF,6BADE,EAEF,gDAFE,EAGF,OAHE,CAAJ;AAKD;AACF;;AAEDgB,EAAAA,MAAM,GAAoB;AACxB,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKwB,KAAL,CAAWgB,OAAX,GACC,YADD,gBAGC,oBAAC,IAAD;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,YAAY,EAAE,KAAK7C,YAFrB;AAGE,MAAA,GAAG,EAAC,cAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,kBAAD;AACE,MAAA,GAAG,EAAC,iBADN;AAEE,MAAA,KAAK,EAAC,YAFR;AAGE,MAAA,IAAI,EAAE,IAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,KAAD;AACE,MAAA,GAAG,EAAC,0BADN;AAEE,MAAA,SAAS,EAAE,MAFb;AAGE,MAAA,KAAK,EAAE,YAHT;AAIE,MAAA,IAAI,EAAE,YAJR;AAKE,MAAA,WAAW,EAAE,uBALf;AAME,MAAA,KAAK,EAAE,KAAK6B,KAAL,CAAWnB,gBANpB;AAOE,MAAA,QAAQ,EAAGiE,CAAD,IAA4C;AACpD,aAAKrB,QAAL,CAAc;AAAE5C,UAAAA,gBAAgB,EAAEiE,CAAC,CAACT,MAAF,CAASM;AAA7B,SAAd;AACD,OATH;AAUE,MAAA,kBAAkB,EAAE7E,cAAc,CAACiF,eAVrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAiBE,oBAAC,KAAD;AACE,MAAA,GAAG,EAAC,2BADN;AAEE,MAAA,SAAS,EAAE,MAFb;AAGE,MAAA,KAAK,EAAE,aAHT;AAIE,MAAA,IAAI,EAAE,iBAJR;AAKE,MAAA,WAAW,EAAE,wBALf;AAME,MAAA,KAAK,EAAE,KAAK/C,KAAL,CAAWhB,iBANpB;AAOE,MAAA,QAAQ,EAAE,IAPZ;AAQE,MAAA,QAAQ,EAAG8D,CAAD,IAA4C;AACpD,aAAKrB,QAAL,CAAc;AAAEzC,UAAAA,iBAAiB,EAAE8D,CAAC,CAACT,MAAF,CAASM;AAA9B,SAAd;AACD,OAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,eA6BE,oBAAC,KAAD;AACE,MAAA,GAAG,EAAC,yBADN;AAEE,MAAA,SAAS,EAAE,MAFb;AAGE,MAAA,KAAK,EAAE,WAHT;AAIE,MAAA,IAAI,EAAE,aAJR;AAKE,MAAA,WAAW,EAAE,sBALf;AAME,MAAA,KAAK,EAAE,KAAK3C,KAAL,CAAWd,eANpB;AAOE,MAAA,QAAQ,EAAE4D,CAAC,IAAI;AACb,aAAKrB,QAAL,CAAc;AAAEvC,UAAAA,eAAe,EAAE4D,CAAC,CAACT,MAAF,CAASM;AAA5B,SAAd;AACD,OATH;AAUE,MAAA,kBAAkB,EAAE7E,cAAc,CAACiF,eAVrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BF,eAyCE,oBAAC,MAAD;AACE,MAAA,GAAG,EAAC,sBADN;AAEE,MAAA,KAAK,EAAE,QAFT;AAGE,MAAA,IAAI,EAAE,kBAHR;AAIE,MAAA,OAAO,EAAE,CACP;AAAEJ,QAAAA,KAAK,EAAE,MAAT;AAAiBK,QAAAA,IAAI,EAAE;AAAvB,OADO,EAEP;AAAEL,QAAAA,KAAK,EAAElF,aAAa,CAACgD,MAAd,CAAqBwC,EAA9B;AAAkCD,QAAAA,IAAI,EAAE;AAAxC,OAFO,EAGP;AAAEL,QAAAA,KAAK,EAAElF,aAAa,CAACgD,MAAd,CAAqByC,EAA9B;AAAkCF,QAAAA,IAAI,EAAE;AAAxC,OAHO,EAIP;AAAEL,QAAAA,KAAK,EAAElF,aAAa,CAACgD,MAAd,CAAqB0C,KAA9B;AAAqCH,QAAAA,IAAI,EAAE;AAA3C,OAJO,EAKP;AAAEL,QAAAA,KAAK,EAAElF,aAAa,CAACgD,MAAd,CAAqB2C,MAA9B;AAAsCJ,QAAAA,IAAI,EAAE;AAA5C,OALO,CAJX;AAWE,MAAA,KAAK,EAAE,KAAKhD,KAAL,CAAWV,aAXpB;AAYE,MAAA,WAAW,EAAE,eAZf;AAaE,MAAA,QAAQ,EAAGwD,CAAD,IAA6C;AACrD,aAAKrB,QAAL,CAAc;AAAEnC,UAAAA,aAAa,EAAEwD,CAAC,CAACT,MAAF,CAASM;AAA1B,SAAd;AACD,OAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzCF,CALF,eAiEE,oBAAC,kBAAD;AACE,MAAA,GAAG,EAAC,oBADN;AAEE,MAAA,KAAK,EAAC,WAFR;AAGE,MAAA,IAAI,EAAE,IAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,KAAD;AACE,MAAA,GAAG,EAAC,qBADN;AAEE,MAAA,SAAS,EAAE,MAFb;AAGE,MAAA,KAAK,EAAE,eAHT;AAIE,MAAA,IAAI,EAAE,WAJR;AAKE,MAAA,WAAW,EAAE,qBALf;AAME,MAAA,KAAK,EAAE,KAAK3C,KAAL,CAAWR,WANpB;AAOE,MAAA,kBAAkB,EAAE1B,cAAc,CAACiF,eAPrC;AAQE,MAAA,QAAQ,EAAGD,CAAD,IAAkD;AAC1D,aAAKrB,QAAL,CAAc;AAAEjC,UAAAA,WAAW,EAAEsD,CAAC,CAACT,MAAF,CAASM;AAAxB,SAAd;AACD,OAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAjEF,eAoFE,oBAAC,kBAAD;AAAoB,MAAA,GAAG,EAAC,cAAxB;AAAuC,MAAA,KAAK,EAAC,SAA7C;AAAuD,MAAA,IAAI,EAAE,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,GAAG,EAAC,sBADN;AAEE,MAAA,SAAS,EAAE,MAFb;AAGE,MAAA,KAAK,EAAE,QAHT;AAIE,MAAA,IAAI,EAAE,eAJR;AAKE,MAAA,WAAW,EAAE,mBALf;AAME,MAAA,KAAK,EAAE,KAAK3C,KAAL,CAAWL,aANpB;AAOE,MAAA,QAAQ,EAAGmD,CAAD,IAAkD;AAC1D,aAAKrB,QAAL,CAAc;AAAE9B,UAAAA,aAAa,EAAEmD,CAAC,CAACT,MAAF,CAASM;AAA1B,SAAd;AACD,OATH;AAUE,MAAA,kBAAkB,EAAE7E,cAAc,CAACiF,eAVrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAaE,oBAAC,KAAD;AACE,MAAA,GAAG,EAAE,oBADP;AAEE,MAAA,SAAS,EAAE,MAFb;AAGE,MAAA,KAAK,EAAE,MAHT;AAIE,MAAA,IAAI,EAAE,aAJR;AAKE,MAAA,WAAW,EAAE,iBALf;AAME,MAAA,KAAK,EAAE,KAAK/C,KAAL,CAAWH,WANpB;AAOE,MAAA,QAAQ,EAAGiD,CAAD,IAAkD;AAC1D,aAAKrB,QAAL,CAAc;AAAE5B,UAAAA,WAAW,EAAEiD,CAAC,CAACT,MAAF,CAASM;AAAxB,SAAd;AACD,OATH;AAUE,MAAA,kBAAkB,EAAE7E,cAAc,CAACiF,eAVrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,eAyBE,oBAAC,MAAD;AACE,MAAA,GAAG,EAAE,qBADP;AAEE,MAAA,KAAK,EAAE,OAFT;AAGE,MAAA,IAAI,EAAE,cAHR;AAIE,MAAA,OAAO,EAAE/E,MAAM,CAACqF,GAAP,CACNC,CAAD,IAAqB;AACnB,eAAO;AAAEN,UAAAA,IAAI,EAAEM,CAAC,CAACpF,IAAV;AAAgByE,UAAAA,KAAK,EAAEW,CAAC,CAACC;AAAzB,SAAP;AACD,OAHM,CAJX;AASE,MAAA,WAAW,EAAE,cATf;AAUE,MAAA,KAAK,EAAE,KAAKvD,KAAL,CAAWD,YAVpB;AAWE,MAAA,QAAQ,EAAG+C,CAAD,IAAmD;AAC3D,aAAKrB,QAAL,CAAc;AAAE1B,UAAAA,YAAY,EAAE+C,CAAC,CAACT,MAAF,CAASM;AAAzB,SAAd;AACD,OAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBF,eAwCE,oBAAC,KAAD;AACE,MAAA,GAAG,EAAC,gBADN;AAEE,MAAA,SAAS,EAAE,QAFb;AAGE,MAAA,KAAK,EAAE,UAHT;AAIE,MAAA,IAAI,EAAE,SAJR;AAKE,MAAA,WAAW,EAAE,qBALf;AAME,MAAA,KAAK,EAAE,KAAK3C,KAAL,CAAWC,OANpB;AAOE,MAAA,QAAQ,EAAG6C,CAAD,IAAkD;AAC1D,aAAKrB,QAAL,CAAc;AAAExB,UAAAA,OAAO,EAAE6C,CAAC,CAACT,MAAF,CAASM;AAApB,SAAd;AACD,OATH;AAUE,MAAA,kBAAkB,EAAEA,KAAK,IAAI;AAC3B,eACE7E,cAAc,CAAC0F,eAAf,CAA+Bb,KAA/B,EAAsC,CAAtC,KACA7E,cAAc,CAAC0F,eAAf,CAA+Bb,KAA/B,EAAsC,CAAtC,CAFF;AAID,OAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCF,CApFF,eA+IE,oBAAC,kBAAD;AACE,MAAA,GAAG,EAAC,qBADN;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,IAAI,EAAE,IAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAE,QADb;AAEE,MAAA,KAAK,EAAE,eAFT;AAGE,MAAA,IAAI,EAAE,cAHR;AAIE,MAAA,WAAW,EAAE,iCAJf;AAKE,MAAA,KAAK,EAAE,KAAK3C,KAAL,CAAWI,YALpB;AAME,MAAA,QAAQ,EAAG0C,CAAD,IAAkD;AAC1D,aAAKrB,QAAL,CAAc;AAAErB,UAAAA,YAAY,EAAE0C,CAAC,CAACT,MAAF,CAASM;AAAzB,SAAd;AACD,OARH;AASE,MAAA,kBAAkB,EAAEA,KAAK,IACvB7E,cAAc,CAAC0F,eAAf,CAA+Bb,KAA/B,EAAsC,EAAtC,CAVJ,CAYE;AAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CA/IF,CATJ,CADF;AAiLD;;AA3RqE;;AA6RxE,eAAe7B,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport swal from \"sweetalert\";\nimport { ProfileFields } from \"affordable-shared-models\";\nimport \"./scss/profile.scss\";\nimport { AffordableClient, AffordableHttpError } from \"affordable-client\";\nimport CollapseWithHeader from \"../../../components/CollapseWithHeader\";\nimport { Input, Select, SelectOption } from \"./FormComponents\";\nimport { FormValidation } from \"./FormValidation\";\nimport moment from \"moment\";\nimport states from \"./data/states.json\";\nimport { UserInfoProps } from \"../../../App\";\n\nclass FormProps {\n  name: string;\n  handleSubmit: (any) => void;\n  children: React.ReactNode;\n}\n\nclass Form extends Component<FormProps, {}> {\n  constructor(props) {\n    super(props);\n  }\n\n  render(): React.ReactNode {\n    return (\n      <form name={this.props.name} onSubmit={this.props.handleSubmit}>\n        {this.props.children}\n        <input className=\"submit-button\" type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\ninterface ProfileFormState {\n  loading: boolean;\n  isFilledOut: boolean;\n  verified: boolean;\n  // Legal Name Form\n  primaryFirstName: string;\n  primaryMiddleName: string;\n  primaryLastName: string;\n  primarySuffix?: string;\n\n  // Birth date\n  dateOfBirth: string;\n\n  // Address\n  streetAddress: string;\n  cityAddress: string;\n  stateAddress: string;\n  zipCode: string;\n\n  // Phone and language\n  primaryPhone: string;\n}\n\ninterface ProfileFormProps {\n  userId: number;\n  client: AffordableClient;\n}\n\nfunction convertProfileToFormState(\n  profile: ProfileFields.Profile\n): ProfileFormState {\n  const formState = {\n    isFilledOut: false\n  } as ProfileFormState;\n\n  formState.primaryFirstName = profile.legalNames[0]?.firstName;\n  formState.primaryMiddleName = profile.legalNames[0]?.middleName ?? \"\";\n  formState.primaryLastName = profile.legalNames[0]?.lastName;\n  if (profile.legalNames[0] && profile.legalNames[0].suffix === undefined) {\n    formState.primarySuffix = \"None\";\n  } else {\n    formState.primarySuffix = profile.legalNames[0]?.suffix;\n  }\n\n  if (profile.birthDate) {\n    formState.dateOfBirth = moment(profile.birthDate).format(\"YYYY-MM-DD\");\n  }\n\n  if (profile.address) {\n    formState.streetAddress = profile.address.street ?? \"\";\n    formState.cityAddress = profile.address.city ?? \"\";\n    formState.stateAddress = profile.address.state ?? \"\";\n    formState.zipCode = profile.address.zip ?? \"\";\n  }\n\n  if (profile.phoneNumbers) {\n    formState.primaryPhone = profile.phoneNumbers[0] ?? \"\";\n  } else {\n    formState.primaryPhone = \"\";\n  }\n\n  return formState;\n}\n\nfunction convertFormStateToProfile(\n  state: ProfileFormState\n): ProfileFields.Profile {\n  const profile = new ProfileFields.Profile();\n  profile.legalNames = [];\n  const primaryName = new ProfileFields.LegalName();\n  primaryName.firstName = state.primaryFirstName;\n  primaryName.middleName = state.primaryMiddleName;\n  primaryName.lastName = state.primaryLastName;\n  if (state.primarySuffix) {\n    primaryName.suffix = ProfileFields.Suffix[state.primarySuffix];\n  }\n  primaryName.currentName = true;\n  profile.legalNames.push(primaryName);\n\n  if (state.dateOfBirth !== null) {\n    profile.birthDate = state.dateOfBirth;\n  }\n\n  profile.address = new ProfileFields.Address();\n  profile.address.street = state.streetAddress;\n  profile.address.city = state.cityAddress;\n  profile.address.state = state.stateAddress;\n  profile.address.zip = state.zipCode;\n\n  profile.phoneNumbers = new Array<string>();\n  profile.phoneNumbers.push(state.primaryPhone);\n  return profile;\n}\n\nclass ProfileForm extends Component<ProfileFormProps, ProfileFormState> {\n  private _isMounted = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      isFilledOut: false,\n      verified: false,\n      // Legal names\n      primaryFirstName: \"\",\n      primaryMiddleName: \"\",\n      primaryLastName: \"\",\n      primarySuffix: \"\",\n\n      // Birth date\n      dateOfBirth: \"\",\n\n      // Address\n      streetAddress: \"\",\n      cityAddress: \"\",\n      stateAddress: \"\",\n      zipCode: \"\",\n\n      // Phone number\n      primaryPhone: \"\",\n      // secondaryPhone: \"\"\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount(): void {\n    this._isMounted = true;\n    this.props.client.getProfile(this.props.userId)\n      .then((profile: ProfileFields.Profile) => {\n        const newState = convertProfileToFormState(profile);\n        if (this._isMounted) {\n          this.setState(newState);\n        }\n      })\n      .catch(error => {\n        if (error instanceof AffordableHttpError) {\n          console.log(error as AffordableHttpError);\n        }\n      });\n    this.setState({ loading: false });\n    // this.setState(this.state);\n  }\n\n  componentWillUnmount(): void {\n    this._isMounted = false;\n  }\n  handleSubmit(event: React.ChangeEvent): void {\n    event.preventDefault();\n\n    let i = 0;\n    let isValid = true;\n    const data = new FormData();\n    while (event.target[i].type !== \"submit\") {\n      const fieldIsValidOrOptional =\n        event.target[i].className.includes(\"is-valid\") ||\n        event.target[i].className.includes(\"optional\");\n      if (!fieldIsValidOrOptional) {\n        event.target[i].className = \"form-control is-invalid\";\n      }\n      isValid = isValid && fieldIsValidOrOptional;\n      data.append(event.target[i].name, event.target[i].value);\n      i++;\n    }\n    this.setState({ isFilledOut: isValid });\n    if (isValid) {\n      // isValid\n      console.log(\"State:\");\n      console.log(this.state);\n      console.log(\"Profile:\");\n      console.log(convertFormStateToProfile(this.state));\n\n      this.props.client.createProfile(\n        convertFormStateToProfile(this.state)\n      )\n        .then(() => {\n          swal(\n            \"Profile Saved\",\n            \"Your profile has successfully been saved\",\n            \"success\"\n          );\n        })\n        .catch(error => {\n          console.log(error);\n          swal(\n            \"There was an error saving your profile\",\n            error.message,\n            \"error\"\n          );\n        });\n    } else {\n      swal(\n        \"Can't complete your profile\",\n        \"Verify that all required fields are filled out\",\n        \"error\"\n      );\n    }\n  }\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"col\">\n        {/* <Prompt\n          when={!this.state.isFilledOut}\n          message=\"Are you sure you want to leave this page? All unsaved data will be lost.\"\n        /> */}\n        {/* <h1>Profile</h1> */}\n        {this.state.loading ? (\n          \"Loading...\"\n        ) : (\n          <Form\n            name=\"ProfileForm\"\n            handleSubmit={this.handleSubmit}\n            key=\"Profile-Form\"\n          >\n            <CollapseWithHeader\n              key=\"legal-name-form\"\n              title=\"Legal Name\"\n              open={true}\n            >\n              <Input\n                key=\"primary-first-name-input\"\n                inputType={\"text\"}\n                title={\"First Name\"}\n                name={\"given-name\"}\n                placeholder={\"Enter your first name\"}\n                value={this.state.primaryFirstName}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  this.setState({ primaryFirstName: e.target.value });\n                }}\n                validationFunction={FormValidation.validIfNonEmpty}\n              />\n              <Input\n                key=\"primary-middle-name-input\"\n                inputType={\"text\"}\n                title={\"Middle Name\"}\n                name={\"additional-name\"}\n                placeholder={\"Enter your middle name\"}\n                value={this.state.primaryMiddleName}\n                optional={true}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  this.setState({ primaryMiddleName: e.target.value });\n                }}\n              />\n              <Input\n                key=\"primary-last-name-input\"\n                inputType={\"text\"}\n                title={\"Last Name\"}\n                name={\"family-name\"}\n                placeholder={\"Enter your last name\"}\n                value={this.state.primaryLastName}\n                onChange={e => {\n                  this.setState({ primaryLastName: e.target.value });\n                }}\n                validationFunction={FormValidation.validIfNonEmpty}\n              />\n              <Select\n                key=\"primary-suffix-input\"\n                title={\"Suffix\"}\n                name={\"honorific-suffix\"}\n                choices={[\n                  { value: \"None\", text: \"None\" },\n                  { value: ProfileFields.Suffix.JR, text: \"Jr\" },\n                  { value: ProfileFields.Suffix.SR, text: \"Sr\" },\n                  { value: ProfileFields.Suffix.THIRD, text: \"III\" },\n                  { value: ProfileFields.Suffix.FOURTH, text: \"IV\" }\n                ]}\n                value={this.state.primarySuffix}\n                placeholder={\"Select Suffix\"}\n                onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                  this.setState({ primarySuffix: e.target.value });\n                }}\n              />\n            </CollapseWithHeader>\n\n            <CollapseWithHeader\n              key=\"date-of-birth-form\"\n              title=\"Birthdate\"\n              open={true}\n            >\n              <Input\n                key=\"date-of-birth-input\"\n                inputType={\"date\"}\n                title={\"Date of Birth\"}\n                name={\"birthdate\"}\n                placeholder={\"Enter your birthday\"}\n                value={this.state.dateOfBirth}\n                validationFunction={FormValidation.validIfNonEmpty}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>): void => {\n                  this.setState({ dateOfBirth: e.target.value });\n                }}\n              />\n            </CollapseWithHeader>\n\n            <CollapseWithHeader key=\"address-form\" title=\"Address\" open={true}>\n              <Input\n                key=\"street-address-input\"\n                inputType={\"text\"}\n                title={\"Street\"}\n                name={\"streetAddress\"}\n                placeholder={\"Enter your Street\"}\n                value={this.state.streetAddress}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>): void => {\n                  this.setState({ streetAddress: e.target.value });\n                }}\n                validationFunction={FormValidation.validIfNonEmpty}\n              />\n              <Input\n                key={\"city-address-input\"}\n                inputType={\"text\"}\n                title={\"City\"}\n                name={\"cityAddress\"}\n                placeholder={\"Enter your City\"}\n                value={this.state.cityAddress}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>): void => {\n                  this.setState({ cityAddress: e.target.value });\n                }}\n                validationFunction={FormValidation.validIfNonEmpty}\n              />\n              <Select\n                key={\"state-address-input\"}\n                title={\"State\"}\n                name={\"stateAddress\"}\n                choices={states.map(\n                  (s): SelectOption => {\n                    return { text: s.name, value: s.abbreviation };\n                  }\n                )}\n                placeholder={\"Select State\"}\n                value={this.state.stateAddress}\n                onChange={(e: React.ChangeEvent<HTMLSelectElement>): void => {\n                  this.setState({ stateAddress: e.target.value });\n                }}\n              />\n              <Input\n                key=\"zip-code-input\"\n                inputType={\"number\"}\n                title={\"Zip Code\"}\n                name={\"zipCode\"}\n                placeholder={\"Enter your Zip Code\"}\n                value={this.state.zipCode}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>): void => {\n                  this.setState({ zipCode: e.target.value });\n                }}\n                validationFunction={value => {\n                  return (\n                    FormValidation.validIfOfLength(value, 5) ||\n                    FormValidation.validIfOfLength(value, 9)\n                  );\n                }}\n              />\n            </CollapseWithHeader>\n\n            <CollapseWithHeader\n              key=\"phone-language-form\"\n              title=\"Phone Number\"\n              open={true}\n            >\n              <Input\n                inputType={\"number\"}\n                title={\"Primary Phone\"}\n                name={\"primaryPhone\"}\n                placeholder={\"Enter Your Primary Phone Number\"}\n                value={this.state.primaryPhone}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>): void => {\n                  this.setState({ primaryPhone: e.target.value });\n                }}\n                validationFunction={value =>\n                  FormValidation.validIfOfLength(value, 10)\n                }\n                // error=\"Phone Numbers should be 10 digits long\"\n              />\n            </CollapseWithHeader>\n          </Form>\n        )}\n      </div>\n    );\n  }\n}\nexport default ProfileForm;\n"]},"metadata":{},"sourceType":"module"}