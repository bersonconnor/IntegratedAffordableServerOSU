{"ast":null,"code":"import _slicedToArray from \"/home/ubuntu/Connor/SandBoxOSU/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createForOfIteratorHelper from \"/home/ubuntu/Connor/SandBoxOSU/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nvar _jsxFileName = \"/home/ubuntu/Connor/SandBoxOSU/app/src/pages/AdminPages/AdminRequests/index.tsx\";\nimport React, { Component } from 'react';\nimport { Actions } from 'affordable-shared-models';\nimport { Redirect } from 'react-router-dom';\n\nclass Requests extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      requests: [],\n      filteredRequests: [],\n      adminCanView: false,\n      adminPrivsChecked: false\n    };\n    this.denyAdminRequest = this.denyAdminRequest.bind(this);\n    this.acceptAdminRequest = this.acceptAdminRequest.bind(this);\n    this.getRequestRows = this.getRequestRows.bind(this);\n  }\n\n  componentDidMount() {\n    //Check User is Authorized to View Page\n    this.checkAdminPrivileges();\n    console.log(\"test\");\n    this.props.client.getAdminRegistrationRequests().then(res => {\n      console.log(\"requests: \", res);\n      this.setState({\n        requests: res,\n        filteredRequests: res\n      });\n    });\n  }\n\n  checkAdminPrivileges() {\n    this.props.client.checkPrivilege(this.props.adminId, \"allowRejectAdminRegistration\").then(res => {\n      var canView = res;\n      this.setState({\n        adminCanView: canView,\n        adminPrivsChecked: true\n      });\n    });\n  }\n\n  denyAdminRequest(userId, username) {\n    var request = {\n      userId: userId,\n      adminId: this.props.adminId\n    };\n    this.props.client.rejectAdminRegistration(request).then(res => {\n      console.log(\"deny\");\n      this.componentDidMount();\n      this.props.client.recordAuditTrails(this.props.admin.username, \"\".concat(Actions.DenyAdminRequest, \" for: \").concat(username)).then(res => console.log(\"accept res: \", res));\n    });\n  }\n\n  acceptAdminRequest(userId, username) {\n    var request = {\n      userId: userId,\n      adminId: this.props.adminId\n    };\n    this.props.client.acceptAdminRegistration(request).then(res => {\n      this.componentDidMount();\n      this.props.client.recordAuditTrails(this.props.admin.username, \"\".concat(Actions.ApproveAdminRequest, \" for: \").concat(username)).then(res => console.log(\"accept res: \", res));\n    });\n  }\n\n  getRequestRows() {\n    var _this = this;\n\n    var requestRows = [];\n    var requests = this.state.filteredRequests;\n\n    var _iterator = _createForOfIteratorHelper(requests.entries()),\n        _step;\n\n    try {\n      var _loop = function _loop() {\n        var _step$value = _slicedToArray(_step.value, 2),\n            index = _step$value[0],\n            value = _step$value[1];\n\n        requestRows.push( /*#__PURE__*/React.createElement(\"tr\", {\n          key: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }\n        }, value.userId), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }\n        }, value.username), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }\n        }, value.email), /*#__PURE__*/React.createElement(\"td\", {\n          className: \"buttonData\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: e => _this.acceptAdminRequest(value.userId, value.username),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }\n        }, \"Accept\"), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-dark\",\n          onClick: e => _this.denyAdminRequest(value.userId, value.username),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }\n        }, \"Reject\"))));\n      };\n\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return requestRows;\n  }\n\n  filterRequests(e) {\n    console.log(e.target.value);\n    var searchResults = this.state.requests.filter(admin => admin.username.includes(e.target.value) || admin.email.includes(e.target.value));\n    this.setState({\n      filteredRequests: searchResults\n    });\n  }\n\n  render() {\n    if (this.state.adminPrivsChecked) {\n      if (this.state.adminCanView) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"adminPageContainer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          name: \"search\",\n          placeholder: \"search\",\n          onChange: e => this.filterRequests(e),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"table\", {\n          className: \"adminTable\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }\n        }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 33\n          }\n        }, \"Username\"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }\n        }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 33\n          }\n        }, \"Accept/Reject\")), this.getRequestRows()));\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"NotFound\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }\n        });\n      }\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 20\n        }\n      }, \"Loading...\");\n    }\n  }\n\n}\n\nexport default Requests;","map":{"version":3,"sources":["/home/ubuntu/Connor/SandBoxOSU/app/src/pages/AdminPages/AdminRequests/index.tsx"],"names":["React","Component","Actions","Redirect","Requests","constructor","props","state","requests","filteredRequests","adminCanView","adminPrivsChecked","denyAdminRequest","bind","acceptAdminRequest","getRequestRows","componentDidMount","checkAdminPrivileges","console","log","client","getAdminRegistrationRequests","then","res","setState","checkPrivilege","adminId","canView","userId","username","request","rejectAdminRegistration","recordAuditTrails","admin","DenyAdminRequest","acceptAdminRegistration","ApproveAdminRequest","requestRows","entries","index","value","push","email","e","filterRequests","target","searchResults","filter","includes","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { AffordableAdminClient } from 'affordable-client'\nimport { AdminRegistrationRequest, AdminRegistrationResponse, AdminPrivileges, UserInfo, Actions } from 'affordable-shared-models';\nimport { Button } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\n\ninterface props {\n    client: AffordableAdminClient,\n    adminId: number,\n    admin: UserInfo;\n}\n\ninterface state {\n    requests: AdminRegistrationResponse[],\n    filteredRequests: AdminRegistrationResponse[],\n    adminCanView: boolean;\n    adminPrivsChecked: boolean;\n}\n\nclass Requests extends Component<props, state> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            requests: [],\n            filteredRequests: [],\n            adminCanView: false,\n            adminPrivsChecked: false,\n        };\n        this.denyAdminRequest = this.denyAdminRequest.bind(this);\n        this.acceptAdminRequest = this.acceptAdminRequest.bind(this);\n        this.getRequestRows = this.getRequestRows.bind(this);\n    }\n\n    componentDidMount() {\n        //Check User is Authorized to View Page\n        this.checkAdminPrivileges();\n        console.log(\"test\")\n        this.props.client.getAdminRegistrationRequests().then((res) => {\n            console.log(\"requests: \", res);\n            this.setState({\n                requests: res,\n                filteredRequests: res\n            });\n        });\n    }\n\n    checkAdminPrivileges() {\n        this.props.client.checkPrivilege(this.props.adminId, \"allowRejectAdminRegistration\").then(res => {\n            let canView = res;\n            this.setState({\n                adminCanView: canView,\n                adminPrivsChecked: true\n            });\n        });\n    }\n\n    denyAdminRequest(userId: number, username: string) {\n        let request: AdminRegistrationRequest = {\n            userId: userId,\n            adminId: this.props.adminId\n        };\n        this.props.client.rejectAdminRegistration(request).then(res => {\n            console.log(\"deny\")\n            this.componentDidMount()\n            this.props.client.recordAuditTrails(this.props.admin.username, `${Actions.DenyAdminRequest} for: ${username}`).then(res => console.log(\"accept res: \", res));\n        });\n    }\n\n    acceptAdminRequest(userId: number, username: string): void {\n        let request: AdminRegistrationRequest = {\n            userId: userId,\n            adminId: this.props.adminId\n        };\n        this.props.client.acceptAdminRegistration(request).then(res => {\n            this.componentDidMount()\n            this.props.client.recordAuditTrails(this.props.admin.username, `${Actions.ApproveAdminRequest} for: ${username}`).then(res => console.log(\"accept res: \", res));\n        });\n    }\n\n    getRequestRows(): JSX.Element[] {\n        let requestRows: JSX.Element[] = [];\n        let requests = this.state.filteredRequests;\n        for (let [index, value] of requests.entries()) {\n            requestRows.push(\n                <tr key={index}>\n                    <td>{value.userId}</td>\n                    <td>{value.username}</td>\n                    <td>{value.email}</td> \n                    <td className=\"buttonData\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={(e) => this.acceptAdminRequest(value.userId, value.username)}>Accept</button>\n                        <button type=\"button\" className=\"btn btn-dark\" onClick={(e) => this.denyAdminRequest(value.userId, value.username)}>Reject</button>\n                    </td>\n                </tr>\n            )\n        }\n        return requestRows\n    }\n\n    filterRequests(e: React.ChangeEvent<HTMLInputElement>): void {\n        console.log(e.target.value);\n        let searchResults = this.state.requests.filter(admin => admin.username.includes(e.target.value) || admin.email.includes(e.target.value));\n        this.setState({\n            filteredRequests: searchResults\n        });\n    }\n\n    render() {\n        if (this.state.adminPrivsChecked) {\n            if (this.state.adminCanView) {\n                return (\n                    <div className=\"adminPageContainer\">\n                        <input name=\"search\" placeholder=\"search\" onChange={(e) => this.filterRequests(e)}/>\n                        <table className=\"adminTable\">\n                            <tr>\n                                <th>ID</th>\n                                <th>Username</th>\n                                <th>Email</th>\n                                <th>Accept/Reject</th>\n                            </tr>\n                            {this.getRequestRows()}\n                        </table>\n                    </div>\n                )\n            } else {\n                return (\n                    <Redirect to=\"NotFound\"/>\n                )\n            }\n        } else {\n            return <div>Loading...</div>\n        }\n    }\n}\n\nexport default Requests;"]},"metadata":{},"sourceType":"module"}