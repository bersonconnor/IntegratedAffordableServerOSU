{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Connor/SandBoxOSU/app/src/pages/MainPages/MainPagesRoutingContainer/index.tsx\";\nimport React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport ApplyPages from \"../ApplyPages/ApplyPagesRoutingContainer\";\nimport Dashboard from \"../Dashboard\";\nimport MainHeader from \"./MainHeader\";\nimport OrganizationPages from \"../OrganizationPages/OrganizationPagesRoutingContainer\";\nimport HUGPages from \"../HUGPages/HUGPagesRoutingContainer\";\nimport HugSearch from \"../HUGPages/HUGPagesRoutingContainer/HugSearch\";\nimport Manage from \"../HUGPages/HUGPagesRoutingContainer/manage\";\nimport NotFound from \"../../ErrorPages/NotFound\";\nimport ProfileForm from \"../ProfileForm/ProfileForm\";\nimport Settings from \"../Settings\";\nimport Filemanager from \"../Filemanager\";\nimport ZapierInfo from \"../ZapierInfo\";\nimport AddOrganization from \"../OrganizationPages/AddOrganization/index\";\nimport { UserType } from \"affordable-shared-models\";\nimport Sidebar from \"./Sidebar\";\nimport Transactions from \"../Transactions\";\nimport Application from \"../Application\";\nimport AdminPage from \"../AdminPage\";\nimport Requests from \"../../AdminPages/AdminRequests\";\nimport AdminPrivileges from \"../../AdminPages/Privileges\";\nimport Email from \"../../AdminPages/Email\";\nimport DeactivateUser from \"../../AdminPages/DeactivateUser\";\nimport UserSecurity from \"../../AdminPages/SecurityPage\";\nimport AdminSidebar from \"./AdminSidebar\";\nimport { AffordableAdminClient } from \"affordable-client\";\nimport RevokeAdminComponent from \"../../AdminPages/RevokeAdmin\";\nimport AuditTrails from \"../../AdminPages/AuditTrail\";\nexport var UserIDContext = React.createContext(-1);\nexport var RepresentingOrgIDContext = React.createContext(-1);\nexport var UserEmailContext = React.createContext(\"\");\n\nclass MainPagesRoutingContainerProps {\n  constructor() {\n    this.childProps = void 0;\n  }\n\n}\n\nclass MainPagesRoutingContainerState {\n  constructor() {\n    this.currentOrganization = void 0;\n  }\n\n}\n\nclass MainPagesRoutingContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = new MainPagesRoutingContainerState();\n    this.setCurrentRepresentedOrganization = this.setCurrentRepresentedOrganization.bind(this);\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  } //for handling verified orgs\n\n\n  setCurrentRepresentedOrganization(organization) {\n    this.setState({\n      currentOrganization: organization\n    });\n  }\n\n  getSidebar() {\n    console.log(this.props.childProps.getUserInfo);\n    console.log(\"userType is \".concat(this.props.childProps.getUserInfo.userType));\n\n    if (this.props.childProps.getUserInfo.userType === UserType.ADMIN) {\n      return /*#__PURE__*/React.createElement(AdminSidebar, {\n        client: new AffordableAdminClient(),\n        userinfo: this.props.childProps.getUserInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Sidebar, {\n        client: this.props.childProps.client,\n        userType: this.props.childProps.getUserInfo.userType,\n        userName: this.props.childProps.getUserInfo.username,\n        user: this.props.childProps.getUserInfo.username,\n        userId: this.props.childProps.getUserInfo.id,\n        organizationMembership: this.state.currentOrganization,\n        updateOrganizationFn: this.setCurrentRepresentedOrganization,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      });\n    }\n  }\n\n  render() {\n    var _this$state$currentOr, _this$state$currentOr2, _this$state$currentOr3;\n\n    return /*#__PURE__*/React.createElement(UserIDContext.Provider, {\n      value: this.props.childProps.getUserInfo.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(UserEmailContext.Provider, {\n      value: this.props.childProps.getUserInfo.primaryEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(RepresentingOrgIDContext.Provider, {\n      value: (_this$state$currentOr = (_this$state$currentOr2 = this.state.currentOrganization) === null || _this$state$currentOr2 === void 0 ? void 0 : (_this$state$currentOr3 = _this$state$currentOr2.organization) === null || _this$state$currentOr3 === void 0 ? void 0 : _this$state$currentOr3.id) !== null && _this$state$currentOr !== void 0 ? _this$state$currentOr : -1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, this.getSidebar(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MainHeader, {\n      client: this.props.childProps.client,\n      user: this.props.childProps.getUserInfo.username,\n      usertype: this.props.childProps.getUserInfo.userType,\n      userHasAuthenticated: this.props.childProps.userHasAuthenticated,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/dashboard\",\n      component: () => /*#__PURE__*/React.createElement(Dashboard, {\n        client: this.props.childProps.client,\n        userId: this.props.childProps.getUserInfo.id,\n        userName: this.props.childProps.getUserInfo.username,\n        userType: this.props.childProps.getUserInfo.userType,\n        firstName: this.props.childProps.getUserInfo.firstName,\n        lastName: this.props.childProps.getUserInfo.lastName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/application\",\n      component: () => /*#__PURE__*/React.createElement(Application, {\n        client: this.props.childProps.client,\n        userId: this.props.childProps.getUserInfo.id,\n        userName: this.props.childProps.getUserInfo.username,\n        userType: this.props.childProps.getUserInfo.userType,\n        firstName: this.props.childProps.getUserInfo.firstName,\n        lastName: this.props.childProps.getUserInfo.lastName,\n        email: this.props.childProps.getUserInfo.primaryEmail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/apply\",\n      component: ApplyPages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/affiliation\",\n      component: OrganizationPages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/hug\",\n      component: HUGPages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/search\",\n      component: HugSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/manage\",\n      component: Manage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/integrate\",\n      component: () => {\n        var _this$state$currentOr4, _this$state$currentOr5;\n\n        return /*#__PURE__*/React.createElement(ZapierInfo, {\n          client: this.props.childProps.client,\n          orgId: (_this$state$currentOr4 = this.state.currentOrganization) === null || _this$state$currentOr4 === void 0 ? void 0 : (_this$state$currentOr5 = _this$state$currentOr4.organization) === null || _this$state$currentOr5 === void 0 ? void 0 : _this$state$currentOr5.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 27\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/profile\",\n      component: () => /*#__PURE__*/React.createElement(ProfileForm, {\n        client: this.props.childProps.client,\n        userId: this.props.childProps.getUserInfo.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/transactions\",\n      component: () => /*#__PURE__*/React.createElement(Transactions, {\n        client: this.props.childProps.client,\n        userId: this.props.childProps.getUserInfo.id,\n        user: this.props.childProps.getUserInfo.username,\n        userType: this.props.childProps.getUserInfo.userType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/requests\",\n      component: () => /*#__PURE__*/React.createElement(Requests, {\n        client: this.props.childProps.adminClient,\n        adminId: this.props.childProps.getUserInfo.id,\n        admin: this.props.childProps.getUserInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/privileges\",\n      component: () => /*#__PURE__*/React.createElement(AdminPrivileges, {\n        client: this.props.childProps.adminClient,\n        adminId: this.props.childProps.getUserInfo.id,\n        admin: this.props.childProps.getUserInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/deactivateuser\",\n      component: () => /*#__PURE__*/React.createElement(DeactivateUser, {\n        client: this.props.childProps.adminClient,\n        adminId: this.props.childProps.getUserInfo.id,\n        admin: this.props.childProps.getUserInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/usersecurity\",\n      component: () => /*#__PURE__*/React.createElement(UserSecurity, {\n        client: this.props.childProps.adminClient,\n        adminId: this.props.childProps.getUserInfo.id,\n        admin: this.props.childProps.getUserInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/email\",\n      component: () => /*#__PURE__*/React.createElement(Email, {\n        client: this.props.childProps.adminClient,\n        adminId: this.props.childProps.getUserInfo.id,\n        admin: this.props.childProps.getUserInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/revokeAccess\",\n      component: () => /*#__PURE__*/React.createElement(RevokeAdminComponent, {\n        client: this.props.childProps.adminClient,\n        adminId: this.props.childProps.getUserInfo.id,\n        admin: this.props.childProps.getUserInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/audittrails\",\n      component: () => /*#__PURE__*/React.createElement(AuditTrails, {\n        client: this.props.childProps.adminClient,\n        adminId: this.props.childProps.getUserInfo.id,\n        admin: this.props.childProps.getUserInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/settings\",\n      component: () => /*#__PURE__*/React.createElement(Settings, {\n        client: this.props.childProps.client,\n        user: this.props.childProps.getUserInfo.username,\n        email: this.props.childProps.getUserInfo.primaryEmail,\n        twoFactor: this.props.childProps.getUserInfo.twoFactor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 23\n      }\n    }), \"// Route for file manager\", /*#__PURE__*/React.createElement(Route, {\n      path: \"/filemanager\",\n      component: () => /*#__PURE__*/React.createElement(Filemanager, {\n        client: this.props.childProps.client,\n        userId: this.props.childProps.getUserInfo.id,\n        user: this.props.childProps.getUserInfo.username,\n        userType: this.props.childProps.getUserInfo.userType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 5\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/addOrg\",\n      component: () => /*#__PURE__*/React.createElement(AddOrganization, {\n        client: this.props.childProps.client,\n        userInfo: this.props.childProps.getUserInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/admin\",\n      component: () => /*#__PURE__*/React.createElement(AdminPage, {\n        client: this.props.childProps.adminClient,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      component: NotFound,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 23\n      }\n    })))))))));\n  }\n\n}\n\nexport default MainPagesRoutingContainer;","map":{"version":3,"sources":["/home/ubuntu/Connor/SandBoxOSU/app/src/pages/MainPages/MainPagesRoutingContainer/index.tsx"],"names":["React","Component","Route","Switch","ApplyPages","Dashboard","MainHeader","OrganizationPages","HUGPages","HugSearch","Manage","NotFound","ProfileForm","Settings","Filemanager","ZapierInfo","AddOrganization","UserType","Sidebar","Transactions","Application","AdminPage","Requests","AdminPrivileges","Email","DeactivateUser","UserSecurity","AdminSidebar","AffordableAdminClient","RevokeAdminComponent","AuditTrails","UserIDContext","createContext","RepresentingOrgIDContext","UserEmailContext","MainPagesRoutingContainerProps","childProps","MainPagesRoutingContainerState","currentOrganization","MainPagesRoutingContainer","constructor","props","state","setCurrentRepresentedOrganization","bind","componentDidMount","window","scrollTo","organization","setState","getSidebar","console","log","getUserInfo","userType","ADMIN","client","username","id","render","primaryEmail","userHasAuthenticated","firstName","lastName","adminClient","twoFactor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport ApplyPages from \"../ApplyPages/ApplyPagesRoutingContainer\";\nimport Dashboard from \"../Dashboard\";\nimport MainHeader from \"./MainHeader\";\nimport OrganizationPages from \"../OrganizationPages/OrganizationPagesRoutingContainer\";\nimport HUGPages from \"../HUGPages/HUGPagesRoutingContainer\";\nimport HugSearch from \"../HUGPages/HUGPagesRoutingContainer/HugSearch\";\nimport Manage from \"../HUGPages/HUGPagesRoutingContainer/manage\";\nimport NotFound from \"../../ErrorPages/NotFound\";\nimport ProfileForm from \"../ProfileForm/ProfileForm\";\nimport Settings from \"../Settings\";\nimport Filemanager from \"../Filemanager\";\nimport ZapierInfo from \"../ZapierInfo\";\nimport AddOrganization from \"../OrganizationPages/AddOrganization/index\";\nimport { UserInfoProps } from \"../../../App\";\nimport { OrganizationMembership, UserType } from \"affordable-shared-models\";\nimport Sidebar from \"./Sidebar\";\nimport Transactions from \"../Transactions\";\nimport Application from \"../Application\";\nimport AdminPage from \"../AdminPage\";\nimport Requests from \"../../AdminPages/AdminRequests\";\nimport AdminPrivileges from \"../../AdminPages/Privileges\";\nimport Email from \"../../AdminPages/Email\";\nimport DeactivateUser from \"../../AdminPages/DeactivateUser\"\nimport UserSecurity from \"../../AdminPages/SecurityPage\";\nimport AdminSidebar from \"./AdminSidebar\";\nimport { AffordableAdminClient } from \"affordable-client\";\nimport AdminPortal from \"../AdminPortal\";\nimport RevokeAdminComponent from \"../../AdminPages/RevokeAdmin\";\nimport AuditTrail from \"../../AdminPages/AuditTrail\";\nimport AuditTrails from \"../../AdminPages/AuditTrail\";\n\nexport const UserIDContext = React.createContext(-1);\n\nexport const RepresentingOrgIDContext = React.createContext(-1);\n\nexport const UserEmailContext = React.createContext<string | undefined>(\"\");\n\nclass MainPagesRoutingContainerProps {\n  childProps: UserInfoProps;\n}\n\nclass MainPagesRoutingContainerState {\n  currentOrganization: OrganizationMembership;\n}\n\nclass MainPagesRoutingContainer extends Component<\n  MainPagesRoutingContainerProps,\n  MainPagesRoutingContainerState\n  > {\n  constructor(props) {\n    super(props);\n\n    this.state = new MainPagesRoutingContainerState();\n    this.setCurrentRepresentedOrganization = this.setCurrentRepresentedOrganization.bind(\n      this\n    );\n  }\n\n  componentDidMount(): void {\n    window.scrollTo(0, 0);\n  }\n\n  //for handling verified orgs\n  setCurrentRepresentedOrganization(\n    organization: OrganizationMembership\n  ): void {\n    this.setState({ currentOrganization: organization });\n  }\n\n  getSidebar() {\n    console.log(this.props.childProps.getUserInfo)\n    console.log(`userType is ${this.props.childProps.getUserInfo.userType}`)\n    if (this.props.childProps.getUserInfo.userType === UserType.ADMIN) {\n      return (\n        <AdminSidebar\n          client={new AffordableAdminClient()}\n          userinfo={this.props.childProps.getUserInfo}\n        />\n      )\n    } else {\n      return (\n        <Sidebar\n          client={this.props.childProps.client}\n          userType={this.props.childProps.getUserInfo.userType}\n          userName={this.props.childProps.getUserInfo.username}\n          user={this.props.childProps.getUserInfo.username}\n          userId={this.props.childProps.getUserInfo.id}\n          organizationMembership={this.state.currentOrganization}\n          updateOrganizationFn={this.setCurrentRepresentedOrganization}\n        />\n      )\n    }\n  }\n\n\n  render(): React.ReactNode {\n    return (\n      <UserIDContext.Provider value={this.props.childProps.getUserInfo.id}>\n        <UserEmailContext.Provider\n          value={this.props.childProps.getUserInfo.primaryEmail}\n        >\n          <RepresentingOrgIDContext.Provider\n            value={this.state.currentOrganization?.organization?.id ?? -1}\n          >\n            <div className=\"App container-fluid\">\n              <div className=\"App row\">\n\n                {this.getSidebar()}\n\n                <div className=\"col-9\">\n                  <MainHeader\n                    client={this.props.childProps.client}\n                    user={this.props.childProps.getUserInfo.username}\n                    usertype={this.props.childProps.getUserInfo.userType}\n                    userHasAuthenticated={\n                      this.props.childProps.userHasAuthenticated\n                    }\n                  />\n\n                  <div className=\"row\">\n                    <Switch>\n                      <Route path=\"/dashboard\" component={() => (\n                        <Dashboard\n                          client={this.props.childProps.client}\n                          userId={this.props.childProps.getUserInfo.id}\n                          userName={this.props.childProps.getUserInfo.username}\n                          userType={this.props.childProps.getUserInfo.userType}\n                          firstName={this.props.childProps.getUserInfo.firstName}\n                          lastName={this.props.childProps.getUserInfo.lastName}\n                        />\n                      )} />\n                      <Route path=\"/application\" component={() => (\n                        <Application\n                          client={this.props.childProps.client}\n                          userId={this.props.childProps.getUserInfo.id}\n                          userName={this.props.childProps.getUserInfo.username}\n                          userType={this.props.childProps.getUserInfo.userType}\n                          firstName={this.props.childProps.getUserInfo.firstName}\n                          lastName={this.props.childProps.getUserInfo.lastName}\n                          email={\n                            this.props.childProps.getUserInfo.primaryEmail\n                          }\n                        />\n                      )} />\n\n                      <Route path=\"/apply\" component={ApplyPages} />\n                      <Route\n                        path=\"/affiliation\"\n                        component={OrganizationPages}\n                      />\n                      <Route path=\"/hug\" component={HUGPages} />\n                      <Route path=\"/search\" component={HugSearch} />\n                      <Route path=\"/manage\" component={Manage} />\n                      <Route\n                        path=\"/integrate\"\n                        component={() => (\n                          <ZapierInfo\n                            client={this.props.childProps.client}\n                            orgId={\n                              this.state.currentOrganization?.organization?.id\n                            }\n                          />\n                        )}\n                      />\n                      <Route\n                        path=\"/profile\"\n                        component={() => (\n                          <ProfileForm\n                            client={this.props.childProps.client}\n                            userId={this.props.childProps.getUserInfo.id}\n                          />\n                        )}\n                      />\n                      <Route path=\"/transactions\" component={() => (\n                        <Transactions\n                          client={this.props.childProps.client}\n                          userId={this.props.childProps.getUserInfo.id}\n                          user={this.props.childProps.getUserInfo.username}\n                          userType={this.props.childProps.getUserInfo.userType} />\n                      )} />\n                      <Route\n                        path=\"/requests\"\n                        component={() => (\n                          <Requests\n                            client={this.props.childProps.adminClient}\n                            adminId={this.props.childProps.getUserInfo.id}\n                            admin={this.props.childProps.getUserInfo}\n                          />\n                        )}\n                      />\n                      <Route\n                        path=\"/privileges\"\n                        component={() => (\n                          <AdminPrivileges\n                            client={this.props.childProps.adminClient}\n                            adminId={this.props.childProps.getUserInfo.id}\n                            admin={this.props.childProps.getUserInfo}\n                          />\n                        )}\n                      />\n                      <Route\n                        path=\"/deactivateuser\"\n                        component={() => (\n                          <DeactivateUser\n                            client={this.props.childProps.adminClient}\n                            adminId={this.props.childProps.getUserInfo.id}\n                            admin={this.props.childProps.getUserInfo}\n                          />\n                        )}\n                      />\n                      <Route\n                        path=\"/usersecurity\"\n                        component={() => (\n                          <UserSecurity\n                            client={this.props.childProps.adminClient}\n                            adminId={this.props.childProps.getUserInfo.id}\n                            admin={this.props.childProps.getUserInfo}\n                          />\n                        )}\n                      />\n                      <Route\n                        path=\"/email\"\n                        component={() => (\n                          <Email\n                            client={this.props.childProps.adminClient}\n                            adminId={this.props.childProps.getUserInfo.id}\n                            admin={this.props.childProps.getUserInfo}\n                          />\n                        )}\n                      />\n                      <Route\n                        path=\"/revokeAccess\"\n                        component={() => (\n                          <RevokeAdminComponent\n                            client={this.props.childProps.adminClient}\n                            adminId={this.props.childProps.getUserInfo.id}\n                            admin={this.props.childProps.getUserInfo}\n                          />\n                        )}\n                      />\n                      <Route\n                        path=\"/audittrails\"\n                        component={() => (\n                          <AuditTrails\n                            client={this.props.childProps.adminClient}\n                            adminId={this.props.childProps.getUserInfo.id}\n                            admin={this.props.childProps.getUserInfo}\n                          />\n                        )}\n                      />\n                      <Route\n                        path=\"/settings\"\n                        component={() => (\n                          <Settings\n                            client={this.props.childProps.client}\n                            user={this.props.childProps.getUserInfo.username}\n                            email={this.props.childProps.getUserInfo.primaryEmail}\n                            twoFactor={this.props.childProps.getUserInfo.twoFactor}\n                          />\n                        )}\n                      />\n\t\t\t// Route for file manager\n\t\t\t<Route\n\t\t\t\tpath=\"/filemanager\"\n\t\t\t\tcomponent={() => (\n\t\t\t\t<Filemanager\n\t\t\t\t\tclient={this.props.childProps.client}\n\t\t\t\t\tuserId={this.props.childProps.getUserInfo.id}\n\t\t\t\t\tuser={this.props.childProps.getUserInfo.username}\n\t\t\t\t\tuserType={this.props.childProps.getUserInfo.userType}\n\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n                      <Route\n                        path=\"/addOrg\"\n                        component={() => (\n                          <AddOrganization\n                            client={this.props.childProps.client}\n                            userInfo={this.props.childProps.getUserInfo}\n                          />\n                        )}\n                      />\n                      <Route\n                        path=\"/admin\"\n                        component={() => (\n                          <AdminPage\n                            client={this.props.childProps.adminClient}\n                          />\n                        )}\n                      />\n                      <Route component={NotFound} />\n                    </Switch>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </RepresentingOrgIDContext.Provider>\n        </UserEmailContext.Provider>\n      </UserIDContext.Provider>\n    );\n  }\n}\n\nexport default MainPagesRoutingContainer;\n"]},"metadata":{},"sourceType":"module"}