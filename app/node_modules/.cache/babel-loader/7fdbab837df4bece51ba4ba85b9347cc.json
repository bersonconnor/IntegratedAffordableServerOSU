{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/ubuntu/Connor/SandBoxOSU/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nvar _jsxFileName = \"/home/ubuntu/Connor/SandBoxOSU/app/src/pages/AdminPages/Email/index.tsx\";\nimport React, { Component } from 'react';\nimport { Actions } from 'affordable-shared-models';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport swal from \"sweetalert\";\n\nclass Email extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      filteredUsers: [],\n      selectedUserId: -1,\n      adminCanView: false,\n      adminPrivsChecked: false\n    };\n    this.emailUser = this.emailUser.bind(this);\n    this.selectUser = this.selectUser.bind(this);\n  }\n\n  componentDidMount() {\n    //Check User is Authorized to View Page\n    this.checkAdminPrivileges();\n    console.log(\"THIS ADMIN ID: \", this.props.adminId);\n    console.log(\"state:\", this.state);\n    this.getUsers();\n  }\n\n  checkAdminPrivileges() {\n    this.props.client.checkPrivilege(this.props.adminId, \"messageUserEmailUser\").then(res => {\n      var canView = res;\n      this.setState({\n        adminCanView: canView,\n        adminPrivsChecked: true\n      });\n    });\n  }\n\n  selectUser(event) {\n    this.setState({\n      selectedUserId: event.target.value\n    });\n  }\n\n  getUsers() {\n    var request = {\n      userId: this.props.adminId\n    };\n    this.props.client.getAllUsers(request).then(res => {\n      console.log(\"get users res: \", res);\n      this.setState({\n        users: res,\n        filteredUsers: res\n      });\n    });\n  }\n\n  populateUsersSelection() {\n    var userOptions = [];\n    userOptions.push( /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 26\n      }\n    }));\n\n    if (this.state.filteredUsers) {\n      var _iterator = _createForOfIteratorHelper(this.state.filteredUsers),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var user = _step.value;\n          userOptions.push( /*#__PURE__*/React.createElement(\"option\", {\n            value: user.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 34\n            }\n          }, user.username));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n\n    return userOptions;\n  }\n\n  emailUser(event) {\n    event.preventDefault();\n    var emailBody = \"\";\n    var subjectText = \"\";\n\n    if (document.getElementById(\"subject\") !== undefined) {\n      subjectText = document.getElementById(\"subject\").value;\n    }\n\n    if (document.getElementById(\"email\") !== undefined) {\n      emailBody = document.getElementById(\"email\").value;\n    }\n\n    var userId = this.state.selectedUserId;\n    var request = {\n      adminId: this.props.adminId,\n      userId: userId,\n      subject: subjectText,\n      body: emailBody\n    };\n    console.log(request);\n    this.props.client.sendUserEmail(request).then(resp => {\n      console.log(\"Email call has returned\");\n      this.props.client.recordAuditTrails(this.props.admin.username, \"\".concat(this.props.admin.username, \" \").concat(Actions.EmailedUser, \" with id \").concat(userId));\n      swal(\"Success!\", \"The email has been sent.\", \"success\");\n    }).catch(resp => {\n      swal(\"Error\", \"The email has not been sent.\", \"error\");\n    });\n  }\n\n  filterUsers(e) {\n    var searchResults = this.state.users.filter(user => {\n      var _user$primaryEmail;\n\n      return user.username.includes(e.target.value) || ((_user$primaryEmail = user.primaryEmail) === null || _user$primaryEmail === void 0 ? void 0 : _user$primaryEmail.includes(e.target.value));\n    });\n    this.setState({\n      filteredUsers: searchResults\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"email-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.emailUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: true,\n      lg: \"3\",\n      id: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      id: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }, \"Select a User: \"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"emailInput\",\n      name: \"search\",\n      placeholder: \"search\",\n      onChange: e => this.filterUsers(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.selectUser,\n      id: \"users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }, this.populateUsersSelection()))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: true,\n      lg: \"12\",\n      id: \"email-subject\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"subject\",\n      placeholder: \"Enter email subject\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"email\",\n      placeholder: \"Enter email to selected user.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      id: \"submit-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"submit\",\n      type: \"submit\",\n      onClick: e => this.emailUser(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 50\n      }\n    }))))));\n  }\n\n}\n\nexport default Email;","map":{"version":3,"sources":["/home/ubuntu/Connor/SandBoxOSU/app/src/pages/AdminPages/Email/index.tsx"],"names":["React","Component","Actions","Container","Row","Col","swal","Email","constructor","props","state","users","filteredUsers","selectedUserId","adminCanView","adminPrivsChecked","emailUser","bind","selectUser","componentDidMount","checkAdminPrivileges","console","log","adminId","getUsers","client","checkPrivilege","then","res","canView","setState","event","target","value","request","userId","getAllUsers","populateUsersSelection","userOptions","push","user","id","username","preventDefault","emailBody","subjectText","document","getElementById","undefined","subject","body","sendUserEmail","resp","recordAuditTrails","admin","EmailedUser","catch","filterUsers","e","searchResults","filter","includes","primaryEmail","render"],"mappings":"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","sourcesContent":["import React, { Component, ReactElement } from 'react'\nimport { AffordableAdminClient } from 'affordable-client'\nimport { AdminPrivileges, UserInfo, UserType, AdminEmailRequest, Actions } from 'affordable-shared-models'\nimport { Dropdown, Container, Row, Col } from 'react-bootstrap';\nimport NotFound from '../../ErrorPages/NotFound';\nimport { Redirect } from 'react-router-dom';\nimport swal from \"sweetalert\";\n\ninterface props {\n    client: AffordableAdminClient;\n    adminId: number;\n    admin: UserInfo;\n}\ninterface state {\n    users: UserInfo[];\n    filteredUsers: UserInfo[];\n    selectedUserId: number;\n    adminCanView: boolean;\n    adminPrivsChecked: boolean;\n}\n\nclass Email extends Component<props, state> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            users: [],\n            filteredUsers: [],\n            selectedUserId: -1,\n            adminCanView: false,\n            adminPrivsChecked: false\n        };\n        this.emailUser = this.emailUser.bind(this);\n        this.selectUser = this.selectUser.bind(this);\n    }\n\n    componentDidMount() {\n        //Check User is Authorized to View Page\n        this.checkAdminPrivileges();\n        console.log(\"THIS ADMIN ID: \", this.props.adminId);\n        console.log(\"state:\", this.state);\n\n        this.getUsers();\n    }\n\n    checkAdminPrivileges() {\n        this.props.client.checkPrivilege(this.props.adminId, \"messageUserEmailUser\").then(res => {\n            let canView = res;\n            this.setState({\n                adminCanView: canView,\n                adminPrivsChecked: true\n            });\n        });\n    }\n\n    selectUser(event) {\n        this.setState({\n            selectedUserId: event.target.value\n        })\n    }\n\n    getUsers(): void {\n        let request = { userId: this.props.adminId }\n        this.props.client.getAllUsers(request).then(res => {\n            console.log(\"get users res: \", res);\n            this.setState({\n                users: res,\n                filteredUsers: res\n            });\n        });\n    }\n\n    populateUsersSelection(): JSX.Element[] {\n        let userOptions: JSX.Element[] = []\n        userOptions.push(<option value=\"\"></option>);\n        if (this.state.filteredUsers) {\n            for (let user of this.state.filteredUsers) {\n                userOptions.push(<option value={user.id}>{user.username}</option>);\n            }\n        }\n        return userOptions;\n    }\n\n    emailUser(event) {\n        event.preventDefault();\n\n        let emailBody: string = \"\";\n        let subjectText: string = \"\";\n        if (document.getElementById(\"subject\") !== undefined) {\n            subjectText = (document.getElementById(\"subject\") as HTMLInputElement).value;\n        }\n        if (document.getElementById(\"email\") !== undefined) {\n            emailBody = (document.getElementById(\"email\") as HTMLInputElement).value;\n        }\n\n        let userId = this.state.selectedUserId;\n        let request: AdminEmailRequest = {\n            adminId: this.props.adminId,\n            userId: userId,\n            subject: subjectText,\n            body: emailBody,\n        }\n\n        console.log(request);\n        this.props.client.sendUserEmail(request).then(resp => {\n            console.log(`Email call has returned`);\n            \n            this.props.client.recordAuditTrails(this.props.admin.username, `${this.props.admin.username} ${Actions.EmailedUser} with id ${userId}`);\n            \n            swal(\n                \"Success!\",\n                \"The email has been sent.\",\n                \"success\"\n              );\n        }).catch(resp => {\n            swal(\"Error\", \"The email has not been sent.\", \"error\");\n        });\n    }\n\n    filterUsers(e: React.ChangeEvent<HTMLInputElement>): void {\n        let searchResults = this.state.users.filter(user => user.username.includes(e.target.value) || user.primaryEmail?.includes(e.target.value));\n        this.setState({\n            filteredUsers: searchResults\n        });\n    }\n\n    render() {\n        return (\n            <div id=\"email-container\">\n                <Container>\n                    <form onSubmit={this.emailUser}>\n                        <Row>\n                            <Col xs lg=\"3\" id=\"header\">\n                                <label id=\"label\">Select a User: </label>\n                                <input className=\"emailInput\" name=\"search\" placeholder=\"search\" onChange={(e) => this.filterUsers(e)}/>\n                                <br />\n                                <select onChange={this.selectUser} id=\"users\">\n                                    {this.populateUsersSelection()}\n                                </select>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs lg=\"12\" id=\"email-subject\">\n                                <input type=\"text\" id=\"subject\" placeholder=\"Enter email subject\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <textarea id=\"email\" placeholder=\"Enter email to selected user.\"></textarea>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col id=\"submit-col\"><input id=\"submit\" type=\"submit\" onClick={(e) => this.emailUser(e)}/></Col>\n                        </Row>\n                    </form>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default Email;"]},"metadata":{},"sourceType":"module"}