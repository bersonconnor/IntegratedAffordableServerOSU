{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Connor/Demo_OSU_Filemanager/app/src/pages/AuthPages/ResetPassword/index.tsx\";\nimport React, { Component } from \"react\";\nimport swal from \"sweetalert\";\nimport TextInput from \"../../../components/TextInput/index\";\nimport \"./scss/login.scss\";\n\nclass ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleValidateNewPassword = ev => {\n      ev.preventDefault();\n      var data = new FormData();\n      var newPass = document.getElementById(\"newPassword\").value;\n      var confirmPass = document.getElementById(\"confirmPassword\").value;\n      data.append(\"newPassword\", newPass);\n      data.append(\"confirmPassword\", confirmPass);\n      var search = window.location.search;\n      var params = new URLSearchParams(search);\n      var code = params.get('code');\n\n      if (newPass == confirmPass) {\n        this.setState({\n          name1: /*#__PURE__*/React.createElement(\"span\", {\n            className: \"App-pass\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 18\n            }\n          }, \"Password Match\")\n        });\n        this.props.client.resetPassword(newPass, code).then(() => {\n          window.location.assign(\"/reset_password_success\");\n        }).catch(error => {\n          swal(\"Error: could not reset your password\");\n          console.log(\"Error\", error.message, \"error\");\n        });\n      } else {\n        this.setState({\n          name1: /*#__PURE__*/React.createElement(\"span\", {\n            className: \"App-fail\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 18\n            }\n          }, \"Password Mismatch\")\n        });\n      }\n    };\n\n    this.state = {\n      validatePassword: false,\n      newPassword: \"\",\n      name1: \"\"\n    };\n  } //Validate credentials from backend\n\n\n  // MAIN\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reset-password__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"App-forgot-password reset-password__container\",\n      onSubmit: this.handleValidateNewPassword // TODO: fix bug and make it so that the form can be submitted by pressing the enter key\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      password: true,\n      labelText: \"New Password\",\n      id: \"newPassword\",\n      containerClassName: \"reset-password__new-password-text-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextInput, {\n      password: true,\n      labelText: \"Confirm Password\",\n      id: \"confirmPassword\",\n      containerClassName: \"reset-password__confirm-password-text-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, this.state.name1), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Reset\",\n      className: \"App-login-button reset-password__login-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["/home/ubuntu/Connor/Demo_OSU_Filemanager/app/src/pages/AuthPages/ResetPassword/index.tsx"],"names":["React","Component","swal","TextInput","ResetPassword","constructor","props","handleValidateNewPassword","ev","preventDefault","data","FormData","newPass","document","getElementById","value","confirmPass","append","search","window","location","params","URLSearchParams","code","get","setState","name1","client","resetPassword","then","assign","catch","error","console","log","message","state","validatePassword","newPassword","render"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAO,mBAAP;;AAeA,MAAMC,aAAN,SAA4BH,SAA5B,CAA8E;AAC5EI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,yBAVmB,GAUSC,EAAE,IAAI;AAChCA,MAAAA,EAAE,CAACC,cAAH;AAEA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACA,UAAMC,OAAO,GAAIC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAD,CACbC,KADH;AAEA,UAAMC,WAAW,GAAIH,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAD,CACjBC,KADH;AAEAL,MAAAA,IAAI,CAACO,MAAL,CAAY,aAAZ,EAA2BL,OAA3B;AACAF,MAAAA,IAAI,CAACO,MAAL,CAAY,iBAAZ,EAA+BD,WAA/B;AAEA,UAAIE,MAAM,GAAGC,MAAM,CAACC,QAAP,CAAgBF,MAA7B;AACA,UAAIG,MAAM,GAAG,IAAIC,eAAJ,CAAoBJ,MAApB,CAAb;AACA,UAAIK,IAAI,GAAGF,MAAM,CAACG,GAAP,CAAW,MAAX,CAAX;;AAEA,UAAIZ,OAAO,IAAII,WAAf,EAA4B;AAC1B,aAAKS,QAAL,CACE;AAAEC,UAAAA,KAAK,eAAE;AAAM,YAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAT,SADF;AAGA,aAAKpB,KAAL,CAAWqB,MAAX,CAAkBC,aAAlB,CAAgChB,OAAhC,EAAyCW,IAAzC,EACCM,IADD,CACM,MAAM;AACVV,UAAAA,MAAM,CAACC,QAAP,CAAgBU,MAAhB,CAAuB,yBAAvB;AACD,SAHD,EAICC,KAJD,CAIQC,KAAD,IAAgC;AACrC9B,UAAAA,IAAI,CAAC,sCAAD,CAAJ;AACA+B,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAAK,CAACG,OAA3B,EAAoC,OAApC;AACD,SAPD;AAQD,OAZD,MAYO;AACL,aAAKV,QAAL,CACE;AAAEC,UAAAA,KAAK,eAAE;AAAM,YAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAT,SADF;AAGD;AACF,KA1CkB;;AAEjB,SAAKU,KAAL,GAAa;AACXC,MAAAA,gBAAgB,EAAE,KADP;AAEXC,MAAAA,WAAW,EAAE,EAFF;AAGXZ,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD,GAR2E,CAU5E;;;AAmCA;AACAa,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,+CADZ;AAEE,MAAA,QAAQ,EAAE,KAAKhC,yBAFjB,CAGE;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,SAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,EAAE,EAAC,aAHL;AAIE,MAAA,kBAAkB,EAAC,yCAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAWE,oBAAC,SAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,SAAS,EAAC,kBAFZ;AAGE,MAAA,EAAE,EAAC,iBAHL;AAIE,MAAA,kBAAkB,EAAC,6CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAK6B,KAAL,CAAWV,KAAjB,CAjBF,eAkBE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,SAAS,EAAC,+CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,CADF,CADF;AA4BD;;AA3E2E;;AA8E9E,eAAetB,aAAf","sourcesContent":["\nimport React, { Component } from \"react\";\nimport swal from \"sweetalert\";\nimport TextInput from \"../../../components/TextInput/index\";\nimport \"./scss/login.scss\";\nimport { AffordableClient, AffordableHttpError } from \"affordable-client\";\n\ninterface ResetPasswordProps {\n  client: AffordableClient;\n  resetUserPassword: (x: string) => void;\n  history: any;\n}\n\ninterface ResetPasswordState {\n  validatePassword: boolean;\n  newPassword: string;\n  name1: React.ReactNode;\n}\n\nclass ResetPassword extends Component<ResetPasswordProps, ResetPasswordState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      validatePassword: false,\n      newPassword: \"\",\n      name1: \"\"\n    };\n  }\n\n  //Validate credentials from backend\n  handleValidateNewPassword = ev => {\n    ev.preventDefault();\n\n    const data = new FormData();\n    const newPass = (document.getElementById(\"newPassword\")! as HTMLInputElement)\n      .value;\n    const confirmPass = (document.getElementById(\"confirmPassword\")! as HTMLInputElement)\n      .value;\n    data.append(\"newPassword\", newPass);\n    data.append(\"confirmPassword\", confirmPass);\n\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let code = params.get('code') as string;\n\n    if (newPass == confirmPass) {\n      this.setState(\n        { name1: <span className=\"App-pass\">Password Match</span> }\n      )\n      this.props.client.resetPassword(newPass, code)\n      .then(() => {\n        window.location.assign(\"/reset_password_success\")\n      })\n      .catch((error: AffordableHttpError) => {\n        swal(\"Error: could not reset your password\");\n        console.log(\"Error\", error.message, \"error\");\n      });\n    } else {\n      this.setState(\n        { name1: <span className=\"App-fail\">Password Mismatch</span>}\n      )\n    }\n  };\n\n  // MAIN\n  render() {\n    return (\n      <div className=\"reset-password__container\">\n        <form\n          className=\"App-forgot-password reset-password__container\"\n          onSubmit={this.handleValidateNewPassword}\n          // TODO: fix bug and make it so that the form can be submitted by pressing the enter key\n        >\n          <TextInput\n            password\n            labelText=\"New Password\"\n            id=\"newPassword\"\n            containerClassName=\"reset-password__new-password-text-input\"\n          />\n          <TextInput\n            password\n            labelText=\"Confirm Password\"\n            id=\"confirmPassword\"\n            containerClassName=\"reset-password__confirm-password-text-input\"\n          />\n          <div>{this.state.name1}</div>\n          <input\n            type=\"submit\"\n            value=\"Reset\"\n            className=\"App-login-button reset-password__login-button\"\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}