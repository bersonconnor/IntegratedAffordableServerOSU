{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Connor/SandBoxOSU/app/src/pages/AuthPages/AdminRegister/index.tsx\";\nimport { CreateUserRequest, UserType } from \"affordable-shared-models\";\nimport React from \"react\";\nimport swal from \"sweetalert\";\nimport \"../../../styles/buttons.css\";\nimport speakeasy from \"speakeasy\";\nimport { AddTwoFactorComponent } from \"../../../components/TwoFactor/TwoFactor\";\n\nvar QRCode = require(\"qrcode\");\n\nvar randomstring = require(\"randomstring\");\n\nclass AdminRegister extends React.Component {\n  constructor(props) {\n    super(props);\n    this.REACT_APP_AF_BACKEND_URL = process.env.REACT_APP_AF_BACKEND_URL || window.REACT_APP_AF_BACKEND_URL;\n\n    this.handleUpdateUsername = e => {\n      if (e.target.value.length > 4) {\n        var data = new FormData();\n        data.append(\"username\", document.getElementById(\"username\").value);\n        fetch(this.REACT_APP_AF_BACKEND_URL + \"/authentication/username\", {\n          method: \"POST\",\n          body: data\n        }).then(response => {\n          if (response.ok) return response.json();\n        }).then(resData => {\n          if (resData.usernameIsUnique) {\n            var name = \"\".concat(document.getElementById(\"username\").value, \" @ Affordable Admin\");\n            this.setState({\n              name: /*#__PURE__*/React.createElement(\"span\", {\n                className: \"App-pass\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }\n              }, \"This username is available\"),\n              validateUsername: true,\n              username: resData,\n              secret: speakeasy.generateSecret({\n                length: 20,\n                issuer: 'Affordable Admin',\n                name: name\n              })\n            });\n          } else {\n            this.setState({\n              name: /*#__PURE__*/React.createElement(\"span\", {\n                className: \"App-fail\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 21\n                }\n              }, \"This username is already in database\"),\n              validateUsername: false\n            });\n          }\n        });\n      } else {\n        this.setState({\n          name: \"\"\n        });\n      }\n    };\n\n    this.handleConfirmPassword = e => {\n      var pass = document.getElementById(\"password\").value;\n      var confPass = document.getElementById(\"confPass\").value;\n\n      if (e.target.value.length > 4 && pass === confPass) {\n        this.setState({\n          name1: /*#__PURE__*/React.createElement(\"span\", {\n            className: \"App-pass\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 20\n            }\n          }, \"Password Match\"),\n          validatePassword: true,\n          password: pass\n        });\n      } else {\n        this.setState({\n          name1: /*#__PURE__*/React.createElement(\"span\", {\n            className: \"App-fail\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 20\n            }\n          }, \"Password Mismatch\"),\n          validatePassword: false\n        });\n      }\n    };\n\n    this.handleChange = key => {\n      return event => {\n        this.setState({\n          [key]: event.target.value\n        });\n      };\n    };\n\n    this.handleCheckPasswordFormat = e => {\n      if (e.target.value.length >= 4) {\n        this.updatePWord(e.target.value);\n        this.setState({\n          name1: \"\"\n        });\n      }\n    };\n\n    this.regiesterLaterButton = () => {\n      this.setState({\n        registerLater: true\n      });\n    };\n\n    this.state = {\n      tempvar: 1,\n      checkboxState: false,\n      ipKey: \"4a51eca5db4bb71dc9fa9cf08dd6294a\",\n      ipAddr: \"\",\n      city: \"\",\n      state: \"\",\n      username: \"\",\n      password: \"\",\n      secret: speakeasy.generateSecret({\n        length: 20,\n        issuer: 'Affordable Admin'\n      }),\n      registerLater: false,\n      QRState: false,\n      passwordInput: \"\",\n      imageURL: \"\",\n      name: \"\",\n      name1: \"\",\n      name2: \"\",\n      usertype: \"\",\n      validateUsername: false,\n      validateEmail: false,\n      validatePassword: false\n    };\n    this.handleUploadRegistrationForm = this.handleUploadRegistrationForm.bind(this);\n    this.handleTwoFactorCodeValidation = this.handleTwoFactorCodeValidation.bind(this);\n    this.validateEmail = this.validateEmail.bind(this);\n    this.twoFactorCheckboxToggle = this.twoFactorCheckboxToggle.bind(this);\n    this.regiesterLaterButton = this.regiesterLaterButton.bind(this);\n    this.handleValidateLoginCredentials = this.handleValidateLoginCredentials.bind(this);\n    this.handleStoreTwoFactorDatabase = this.handleStoreTwoFactorDatabase.bind(this);\n  } // function: Checks whether the username typed by the user already in database\n\n\n  updatePWord(s) {\n    this.setState({\n      passwordInput: s\n    });\n  } // function: Checks the email typed by user already in database\n\n\n  validateEmail() {\n    var email = document.getElementById(\"email\").value;\n\n    if (email.length > 5 && email.includes(\".\")) {\n      var data = new FormData();\n      data.append(\"email\", email);\n      fetch(this.REACT_APP_AF_BACKEND_URL + \"/authentication/email\", {\n        method: \"POST\",\n        body: data\n      }).then(response => {\n        if (response.ok) return response.json();\n      }).then(resData => {\n        if (resData.emailIsUnique) {\n          this.setState({\n            name2: \"\",\n            validateEmail: true\n          });\n        } else {\n          this.setState({\n            name2: /*#__PURE__*/React.createElement(\"span\", {\n              className: \"App-fail\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }\n            }, \"This email is already in database\"),\n            validateEmail: false\n          });\n        }\n      });\n    }\n  } // function: toggle the checkbox for opting for two factor\n\n\n  twoFactorCheckboxToggle() {\n    this.setState({\n      checkboxState: !this.state.checkboxState,\n      tempvar: (this.state.tempvar + 1) % 10\n    });\n    var image;\n    QRCode.toDataURL(this.state.secret.otpauth_url, (err, imageData) => {\n      this.setState({\n        imageURL: imageData\n      });\n      image = imageData;\n    }); //below is how the previous capstones accomplished two factor with qr codes, I thought the above method was simpler\n\n    /* const data = new FormData();\n     var x = this.state.tempvar; //Math.floor((Math.random() * 1000) + 1);\n     data.append('imageid', x);\n     data.append('secret', this.state.secret);\n          fetch(process.env.REACT_APP_AF_BACKEND_URL + '/authentication/qr', {\n       method: 'POST',\n       body: data\n     }).then((response) => {\n       if(response.ok) {\n         this.setState({\n           imageURL: process.env.REACT_APP_AF_BACKEND_URL + '/public/filename' + x + '.png'\n         });\n       }\n     });*/\n  } // function: Validate the two factor code typed by user and with the code associated with the generated QR code in backend\n  //Convert to TS\n\n\n  handleTwoFactorCodeValidation(ev) {\n    ev.preventDefault();\n    var data = new FormData();\n    var token = document.getElementById(\"token\").value;\n    data.append(\"token\", token); // var x = this.state.tempvar; //Math.floor((Math.random() * 1000) + 1);\n\n    data.append(\"imageid\", this.state.imageURL);\n    data.append(\"secret\", this.state.secret.base32);\n    console.log(\"secret:\", this.state.secret);\n    this.props.client.twoFactor(token, this.state.imageURL, this.state.secret.base32).then(response => {\n      if (response.verified) {\n        this.showAlertSucc();\n      } else {\n        this.showAlertFail();\n      }\n    }); // fetch(\"http://localhost:4000/authentication/two-factor\", {\n    //   method: \"POST\",\n    //   body: data\n    // })\n    //   .then(response => response.json())\n    //   .then(response => {\n    //     if (response.verified) {\n    //       this.showAlertSucc();\n    //     } else {\n    //       this.showAlertFail();\n    //     }\n    //   });\n  }\n\n  showAlertSucc() {\n    swal(\"Success!\", \"your device now has 2 factor authentication!we also recommend securing your device with a password to prevent fraud\", \"success\");\n  }\n\n  showAlertFail() {\n    swal(\"Error\", \"Please Try Again\", \"error\");\n  } //Transfer Form Credentials to Backend server\n\n\n  handleUploadRegistrationForm(ev) {\n    ev.preventDefault(this.state.secret);\n\n    if (this.state.validateUsername && this.state.validatePassword && this.state.validateEmail) {\n      var name = document.getElementById(\"username\").value;\n      var pass = document.getElementById(\"password\").value;\n      var email = document.getElementById(\"email\").value;\n      var data = new CreateUserRequest();\n      data.username = name;\n      data.password = pass;\n      data.email = email;\n      data.TwoFactor = this.state.checkboxState;\n      data.TwoFactorCode = this.state.secret.base32;\n      data.usertype = UserType.ADMIN;\n      this.props.client.registerUser(data).then(response => {\n        swal(\"Thank you for registering with Affordable!\", \"Welcome\", \"success\");\n        this.props.setUserInfo(response.userInfo);\n\n        if (this.state.checkboxState) {\n          this.handleStoreTwoFactorDatabase();\n        }\n\n        this.handleValidateLoginCredentials(ev, response.userInfo.username);\n      }).catch(error => {\n        console.log(error);\n        swal(\"Registration failure\", \"There was a problem creating your account\", \"error\");\n      });\n    } else {\n      if (!this.state.validateUsername) {\n        swal(\"Username error\", \"Please verify your username and try again\", \"warning\");\n      } else if (!this.state.validatePassword) {\n        swal(\"Password error\", \"Please confirm your password in the appropriate box\", \"warning\");\n      } else if (!this.state.validateEmail) {\n        swal(\"Email error\", \"Please validate your email\", \"warning\");\n      } else {\n        swal(\"General error\", \"Please verify all your inputs are filled out correctly\", \"warning\");\n      }\n    }\n  } //Convert to TS\n\n\n  handleStoreTwoFactorDatabase() {\n    var deviceName = document.getElementById(\"add-device-input\").value;\n    var userName = document.getElementById(\"username\").value;\n    var email = document.getElementById(\"email\").value;\n    var randomString = randomstring.generate();\n    var timeStamp = Date.now().toString();\n    var secret = this.state.secret.base32;\n    this.props.client.addTwoFactor(deviceName, userName, email, randomString, timeStamp, secret).then(response => {\n      if (response.success) {\n        console.log(\"Secret Inserted\");\n      }\n    });\n  }\n\n  //Validate credentials from backend\n  handleValidateLoginCredentials(ev, username) {\n    ev.preventDefault();\n    var data = new FormData();\n    data.append(\"username\", username);\n    data.append(\"password\", this.state.password); // TODO - Add routing back to login?\n  } //MAIN\n\n\n  render() {\n    // DECLARATION\n    var content;\n    var validateUsernameContent = /*#__PURE__*/React.createElement(\"span\", {\n      className: \"validity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 39\n      }\n    });\n\n    if (!this.state.validateUsername) {\n      validateUsernameContent = /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 37\n        }\n      });\n    } // based on checkbox select to opt for Two factor the content below is toggled\n\n\n    if (this.state.checkboxState) {\n      content = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 21\n        }\n      }, \"Option provides additional security to your information on login\"))), /*#__PURE__*/React.createElement(AddTwoFactorComponent, {\n        handleTwoFactorCodeValidation: this.handleTwoFactorCodeValidation,\n        imageURL: this.state.imageURL,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 21\n        }\n      }, \"We also recommend securing your device with a password to prevent fraud\"))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 17\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 19\n      }\n    }, \"Open an admin account\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-center mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"username\",\n      className: \"App-login-in\",\n      placeholder: \"Username\",\n      minLength: 4,\n      maxLength: 20,\n      onChange: this.handleUpdateUsername,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 19\n      }\n    }), \" \", validateUsernameContent, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 19\n      }\n    }, this.state.name))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      className: \"App-login-input\",\n      placeholder: \"Password\",\n      onChange: this.handleCheckPasswordFormat,\n      required: true,\n      pattern: \".*[0-9|\\\\W_]+.*\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"validity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 19\n      }\n    }, \"(Must contain at least 1 number or special character.)\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"confPass\",\n      className: \"App-login-input\",\n      placeholder: \"Confirm Password\",\n      minLength: 4,\n      maxLength: 20,\n      onChange: this.handleConfirmPassword,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"validity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 19\n      }\n    }, this.state.name1))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      className: \"App-login-input\",\n      placeholder: \"Email\" //                 required=\"required\"\n      // onChange={this.handleIsEmailInDatabase}\n      ,\n      required: true,\n      onChange: this.validateEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 19\n      }\n    }, this.state.name2))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-center my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onClick: this.twoFactorCheckboxToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 17\n      }\n    }, \"Request 2-Factor Authentication (Requires a Mobile Device)\")), content, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"App-login text-center\",\n      onSubmit: this.handleUploadRegistrationForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"App-login-button3\",\n      value: \"Apply Now\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 21\n      }\n    }, \"Want to Register for a Recipient Account Instead?\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"App-user-registration-button\",\n      type: \"submit\",\n      value: \"Recipent Account Registration Page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 25\n      }\n    }))))));\n  }\n\n}\n\nexport default AdminRegister;","map":{"version":3,"sources":["/home/ubuntu/Connor/SandBoxOSU/app/src/pages/AuthPages/AdminRegister/index.tsx"],"names":["CreateUserRequest","UserType","React","swal","speakeasy","AddTwoFactorComponent","QRCode","require","randomstring","AdminRegister","Component","constructor","props","REACT_APP_AF_BACKEND_URL","process","env","window","handleUpdateUsername","e","target","value","length","data","FormData","append","document","getElementById","fetch","method","body","then","response","ok","json","resData","usernameIsUnique","name","setState","validateUsername","username","secret","generateSecret","issuer","handleConfirmPassword","pass","confPass","name1","validatePassword","password","handleChange","key","event","handleCheckPasswordFormat","updatePWord","regiesterLaterButton","registerLater","state","tempvar","checkboxState","ipKey","ipAddr","city","QRState","passwordInput","imageURL","name2","usertype","validateEmail","handleUploadRegistrationForm","bind","handleTwoFactorCodeValidation","twoFactorCheckboxToggle","handleValidateLoginCredentials","handleStoreTwoFactorDatabase","s","email","includes","emailIsUnique","image","toDataURL","otpauth_url","err","imageData","ev","preventDefault","token","base32","console","log","client","twoFactor","verified","showAlertSucc","showAlertFail","TwoFactor","TwoFactorCode","ADMIN","registerUser","setUserInfo","userInfo","catch","error","deviceName","userName","randomString","generate","timeStamp","Date","now","toString","addTwoFactor","success","render","content","validateUsernameContent"],"mappings":"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","sourcesContent":["import { AffordableClient } from \"affordable-client\";\nimport {\n  CreateUserRequest,\n  UserType,\n  LoginResponse\n} from \"affordable-shared-models\";\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport \"../../../styles/buttons.css\";\nimport speakeasy from \"speakeasy\";\nimport { AddTwoFactorComponent } from \"../../../components/TwoFactor/TwoFactor\";\n\nconst QRCode = require(\"qrcode\");\nconst randomstring = require(\"randomstring\");\n\ninterface Props {\n    history: any;\n    client: AffordableClient;\n    setUserInfo: (UserInfo) => void;\n    userHasAuthenticated: (boolean) => void;\n}\n\ninterface State {\nsecret: speakeasy.GeneratedSecret;\n  tempvar: number;\n  checkboxState: boolean;\n  ipKey: string;\n  ipAddr: string;\n  city: string;\n  state: string;\n  username: string;\n  password: string;\n  registerLater: boolean;\n  QRState: boolean;\n  passwordInput: string;\n  imageURL: string;\n  name: React.ReactNode;\n  name1: React.ReactNode;\n  name2: React.ReactNode;\n  usertype: string;\n  validateUsername: boolean;\n  validateEmail: boolean;\n  validatePassword: boolean;\n}\n\nclass AdminRegister extends React.Component<Props, State> {\n  \n  REACT_APP_AF_BACKEND_URL = process.env.REACT_APP_AF_BACKEND_URL || (window as any).REACT_APP_AF_BACKEND_URL;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n        tempvar: 1,\n      checkboxState: false,\n      ipKey: \"4a51eca5db4bb71dc9fa9cf08dd6294a\",\n      ipAddr: \"\",\n      city: \"\",\n      state: \"\",\n      username: \"\",\n      password: \"\",\n      secret: speakeasy.generateSecret({ length: 20, issuer: 'Affordable Admin' }),\n      registerLater: false,\n      QRState: false,\n      passwordInput: \"\",\n      imageURL: \"\",\n      name: \"\",\n      name1: \"\",\n      name2: \"\",\n      usertype: \"\",\n      validateUsername: false,\n      validateEmail: false,\n      validatePassword: false\n    }\n    \n    this.handleUploadRegistrationForm = this.handleUploadRegistrationForm.bind(this);\n    this.handleTwoFactorCodeValidation = this.handleTwoFactorCodeValidation.bind(this);\n    this.validateEmail = this.validateEmail.bind(this);\n    this.twoFactorCheckboxToggle = this.twoFactorCheckboxToggle.bind(this);\n    this.regiesterLaterButton = this.regiesterLaterButton.bind(this);\n    this.handleValidateLoginCredentials = this.handleValidateLoginCredentials.bind(\n        this\n    );\n    \n        this.handleStoreTwoFactorDatabase = this.handleStoreTwoFactorDatabase.bind(this);\n      }\n    \n      // function: Checks whether the username typed by the user already in database\n      handleUpdateUsername = e => {\n        if (e.target.value.length > 4) {\n          const data = new FormData();\n          data.append(\n            \"username\",\n            (document.getElementById(\"username\")! as HTMLInputElement).value\n          );\n    \n          fetch(this.REACT_APP_AF_BACKEND_URL + \"/authentication/username\", {\n            method: \"POST\",\n            body: data\n          })\n            .then(response => {\n              if (response.ok) return response.json();\n            })\n            .then(resData => {\n              if (resData.usernameIsUnique) {\n                let name = `${(document.getElementById(\"username\")! as HTMLInputElement).value} @ Affordable Admin`\n                this.setState({\n                  name: (\n                    <span className=\"App-pass\">This username is available</span>\n                  ),\n                  validateUsername: true,\n                  username: resData,\n                  secret: speakeasy.generateSecret({ length: 20, issuer: 'Affordable Admin', name: name })\n                });\n              } else {\n                this.setState({\n                  name: (\n                    <span className=\"App-fail\">\n                      This username is already in database\n                    </span>\n                  ),\n                  validateUsername: false\n                });\n              }\n            });\n        } else {\n          this.setState({ name: \"\" });\n        }\n      };\n    \n      // function: Checks Password matches with Confirm Password\n      handleConfirmPassword = e => {\n        const pass = (document.getElementById(\"password\")! as HTMLInputElement)\n          .value;\n        const confPass = (document.getElementById(\"confPass\")! as HTMLInputElement)\n          .value;\n        if (e.target.value.length > 4 && pass === confPass) {\n          this.setState({\n            name1: <span className=\"App-pass\">Password Match</span>,\n            validatePassword: true,\n            password: pass\n          });\n        } else {\n          this.setState({\n            name1: <span className=\"App-fail\">Password Mismatch</span>,\n            validatePassword: false\n          });\n        }\n      };\n    \n      /*Handle Event Functions*/\n      handleChange = key => {\n        return event => {\n          this.setState({ [key]: event.target.value } as Pick<\n            State,\n            keyof State\n          >);\n        };\n      };\n    \n      // function: Check Password Format\n      handleCheckPasswordFormat = e => {\n        if (e.target.value.length >= 4) {\n          this.updatePWord(e.target.value);\n          this.setState({ name1: \"\" });\n        }\n      };\n      updatePWord(s) {\n        this.setState({ passwordInput: s });\n      }\n      // function: Checks the email typed by user already in database\n      validateEmail() {\n        const email = (document.getElementById(\"email\")! as HTMLInputElement).value;\n        if (email.length > 5 && email.includes(\".\")) {\n          const data = new FormData();\n          data.append(\"email\", email);\n          fetch(this.REACT_APP_AF_BACKEND_URL + \"/authentication/email\", {\n            method: \"POST\",\n            body: data\n          })\n            .then(response => {\n              if (response.ok) return response.json();\n            })\n            .then(resData => {\n              if (resData.emailIsUnique) {\n                this.setState({ name2: \"\", validateEmail: true });\n              } else {\n                this.setState({\n                  name2: (\n                    <span className=\"App-fail\">\n                      This email is already in database\n                    </span>\n                  ),\n                  validateEmail: false\n                });\n              }\n            });\n        }\n      }\n    \n      // function: toggle the checkbox for opting for two factor\n      twoFactorCheckboxToggle() {\n        this.setState({\n          checkboxState: !this.state.checkboxState,\n          tempvar: (this.state.tempvar + 1) % 10\n        });\n    \n        let image;\n        QRCode.toDataURL(this.state.secret.otpauth_url, (err, imageData) => {\n          this.setState({\n            imageURL: imageData\n          });\n          image = imageData;\n        });\n    \n        //below is how the previous capstones accomplished two factor with qr codes, I thought the above method was simpler\n        /* const data = new FormData();\n         var x = this.state.tempvar; //Math.floor((Math.random() * 1000) + 1);\n         data.append('imageid', x);\n         data.append('secret', this.state.secret);\n    \n         fetch(process.env.REACT_APP_AF_BACKEND_URL + '/authentication/qr', {\n           method: 'POST',\n           body: data\n         }).then((response) => {\n           if(response.ok) {\n             this.setState({\n               imageURL: process.env.REACT_APP_AF_BACKEND_URL + '/public/filename' + x + '.png'\n             });\n           }\n         });*/\n      }\n    \n      // function: Validate the two factor code typed by user and with the code associated with the generated QR code in backend\n      //Convert to TS\n      handleTwoFactorCodeValidation(ev) {\n        ev.preventDefault();\n    \n        const data = new FormData();\n    \n        const token = (document.getElementById(\"token\")! as HTMLInputElement).value;\n        data.append(\"token\", token);\n        // var x = this.state.tempvar; //Math.floor((Math.random() * 1000) + 1);\n        data.append(\"imageid\", this.state.imageURL);\n        data.append(\"secret\", this.state.secret.base32);\n        console.log(\"secret:\", this.state.secret);\n    \n        this.props.client\n          .twoFactor(token, this.state.imageURL, this.state.secret.base32)\n          .then(response => {\n            if (response.verified) {\n              this.showAlertSucc();\n            }else {\n              this.showAlertFail();\n            }\n          });\n    \n        // fetch(\"http://localhost:4000/authentication/two-factor\", {\n        //   method: \"POST\",\n        //   body: data\n        // })\n        //   .then(response => response.json())\n        //   .then(response => {\n        //     if (response.verified) {\n        //       this.showAlertSucc();\n        //     } else {\n        //       this.showAlertFail();\n        //     }\n        //   });\n      }\n      showAlertSucc() {\n        swal(\n          \"Success!\",\n          \"your device now has 2 factor authentication!we also recommend securing your device with a password to prevent fraud\",\n          \"success\"\n        );\n      }\n      showAlertFail() {\n        swal(\"Error\", \"Please Try Again\", \"error\");\n      }\n    \n      //Transfer Form Credentials to Backend server\n      handleUploadRegistrationForm(ev) {\n        ev.preventDefault(this.state.secret);\n    \n        if (\n          this.state.validateUsername &&\n          this.state.validatePassword &&\n          this.state.validateEmail\n        ) {\n          const name = (document.getElementById(\"username\")! as HTMLInputElement)\n            .value;\n          const pass = (document.getElementById(\"password\")! as HTMLInputElement)\n            .value;\n          const email = (document.getElementById(\"email\")! as HTMLInputElement)\n            .value;\n          const data = new CreateUserRequest();\n          data.username = name;\n          data.password = pass;\n          data.email = email;\n          data.TwoFactor = this.state.checkboxState;\n          data.TwoFactorCode = this.state.secret.base32;\n          data.usertype = UserType.ADMIN;\n    \n          this.props.client\n            .registerUser(data)\n            .then(response => {\n              swal(\n                \"Thank you for registering with Affordable!\",\n                \"Welcome\",\n                \"success\"\n              );\n    \n              this.props.setUserInfo(response.userInfo);\n    \n              if (this.state.checkboxState) {\n                this.handleStoreTwoFactorDatabase();\n              }\n    \n              this.handleValidateLoginCredentials(ev, response.userInfo.username);\n            })\n            .catch(error => {\n              console.log(error);\n              swal(\n                \"Registration failure\",\n                \"There was a problem creating your account\",\n                \"error\"\n              );\n            });\n        } else {\n          if (!this.state.validateUsername) {\n            swal(\n              \"Username error\",\n              \"Please verify your username and try again\",\n              \"warning\"\n            );\n          } else if (!this.state.validatePassword) {\n            swal(\n              \"Password error\",\n              \"Please confirm your password in the appropriate box\",\n              \"warning\"\n            );\n          } else if (!this.state.validateEmail) {\n            swal(\"Email error\", \"Please validate your email\", \"warning\");\n          } else {\n            swal(\n              \"General error\",\n              \"Please verify all your inputs are filled out correctly\",\n              \"warning\"\n            );\n          }\n        }\n      }\n    \n    \n      //Convert to TS\n      handleStoreTwoFactorDatabase() {\n        const deviceName = (document.getElementById(\"add-device-input\")! as HTMLInputElement).value;\n        const userName = (document.getElementById(\"username\") as HTMLInputElement).value\n        const email = (document.getElementById(\"email\") as HTMLInputElement).value\n        const randomString = randomstring.generate();\n        const timeStamp = Date.now().toString();\n        const secret = this.state.secret.base32;\n    \n        this.props.client\n          .addTwoFactor(\n              deviceName,\n              userName,\n              email,\n              randomString,\n              timeStamp,\n              secret\n          ).then(response => {\n            if (response.success) {\n              console.log(\"Secret Inserted\")\n            }\n          });\n      }\n    \n      regiesterLaterButton = () => {\n        this.setState({ registerLater: true });\n      };\n    \n      //Validate credentials from backend\n      handleValidateLoginCredentials(ev, username) {\n        ev.preventDefault();\n        const data = new FormData();\n        data.append(\"username\", username);\n        data.append(\"password\", this.state.password);\n    \n        // TODO - Add routing back to login?\n      }\n      //MAIN\n      render() {\n        // DECLARATION\n        let content: React.ReactNode;\n        let validateUsernameContent = <span className=\"validity\"></span>;\n    \n        if (!this.state.validateUsername) {\n          validateUsernameContent = <span className=\"invalid\"></span>;\n        }\n        // based on checkbox select to opt for Two factor the content below is toggled\n        if (this.state.checkboxState) {\n          content = (\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"row\">\n                  <div className=\"col text-center\">\n                    <h4>\n                      Option provides additional security to your information on\n                      login\n                    </h4>\n                  </div>\n                </div>\n                <AddTwoFactorComponent handleTwoFactorCodeValidation={this.handleTwoFactorCodeValidation} imageURL={this.state.imageURL}/>\n    \n                <br />\n    \n                <div className=\"row\">\n                  <div className=\"col\">\n                    <h4 className=\"text-center\">\n                      We also recommend securing your device with a password to\n                      prevent fraud\n                    </h4>\n                  </div>\n                </div>\n    \n                <br />\n              </div>\n            </div>\n          );\n        }\n        return (\n\n\n          <div className=\"row\">\n            <div className=\"col\">\n\n            \n              {/* TEXT */}\n              <div className=\"row mt-3\">\n                <div className=\"col text-center\">\n                  <h2>Open an admin account</h2>\n                </div>\n              </div>\n\n\n              {/* Open Account */}\n    \n              {/* USERNAME */}\n              <div className=\"row justify-content-center mt-3\">\n                <div className=\"col text-center\">\n                  <input\n                    type=\"text\"\n                    id=\"username\"\n                    className=\"App-login-in\"\n                    placeholder=\"Username\"\n                    minLength={4}\n                    maxLength={20}\n                    onChange={this.handleUpdateUsername}\n                    required={true}\n                  />{\" \"}\n                  {validateUsernameContent}\n                  <div>{this.state.name}</div>\n                </div>\n              </div>\n    \n              {/* PASSWORD */}\n              <div className=\"row mt-3\">\n                <div className=\"col text-center\">\n                  <input\n                    type=\"password\"\n                    id=\"password\"\n                    className=\"App-login-input\"\n                    placeholder=\"Password\"\n                    onChange={this.handleCheckPasswordFormat}\n                    required={true}\n                    pattern=\".*[0-9|\\W_]+.*\"\n                  />\n                  <span className=\"validity\"></span>\n                  <div>(Must contain at least 1 number or special character.)</div>\n                </div>\n              </div>\n    \n              {/* CONFIRM PASSWORD */}\n              <div className=\"row mt-3\">\n                <div className=\"col text-center\">\n                  <input\n                    type=\"password\"\n                    id=\"confPass\"\n                    className=\"App-login-input\"\n                    placeholder=\"Confirm Password\"\n                    minLength={4}\n                    maxLength={20}\n                    onChange={this.handleConfirmPassword}\n                    required={true}\n                  />\n                  <span className=\"validity\"></span>\n                  <div>{this.state.name1}</div>\n                </div>\n              </div>\n    \n              {/* EMAIL */}\n              <div className=\"row mt-3\">\n                <div className=\"col text-center\">\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    className=\"App-login-input\"\n                    placeholder=\"Email\"\n                    //                 required=\"required\"\n                    // onChange={this.handleIsEmailInDatabase}\n    \n                    required={true}\n                    onChange={this.validateEmail}\n                  />\n    \n                  <div>{this.state.name2}</div>\n                </div>\n              </div>\n    \n              <div className=\"row justify-content-center my-3\">\n                <div className=\"col-1 text-right\">\n                  <input type=\"checkbox\" onClick={this.twoFactorCheckboxToggle} />\n                </div>\n                <div>\n                  Request 2-Factor Authentication (Requires a Mobile Device)\n                </div>\n              </div>\n    \n              {content}\n    \n              {/* END TWO BUTTONS: REGISTER NOW/ REGISTER LATER */}\n              <div className=\"row mt-3\">\n                <div className=\"col\">\n                  <form\n                    className=\"App-login text-center\"\n                    onSubmit={this.handleUploadRegistrationForm}\n                  >\n                    <input\n                      type=\"submit\"\n                      className=\"App-login-button3\"\n                      value=\"Apply Now\"\n                    />\n                  </form>\n                </div>\n              </div>\n            <div className=\"row mt-3\">\n                <div className=\"col text-center\">\n                    <span>Want to Register for a Recipient Account Instead?</span>\n                </div>\n            </div>\n            <div className=\"row mt-3\">\n                <div className=\"col text-center\">\n                    <a href=\"/register\">\n                        <input className=\"App-user-registration-button\" type=\"submit\" value=\"Recipent Account Registration Page\"/>\n                    </a>\n                </div>\n            </div>\n            </div>\n          </div>\n        );\n      }\n    }\nexport default AdminRegister;\n    "]},"metadata":{},"sourceType":"module"}