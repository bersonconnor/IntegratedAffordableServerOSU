{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/ubuntu/Connor/WorkOSU/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _readOnlyError from \"/home/ubuntu/Connor/WorkOSU/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nimport _regeneratorRuntime from \"/home/ubuntu/Connor/WorkOSU/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ubuntu/Connor/WorkOSU/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/ubuntu/Connor/WorkOSU/app/src/pages/MainPages/Dashboard/index.js\";\nimport \"./scss/dashboard.scss\";\nimport React, { Component } from \"react\";\nimport { AffordableClient } from \"affordable-client\";\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button, CardColumns, ListGroup, ButtonGroup } from \"react-bootstrap\";\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\nimport ReactTable from \"react-table\";\n/*INSERT */\n\nimport { LinkContainer } from \"react-router-bootstrap\";\n/*INSERT */\n\nimport CollapseWithHeader from \"../../../components/CollapseWithHeader\";\nimport Blob from 'blob';\nimport axios from 'axios';\nimport Popup from \"reactjs-popup\";\nimport swal from \"sweetalert\";\nimport \"../Settings/scss/settings.scss\";\nimport \"./scss/dashboard.scss\";\nimport \"../../../styles/buttons.css\";\n/*INSERT */\n\nimport DepositButton from \"../../../components/Modal/DepositButton\";\nimport WithdrawButton from \"../../../components/Modal/WithdrawButton\";\nimport { UserType } from \"affordable-shared-models\";\n\nclass ViewApplicants extends Component {\n  constructor(props) {\n    super(props);\n    this.REACT_APP_AF_BACKEND_URL = process.env.REACT_APP_AF_BACKEND_URL || window.REACT_APP_AF_BACKEND_URL;\n    this.client = new AffordableClient();\n    this.state = {\n      index: -1,\n      requestAmount: 0\n    };\n    this.rejectRequest = this.rejectRequest.bind(this);\n    this.grantRequest = this.grantRequest.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.handleAmount = this.handleAmount.bind(this);\n    this.downloadDocument = this.downloadDocument.bind(this);\n  }\n\n  handleAmount(e) {\n    this.setState({\n      requestAmount: e.target.value\n    });\n  }\n\n  closeModal() {\n    this.props.closeModal();\n  }\n\n  rejectRequest() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(_this.props.requestAmount);\n              console.log(_this.props.selected_requestName);\n              console.log(_this.props.reason);\n              console.log(JSON.parse(sessionStorage.getItem('userInfo')).primaryEmail);\n              console.log(\"reject\");\n              swal({\n                title: \"Do you want to reject \" + _this.props.selected_requestName + \"?\",\n                buttons: {\n                  Cancel: true,\n                  Confirm: {\n                    text: \"Confirm\",\n                    value: \"Confirm\"\n                  }\n                },\n                closeOnClickOutside: false,\n                icon: \"success\"\n              }).then( /*#__PURE__*/function () {\n                var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value) {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.t0 = value;\n                          _context.next = _context.t0 === \"Cancel\" ? 3 : _context.t0 === \"Confirm\" ? 4 : 8;\n                          break;\n\n                        case 3:\n                          return _context.abrupt(\"break\", 9);\n\n                        case 4:\n                          _context.next = 6;\n                          return _this.props.rejectApplicant(_this.props.HUGID, _this.props.recipientID, JSON.parse(sessionStorage.getItem('userInfo')).primaryEmail);\n\n                        case 6:\n                          _this.props.removeApplicant(_this.props.selected_requestName, _this.props.requestAmount, _this.props.story);\n\n                          _this.props.closeModal();\n\n                        case 8:\n                          return _context.abrupt(\"break\", 9);\n\n                        case 9:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x) {\n                  return _ref.apply(this, arguments);\n                };\n              }());\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n\n  grantRequest() {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              console.log(_this2.props.HUGID);\n              console.log(_this2.props.recipientID);\n\n              if (_this2.state.requestAmount != 0) {\n                console.log(\"Grant\");\n                swal({\n                  title: \"Do you want to granted \" + _this2.state.requestAmount + \" to \" + _this2.props.selected_requestName + \"?\",\n                  buttons: {\n                    Cancel: true,\n                    Confirm: {\n                      text: \"Confirm\",\n                      value: \"Confirm\"\n                    }\n                  },\n                  closeOnClickOutside: false,\n                  icon: \"success\"\n                }).then( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(value) {\n                    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            _context3.t0 = value;\n                            _context3.next = _context3.t0 === \"Cancel\" ? 3 : _context3.t0 === \"Confirm\" ? 5 : 10;\n                            break;\n\n                          case 3:\n                            console.log(\"Cancel grant\");\n                            return _context3.abrupt(\"break\", 11);\n\n                          case 5:\n                            console.log(_this2.props.selected_requestName);\n                            _context3.next = 8;\n                            return _this2.props.awardHUG(_this2.props.HUGID, _this2.props.recipientID, _this2.state.requestAmount, JSON.parse(sessionStorage.getItem('userInfo')).primaryEmail);\n\n                          case 8:\n                            _this2.props.removeApplicant(_this2.props.selected_requestName, _this2.props.requestAmount, _this2.props.story);\n\n                            _this2.props.closeModal();\n\n                          case 10:\n                            return _context3.abrupt(\"break\", 11);\n\n                          case 11:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n\n                  return function (_x2) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n              } else {\n                console.log(\"don't award\");\n                swal({\n                  title: \"Please enter an amount to grant to \" + _this2.props.selected_requestName,\n                  buttons: {\n                    close: {\n                      text: \"Close\",\n                      value: \"Close\"\n                    }\n                  },\n                  icon: \"error\"\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  }\n\n  downloadDocument() {\n    var _this3 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var map, i, data, fileName, json, url, link;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              map = new Map();\n              map.set(\"file0\", _this3.props.downloadDoc1);\n              map.set(\"file1\", _this3.props.downloadDoc2);\n              map.set(\"file2\", _this3.props.downloadDoc3);\n              i = 0;\n              i = (_readOnlyError(\"i\"), (_readOnlyError(\"i\"), 0));\n\n            case 6:\n              if (!(i < 3)) {\n                _context5.next = 24;\n                break;\n              }\n\n              if (!(map.get(\"file\" + i) != null && map.get(\"file\" + i) != undefined)) {\n                _context5.next = 21;\n                break;\n              }\n\n              data = new FormData();\n              fileName = map.get(\"file\" + i);\n              data.append(\"fileName\", fileName);\n              _context5.next = 13;\n              return _this3.client.fileDownload(data);\n\n            case 13:\n              json = _context5.sent;\n              console.log(json);\n              url = window.URL.createObjectURL(new Blob([json]));\n              link = document.createElement('a');\n              link.href = url;\n              link.setAttribute('download', fileName);\n              document.body.appendChild(link);\n              link.click(); // await axios({\n              //     url: process.env.REACT_APP_AF_BACKEND_URL + \"/file/download\",data,\n              //     method: 'POST',\n              //     responseType: 'blob',\n              //   }).then((response) => {\n              //       console.log(response);\n              //     // const url = window.URL.createObjectURL(new Blob([response.data]));\n              //     // const link = document.createElement('a');\n              //     // link.href = url;\n              //     // link.setAttribute('download',fileName);\n              //     // document.body.appendChild(link);\n              //     // link.click();\n              //   });\n\n            case 21:\n              _readOnlyError(\"i\"), i++;\n              _context5.next = 6;\n              break;\n\n            case 24:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Popup, {\n      open: this.props.open,\n      closeOnDocumentClick: true,\n      onClose: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"close\",\n      onClick: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 40\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }, \"Applicant: \", this.props.selected_requestName))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 25\n      }\n    }, \"Applicant Story\")), /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      cols: 35,\n      rows: 5,\n      value: this.props.story,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    }, \"Willing to Share Their Story\")), /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }, this.props.share))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }\n    }, \"Applicant COVID Test Result\")), /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }\n    }, this.props.covid))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 25\n      }\n    }, \"Applicant Monthly Income\")), /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }\n    }, this.props.monthlyIncome))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 25\n      }\n    }, \"Request Amount\")), /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }\n    }, this.props.requestAmount))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 25\n      }\n    }, \"Recommended Grant Amount\")), /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }\n    }, (parseFloat(this.props.requestAmount) * 100 / 97.5).toFixed(2)))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 25\n      }\n    }, \"Request Documentation\")), /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      style: {\n        width: 250\n      },\n      size: \"1g\",\n      onClick: this.downloadDocument,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 25\n      }\n    }, \"Download\"))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 25\n      }\n    }, \"Grant Amount:\")), /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"amountNumber\",\n      value: this.state.requestAmount,\n      onChange: this.handleAmount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      size: \"lg\",\n      onClick: this.rejectRequest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 25\n      }\n    }, \"Reject\")), /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      size: \"lg\",\n      onClick: this.grantRequest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 25\n      }\n    }, \"Grant\"))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"floats-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"submit-button\",\n      onClick: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 19\n      }\n    }, \"Cancel\"))));\n  }\n\n}\n\nclass Dashboard extends Component {\n  // -----------------------------------------------------------------------------------------------//\n  // Below here are constructors and other essential code blocks //\n  // -----------------------------------------------------------------------------------------------//\n  constructor(props) {\n    var _this4;\n\n    super(props);\n    _this4 = this;\n    this.REACT_APP_AF_BACKEND_URL = process.env.REACT_APP_AF_BACKEND_URL || window.REACT_APP_AF_BACKEND_URL;\n\n    this.getApplications = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(e) {\n        var json;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return _this4.client.getApplications(\"Pending\");\n\n              case 2:\n                json = _context6.sent;\n\n                _this4.setState({\n                  requests: json.recipients\n                });\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    this.stripeOnboardingStatus = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var data, usertype, accountID, requirementsDue, response, json, _response, _json, requirements;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              console.log(_this4.state.userName, _this4.state.userType);\n              data = new FormData();\n              data.append(\"username\", _this4.state.userName);\n              usertype = null; // gets the usertype\n\n              _context7.next = 6;\n              return fetch(_this4.REACT_APP_AF_BACKEND_URL + \"/profile/get-user-type\", {\n                method: \"POST\",\n                body: data\n              }).then(response => {\n                if (response.ok) {\n                  return response.json();\n                } else {\n                  alert(\"Unable to get user type\");\n                }\n              }).then(resData => {\n                usertype = (_readOnlyError(\"usertype\"), resData.usertype);\n              });\n\n            case 6:\n              data.append(\"usertype\", usertype);\n              accountID = null;\n              requirementsDue = false; // first attempts to get the Stripe Connected Account ID of the current user\n\n              _context7.prev = 9;\n              _context7.next = 12;\n              return fetch(_this4.REACT_APP_AF_BACKEND_URL + \"/stripe/getCustomAccountID\", {\n                method: \"POST\",\n                body: data\n              });\n\n            case 12:\n              response = _context7.sent;\n\n              if (response.ok) {\n                _context7.next = 16;\n                break;\n              }\n\n              console.error(response.statusText);\n              throw Error(response.statusText);\n\n            case 16:\n              _context7.next = 18;\n              return response.json();\n\n            case 18:\n              json = _context7.sent;\n\n              // if no Connect Account was found, then send an alert\n              // Though, this is not possible since both recipients and donors are given one\n              if (json.success === \"No Account Found\") {\n                alert(\"Error: No Withdraw Account Found!\");\n              } else {\n                accountID = json.id;\n                console.log(\"Account Found: \" + accountID);\n                data.append(\"accountID\", accountID);\n              }\n\n              _context7.next = 25;\n              break;\n\n            case 22:\n              _context7.prev = 22;\n              _context7.t0 = _context7[\"catch\"](9);\n              console.error(_context7.t0);\n\n            case 25:\n              _context7.prev = 25;\n              _context7.next = 28;\n              return fetch(_this4.REACT_APP_AF_BACKEND_URL + \"/stripe/checkConnectRequirements\", {\n                method: \"POST\",\n                body: data\n              });\n\n            case 28:\n              _response = _context7.sent;\n\n              if (_response.ok) {\n                _context7.next = 32;\n                break;\n              }\n\n              console.error(_response.statusText);\n              throw Error(_response.statusText);\n\n            case 32:\n              _context7.next = 34;\n              return _response.json();\n\n            case 34:\n              _json = _context7.sent;\n\n              if (_json.success === \"STRIPE ERROR\") {\n                console.error(_json.message);\n              } else {\n                if (_json.status === \"None\") {\n                  requirementsDue = false;\n                } else {\n                  requirements = _json.requirements;\n                  requirementsDue = true;\n                }\n\n                console.log(\"Account Found: \" + accountID);\n                accountID = _json.id;\n              }\n\n              _context7.next = 41;\n              break;\n\n            case 38:\n              _context7.prev = 38;\n              _context7.t1 = _context7[\"catch\"](25);\n              console.error(_context7.t1);\n\n            case 41:\n              if (requirementsDue) {\n                // First check of status\n                if (sessionStorage.getItem(\"Verified\") === null) {\n                  _this4.setState({\n                    buttonMessage: \"Get Verified\"\n                  });\n                } else if (sessionStorage.getItem(\"Verified\") === \"inProcess\") {\n                  _this4.setState({\n                    buttonMessage: \"We need more information\"\n                  });\n                } else {\n                  _this4.setState({\n                    showVerified: false\n                  });\n                }\n              } else {\n                _this4.setState({\n                  showVerified: false\n                });\n              }\n\n            case 42:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[9, 22], [25, 38]]);\n    }));\n    this.stripeOnboarding = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n      var data, usertype, accountID, requirementsDue, response, json, _response2, _json2, requirements;\n\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              console.log(_this4.state.userName, _this4.state.userType);\n              data = new FormData();\n              data.append(\"username\", _this4.state.userName);\n              usertype = null; // gets the usertype\n\n              _context9.next = 6;\n              return fetch(_this4.REACT_APP_AF_BACKEND_URL + \"/profile/get-user-type\", {\n                method: \"POST\",\n                body: data\n              }).then(response => {\n                if (response.ok) {\n                  return response.json();\n                } else {\n                  alert(\"Unable to get user type\");\n                }\n              }).then(resData => {\n                usertype = (_readOnlyError(\"usertype\"), resData.usertype);\n              });\n\n            case 6:\n              data.append(\"usertype\", usertype);\n              accountID = null;\n              requirementsDue = false; // first attempts to get the Stripe Connected Account ID of the current user\n\n              _context9.prev = 9;\n              _context9.next = 12;\n              return fetch(_this4.REACT_APP_AF_BACKEND_URL + \"/stripe/getCustomAccountID\", {\n                method: \"POST\",\n                body: data\n              });\n\n            case 12:\n              response = _context9.sent;\n\n              if (response.ok) {\n                _context9.next = 16;\n                break;\n              }\n\n              console.error(response.statusText);\n              throw Error(response.statusText);\n\n            case 16:\n              _context9.next = 18;\n              return response.json();\n\n            case 18:\n              json = _context9.sent;\n\n              // if no Connect Account was found, then send an alert\n              // Though, this is not possible since both recipients and donors are given one\n              if (json.success === \"No Account Found\") {\n                alert(\"Error: No Withdraw Account Found!\");\n              } else {\n                accountID = json.id;\n                console.log(\"Account Found: \" + accountID);\n                data.append(\"accountID\", accountID);\n              }\n\n              _context9.next = 25;\n              break;\n\n            case 22:\n              _context9.prev = 22;\n              _context9.t0 = _context9[\"catch\"](9);\n              console.error(_context9.t0);\n\n            case 25:\n              _context9.prev = 25;\n              _context9.next = 28;\n              return fetch(_this4.REACT_APP_AF_BACKEND_URL + \"/stripe/checkConnectRequirements\", {\n                method: \"POST\",\n                body: data\n              });\n\n            case 28:\n              _response2 = _context9.sent;\n\n              if (_response2.ok) {\n                _context9.next = 32;\n                break;\n              }\n\n              console.error(_response2.statusText);\n              throw Error(_response2.statusText);\n\n            case 32:\n              _context9.next = 34;\n              return _response2.json();\n\n            case 34:\n              _json2 = _context9.sent;\n\n              if (!(_json2.success === \"STRIPE ERROR\")) {\n                _context9.next = 39;\n                break;\n              }\n\n              console.error(_json2.message);\n              _context9.next = 50;\n              break;\n\n            case 39:\n              if (!(_json2.status === \"None\")) {\n                _context9.next = 43;\n                break;\n              }\n\n              requirementsDue = false;\n              _context9.next = 48;\n              break;\n\n            case 43:\n              requirements = _json2.requirements;\n\n              if (!(requirements[0] === \"external_account\")) {\n                _context9.next = 47;\n                break;\n              }\n\n              alert(\"Please Add a Bank Account in Settings/Banking Information\");\n              return _context9.abrupt(\"return\");\n\n            case 47:\n              requirementsDue = true;\n\n            case 48:\n              console.log(\"Account Found: \" + accountID);\n              accountID = _json2.id;\n\n            case 50:\n              _context9.next = 55;\n              break;\n\n            case 52:\n              _context9.prev = 52;\n              _context9.t1 = _context9[\"catch\"](25);\n              console.error(_context9.t1);\n\n            case 55:\n              //Change display\n              if (requirementsDue === false) {\n                sessionStorage.setItem(\"Verified\", \"Verified\");\n\n                _this4.setState({\n                  showVerified: false\n                });\n              } else {\n                data.append(\"successURL\", window.location.href);\n                data.append(\"failureURL\", window.location.href); //alert(\"To enable withdraws, we need more information. Redirecting to form...\");\n\n                swal({\n                  title: \"To enable withdraws, we need more information. Proceed to information form?\",\n                  buttons: {\n                    cancel: \"Cancel\",\n                    proceed: {\n                      text: \"Proceed\",\n                      value: \"proceed\"\n                    }\n                  }\n                }).then( /*#__PURE__*/function () {\n                  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(value) {\n                    var _response3, _json3;\n\n                    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                      while (1) {\n                        switch (_context8.prev = _context8.next) {\n                          case 0:\n                            _context8.t0 = value;\n                            _context8.next = _context8.t0 === \"proceed\" ? 3 : 20;\n                            break;\n\n                          case 3:\n                            sessionStorage.setItem(\"Verified\", \"inProcess\"); // console.log(\"Proceed1111111\");\n\n                            _context8.prev = 4;\n                            _context8.next = 7;\n                            return fetch(_this4.REACT_APP_AF_BACKEND_URL + \"/stripe/onboardingInfoRequest\", {\n                              method: \"POST\",\n                              body: data\n                            });\n\n                          case 7:\n                            _response3 = _context8.sent;\n\n                            if (_response3.ok) {\n                              _context8.next = 10;\n                              break;\n                            }\n\n                            throw Error(_response3.statusText);\n\n                          case 10:\n                            _context8.next = 12;\n                            return _response3.json();\n\n                          case 12:\n                            _json3 = _context8.sent;\n\n                            if (_json3.success == \"STRIPE ERROR\") {\n                              alert(\"Can't reach Stripe\");\n                              console.error(_json3.message);\n                            } else {\n                              console.log(_json3.message);\n                              window.location.replace(_json3.message.url);\n                            }\n\n                            _context8.next = 19;\n                            break;\n\n                          case 16:\n                            _context8.prev = 16;\n                            _context8.t1 = _context8[\"catch\"](4);\n                            console.error(_context8.t1);\n\n                          case 19:\n                            return _context8.abrupt(\"break\", 21);\n\n                          case 20:\n                            return _context8.abrupt(\"break\", 21);\n\n                          case 21:\n                          case \"end\":\n                            return _context8.stop();\n                        }\n                      }\n                    }, _callee8, null, [[4, 16]]);\n                  }));\n\n                  return function (_x4) {\n                    return _ref6.apply(this, arguments);\n                  };\n                }());\n              }\n\n            case 56:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[9, 22], [25, 52]]);\n    }));\n\n    this.getOwnedHUGs = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(username) {\n        var data, response, json;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                data = new FormData();\n                data.append(\"username\", username);\n                _context10.prev = 2;\n                _context10.next = 5;\n                return fetch(_this4.REACT_APP_AF_BACKEND_URL + \"/stripe/getOwnedHugs\", {\n                  method: \"POST\",\n                  body: data\n                });\n\n              case 5:\n                response = _context10.sent;\n\n                if (response.ok) {\n                  _context10.next = 10;\n                  break;\n                }\n\n                console.log(\"Dashboard getOwnedHugs() BAD RESPONSE:\");\n                throw Error(response.statusText);\n\n              case 10:\n                _context10.next = 12;\n                return response.json();\n\n              case 12:\n                json = _context10.sent;\n\n                if (!(json.success === \"getOwnedHugs()\")) {\n                  _context10.next = 17;\n                  break;\n                }\n\n                return _context10.abrupt(\"return\", json.hugList);\n\n              case 17:\n                return _context10.abrupt(\"return\", []);\n\n              case 18:\n                _context10.next = 25;\n                break;\n\n              case 20:\n                _context10.prev = 20;\n                _context10.t0 = _context10[\"catch\"](2);\n                console.log(\"Dashboard getOwnedHugs() ERROR:\");\n                console.log(_context10.t0);\n                return _context10.abrupt(\"return\", []);\n\n              case 25:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, null, [[2, 20]]);\n      }));\n\n      return function (_x5) {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    this.extractPendingHUGs = HUGList => {\n      var filteredHUGList = [];\n\n      var _iterator = _createForOfIteratorHelper(HUGList),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var HUG = _step.value;\n\n          if (HUG.Status == \"Pending\") {\n            filteredHUGList.push(HUG);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return filteredHUGList;\n    };\n\n    this.getRecipientAppliedHUGs = /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(recipientUsername) {\n        var data, response, json;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                data = new FormData();\n                data.append(\"recipientUsername\", recipientUsername);\n                _context11.prev = 2;\n                _context11.next = 5;\n                return fetch(_this4.REACT_APP_AF_BACKEND_URL + \"/stripe/getRecipientAppliedHUGs\", {\n                  method: \"POST\",\n                  body: data\n                });\n\n              case 5:\n                response = _context11.sent;\n\n                if (response.ok) {\n                  _context11.next = 10;\n                  break;\n                }\n\n                console.log(\"Dashboard getRecipientAppliedHUGs() BAD RESPONSE:\");\n                throw Error(response.statusText);\n\n              case 10:\n                _context11.next = 12;\n                return response.json();\n\n              case 12:\n                json = _context11.sent;\n\n                if (!(json.success === \"getRecipientAppliedHUGs()\")) {\n                  _context11.next = 17;\n                  break;\n                }\n\n                return _context11.abrupt(\"return\", json.hugList);\n\n              case 17:\n                return _context11.abrupt(\"return\", []);\n\n              case 18:\n                _context11.next = 25;\n                break;\n\n              case 20:\n                _context11.prev = 20;\n                _context11.t0 = _context11[\"catch\"](2);\n                console.log(\"Dashboard getRecipientAppliedHUGs() ERROR:\");\n                console.log(_context11.t0);\n                return _context11.abrupt(\"return\", []);\n\n              case 25:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, null, [[2, 20]]);\n      }));\n\n      return function (_x6) {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n\n    this.getHUGApplicants = /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(HUGID) {\n        var data, response, json;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                data = new FormData();\n                data.append(\"HUGID\", HUGID);\n                _context12.prev = 2;\n                _context12.next = 5;\n                return fetch(_this4.REACT_APP_AF_BACKEND_URL + \"/stripe/getHUGApplicants\", {\n                  method: \"POST\",\n                  body: data\n                });\n\n              case 5:\n                response = _context12.sent;\n\n                if (response.ok) {\n                  _context12.next = 10;\n                  break;\n                }\n\n                console.log(\"Dashboard getHUGApplicants() BAD RESPONSE:\");\n                throw Error(response.statusText);\n\n              case 10:\n                _context12.next = 12;\n                return response.json();\n\n              case 12:\n                json = _context12.sent;\n                console.log(\"Dashboard getHUGApplicants() SUCCESS:\"); // console.log(json)\n\n                return _context12.abrupt(\"return\", json.applicants);\n\n              case 17:\n                _context12.prev = 17;\n                _context12.t0 = _context12[\"catch\"](2);\n                console.log(\"Dashboard getHUGApplicants() ERROR:\"); // console.log(error);\n\n                return _context12.abrupt(\"return\", []);\n\n              case 21:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, null, [[2, 17]]);\n      }));\n\n      return function (_x7) {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n\n    this.getHUGPendingApplicants = /*#__PURE__*/function () {\n      var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(HUGID) {\n        var allApplicants, pendingApplicants, _iterator2, _step2, applicant;\n\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return _this4.getHUGApplicants(HUGID);\n\n              case 2:\n                allApplicants = _context13.sent;\n                pendingApplicants = [];\n                _iterator2 = _createForOfIteratorHelper(allApplicants);\n\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    applicant = _step2.value;\n\n                    if (applicant.Status == \"Pending\") {\n                      pendingApplicants.push(applicant);\n                    }\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n\n                return _context13.abrupt(\"return\", pendingApplicants);\n\n              case 7:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13);\n      }));\n\n      return function (_x8) {\n        return _ref10.apply(this, arguments);\n      };\n    }();\n\n    this.getBalance = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n      var data, response, json;\n      return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              data = new FormData();\n              data.append(\"username\", _this4.props.userName);\n              data.append(\"usertype\", _this4.props.userType);\n              _context14.prev = 3;\n              _context14.next = 6;\n              return fetch(_this4.REACT_APP_AF_BACKEND_URL + \"/transaction/balance\", {\n                method: \"POST\",\n                body: data\n              });\n\n            case 6:\n              response = _context14.sent;\n\n              if (response.ok) {\n                _context14.next = 9;\n                break;\n              }\n\n              throw Error(response.statusText);\n\n            case 9:\n              _context14.next = 11;\n              return response.json();\n\n            case 11:\n              json = _context14.sent;\n\n              if (json.success === \"Balance found\") {\n                _this4.formatBalance(json.pendingBalance, json.balance);\n              }\n\n              _context14.next = 18;\n              break;\n\n            case 15:\n              _context14.prev = 15;\n              _context14.t0 = _context14[\"catch\"](3);\n              console.error(_context14.t0);\n\n            case 18:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, null, [[3, 15]]);\n    }));\n\n    this.awardHUG = /*#__PURE__*/function () {\n      var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(HUGID, username, amount) {\n        var json;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _context15.next = 2;\n                return _this4.client.awardHUG(HUGID, username, amount);\n\n              case 2:\n                json = _context15.sent;\n                console.log(json);\n\n                if (!(json.success === \"Updated Awarded status\")) {\n                  _context15.next = 8;\n                  break;\n                }\n\n                return _context15.abrupt(\"return\", true);\n\n              case 8:\n                return _context15.abrupt(\"return\", false);\n\n              case 9:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15);\n      }));\n\n      return function (_x9, _x10, _x11) {\n        return _ref12.apply(this, arguments);\n      };\n    }();\n\n    this.rejectApplicant = /*#__PURE__*/function () {\n      var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(HUGID, username) {\n        var json;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _context16.next = 2;\n                return _this4.client.rejectApplicant(HUGID, username);\n\n              case 2:\n                json = _context16.sent;\n                console.log(json);\n\n                if (!(json.success === \"Updated Awarded status\")) {\n                  _context16.next = 8;\n                  break;\n                }\n\n                return _context16.abrupt(\"return\", true);\n\n              case 8:\n                return _context16.abrupt(\"return\", false);\n\n              case 9:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16);\n      }));\n\n      return function (_x12, _x13) {\n        return _ref13.apply(this, arguments);\n      };\n    }();\n\n    console.log(props);\n    this.client = new AffordableClient();\n    this.state = {\n      userId: this.props.userId,\n      userName: this.props.userName,\n      userType: this.props.userType,\n      firstName: this.props.firstName,\n      index: -1,\n      selected_hug: \"\",\n      selected_hugID: -1,\n      display_remove: false,\n      open: false,\n      selected_recipient: \"\",\n      buttonMessage: \"\",\n      beenVerified: sessionStorage.getItem(\"Verified\") === null,\n      showVerified: sessionStorage.getItem(\"Verified\") === null || sessionStorage.getItem(\"Verified\") === \"inProcess\",\n      //firstName: \"Elan\"\n      hugs: [],\n      covid: \"\",\n      share: \"\",\n      monthlyIncome: \"\",\n      selected_requestName: \"\",\n      requestAmount: 0,\n      story: \"\",\n      downloadDoc1: \"\",\n      downloadDoc2: \"\",\n      downloadDoc3: \"\",\n      HUGID: -1,\n      recipientID: \"\",\n      requests: [] // requests: [{recipientID: \"d\", HUGID: 2, covid: \"Yes\", desiredAmount: 30, fullName: \"Nick\", monthly_income: \"3000-5000\" , story: \"COVID-19\", file1: \"1.zip\", file2: \"2.zip\", file3: \"3.zip\"},\n      // {recipientID: \"Hello\", HUGID: 3, covid: \"No\", desiredAmount: 100, fullName: \"Sam J\", monthly_income: \"1000-3000\" , story: \"Broken Arm\", file1: \"2.zip\", file2: \"2.zip\", file3: \"2.zip\"},\n      // {recipientID: \"Good\", HUGID: 4, covid: \"No\", desiredAmount: 50, fullName: \"Jack A\", monthly_income: \"4000-6000\" , story: \"Doctor Appointment\", file1: \"2.zip\", file2: \"2.zip\", file3: \"2.zip\"},\n      // {recipientID: \"Bye\", HUGID: 5, covid: \"Yes\", desiredAmount: 35, fullName: \"Nick\", monthly_income: \"3000-5000\" , story: \"Sed ut perspiciatis, unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam eaque ipsa, quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt, explicabo. Nemo enim ipsam voluptatem, quia voluptas sit, aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos, qui ratione voluptatem sequi nesciunt, neque porro quisquam est, qui dolorem ipsum, quia dolor sit amet consectetur adipisci[ng]velit, sed quia non-numquam [do] eius modi tempora inci[di]dunt, ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum[d] exercitationem ullam corporis suscipitlaboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit, qui inea voluptate velit esse, quam nihil molestiae consequatur, vel illum, qui dolorem eum fugiat, quo voluptas nulla pariatur? [33] At vero eos et accusamus et iusto odio dignissimos ducimus, qui blanditiis praesentium voluptatum deleniti atque corrupti, quos dolores et quas molestias excepturi sint, obcaecati cupiditate non-provident, similique sunt in culpa, qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio, cumque nihil impedit, quo minus id, quod maxime placeat, facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet, ut et voluptates repudiandae sint et molestiae non-recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat…\", file1: \"2.zip\", file2: \"2.zip\", file3: \"2.zip\"}]\n\n    };\n    this.getBalance();\n    this.closeModal = this.closeModal.bind(this);\n    this.openModal = this.openModal.bind(this);\n    this.handleSelectedRecipient = this.handleSelectedRecipient.bind(this);\n    this.removeApplicant = this.removeApplicant.bind(this);\n    this.getApplications = this.getApplications.bind(this);\n  }\n\n  removeApplicant(val1, val2, val3) {\n    console.log(\"RemoveApplicant\");\n    console.log(val1);\n    console.log(val2);\n    console.log(val3);\n    var newRequest = this.state.requests.filter(applicant => applicant.fullName !== val1 || applicant.desiredAmount !== val2 || applicant.story !== val3);\n    this.setState({\n      requests: newRequest\n    });\n  }\n\n  handleSelectedRecipient(val) {\n    this.setState({\n      selected_recipient: val\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      open: false\n    });\n  }\n\n  openModal() {\n    var _this5 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17() {\n      return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              if (_this5.state.selected_requestName != \"\") {\n                {\n                  /*let v = await this.getHUGPendingApplicants(this.state.selected_hugID);*/\n                }\n\n                _this5.setState({\n                  open: true\n                });\n              } else {\n                swal(\"Please select a request\", \"\", \"error\");\n\n                _this5.getDashboardHUGs();\n              }\n\n            case 1:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17);\n    }))();\n  } // Do this stuff after page loads\n\n\n  componentDidMount() {\n    var _this6 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18() {\n      return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              console.log(\"Loaded dashboard with user information:\\n        id: \".concat(_this6.state.userId, \"\\n        user: \").concat(_this6.state.userName, \"\\n        type: \").concat(_this6.state.userType, \"\\n        name: \").concat(_this6.state.firstName)); // Do these immediately upon load\n\n              _this6.getBalance(); // Update balance every\n\n\n              _this6.getDashboardHUGs(); // Get donor/recipient HUGs\n\n\n              _this6.getApplications();\n\n              if (\"admin\".localeCompare(_this6.state.userName) !== 0 && _this6.state.userType === UserType.RECIPIENT) {\n                _this6.stripeOnboardingStatus();\n              } // And then repeat on a polling interval (in milliseconds)\n              //this.checkBalance=setInterval(() => this.getBalance(), 1000);\n              // this.getDashboardHUGsInterval = setInterval(() => this.getDashboardHUGs(), 2000);\n\n\n            case 5:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18);\n    }))();\n  }\n\n  componentWillUnmount() {\n    // Stop repeating Dashboard tasks\n    clearInterval(this.checkBalance);\n    clearInterval(this.getDashboardHUGsInterval);\n  } // Get all the hugs to populate the dashboard. Different functions are called depending on usertype\n\n\n  getDashboardHUGs() {\n    var _this7 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19() {\n      var hugs, returnObj0, _returnObj;\n\n      return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              hugs = [];\n\n              if (!(_this7.state.userType === UserType.DONOR)) {\n                _context19.next = 9;\n                break;\n              }\n\n              _context19.next = 4;\n              return _this7.getOwnedHUGs(_this7.state.userName);\n\n            case 4:\n              returnObj0 = _context19.sent;\n\n              if (returnObj0 != null && returnObj0.length > 0) {\n                hugs = _this7.extractPendingHUGs(returnObj0);\n              } // console.log(\"Donor user's unawarded HUGs:\");\n              // console.log(hugs);\n\n\n              _this7.setState({\n                hugs: hugs\n              });\n\n              _context19.next = 14;\n              break;\n\n            case 9:\n              _context19.next = 11;\n              return _this7.getRecipientAppliedHUGs(_this7.state.userName);\n\n            case 11:\n              _returnObj = _context19.sent;\n\n              if (_returnObj != null && _returnObj.length > 0) {\n                hugs = _this7.extractPendingHUGs(_returnObj);\n              } // console.log(\"Recipient user's applied HUGs with \\\"Pending\\\" status:\");\n              // console.log(hugs);\n\n\n              _this7.setState({\n                hugs: hugs\n              });\n\n            case 14:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19);\n    }))();\n  }\n\n  formatBalance(pending, available) {\n    var p = pending.toLocaleString(undefined, {\n      minimumFractionDigits: 2\n    });\n    var a = available.toLocaleString(undefined, {\n      minimumFractionDigits: 2\n    });\n    this.setState({\n      pendingBalance: p,\n      availableBalance: a\n    });\n  }\n\n  render() {\n    //console.log(\"User type is \" + this.state.usertype);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 911,\n        columnNumber: 9\n      }\n    }, this.props.userName == \"admin\" ? this.getDonorDash() : this.getRecipientDash());\n  } // -----------------------------------------------------------------------------------------------//\n  // Below here is the code for generating the recipient's dashboard //\n  // -----------------------------------------------------------------------------------------------//\n\n\n  getRecipientDash() {\n    return /*#__PURE__*/React.createElement(Container, {\n      style: {\n        margin: \"0px\",\n        maxWidth: \"4000px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 928,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 933,\n        columnNumber: 17\n      }\n    }, this.getRecipientActionCard()), /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 937,\n        columnNumber: 17\n      }\n    }, this.getApplicationCard(), this.getAccountsCard())));\n  }\n\n  getRecipientActionCard() {\n    return /*#__PURE__*/React.createElement(Card, {\n      style: {\n        margin: \"2px\",\n        marginBottom: \"4px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 950,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 951,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 952,\n        columnNumber: 17\n      }\n    }, this.getGreeting()), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 17\n      }\n    }, \"You can find important information here at a glance\"), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 959,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 960,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      horizontal: true,\n      width: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 961,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n      style: {\n        width: \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 962,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"text\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 963,\n        columnNumber: 29\n      }\n    }, \"Your waiting grant funds:\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 29\n      }\n    }, this.state.availableBalance === undefined ? \"$__.__\" : \"$\" + this.state.availableBalance)), /*#__PURE__*/React.createElement(ListGroup.Item, {\n      style: {\n        width: \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 971,\n        columnNumber: 25\n      }\n    }, this.state.showVerified ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block btn-lg\",\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        margin: \"0px\",\n        size: \"lg\"\n      },\n      onClick: this.stripeOnboarding,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 973,\n        columnNumber: 33\n      }\n    }, this.state.buttonMessage) : /*#__PURE__*/React.createElement(WithdrawButton, {\n      buttonText: \"Claim Your Funds\",\n      buttonStyle: {\n        width: \"100%\",\n        height: \"100%\",\n        margin: \"0px\",\n        size: \"lg\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 976,\n        columnNumber: 33\n      }\n    }))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 983,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 984,\n        columnNumber: 21\n      }\n    }, this.state.availableBalance === undefined ? /*#__PURE__*/React.createElement(\"text\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 987,\n        columnNumber: 33\n      }\n    }, \"Sorry, we had trouble retrieving your information\") : this.state.availableBalance == 0 ? /*#__PURE__*/React.createElement(\"text\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 990,\n        columnNumber: 33\n      }\n    }, \"Your balance is zero. Try applying to more grants\") : /*#__PURE__*/React.createElement(\"text\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 992,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 998,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1000,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1001,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      horizontal: true,\n      width: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1002,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n      style: {\n        width: \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1003,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"text\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1004,\n        columnNumber: 29\n      }\n    }, \"Applications Pending:\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1005,\n        columnNumber: 29\n      }\n    }, this.state.hugs === undefined ? 0 : this.state.hugs.length)), /*#__PURE__*/React.createElement(ListGroup.Item, {\n      style: {\n        width: \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1013,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"lg\",\n      block: true,\n      style: {\n        height: \"100%\"\n      },\n      href: \"/hugbrowser\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1014,\n        columnNumber: 29\n      }\n    }, \"Apply For Grants\"))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1019,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1020,\n        columnNumber: 21\n      }\n    }, this.state.hugs === undefined || this.state.hugs.length === 0 ? /*#__PURE__*/React.createElement(\"text\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1023,\n        columnNumber: 33\n      }\n    }, \"Click the button to apply for grant funds\") : null)), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1030,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1032,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1034,\n        columnNumber: 25\n      }\n    }, \"My Applications\"), /*#__PURE__*/React.createElement(ReactTable, {\n      data: this.state.hugs,\n      columns: [{\n        headerClassName: \"apply-table-thead\",\n        Header: \"Name\",\n        accessor: \"HUGName\",\n        style: {\n          whiteSpace: \"unset\"\n        }\n      }, {\n        headerClassName: \"apply-table-thead\",\n        Header: \"Award\",\n        accessor: \"Balance\",\n        style: {\n          whiteSpace: \"unset\"\n        }\n      }, {\n        headerClassName: \"apply-table-thead\",\n        Header: \"Status\",\n        accessor: \"Status\",\n        style: {\n          whiteSpace: \"unset\"\n        }\n      }],\n      showPageSizeOptions: false,\n      defaultPageSize: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1037,\n        columnNumber: 25\n      }\n    })))));\n  }\n\n  getAccountsCard() {\n    return /*#__PURE__*/React.createElement(Card, {\n      style: {\n        margin: \"2px\",\n        marginBottom: \"4px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1078,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1079,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1080,\n        columnNumber: 21\n      }\n    }, \"My Accounts\"), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 21\n      }\n    }, \"Review your banking information here\"), /*#__PURE__*/React.createElement(ReactTable, {\n      data: [],\n      columns: [{\n        headerClassName: \"apply-table-thead\",\n        Header: \"Sample Column\",\n        accessor: \"something\",\n        style: {\n          whiteSpace: \"unset\"\n        }\n      }],\n      defaultPageSize: 5,\n      showPagination: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1084,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1097,\n        columnNumber: 21\n      }\n    }, \"Add Bank Account\")));\n  }\n\n  getApplicationCard() {\n    return /*#__PURE__*/React.createElement(Card, {\n      style: {\n        margin: \"2px\",\n        marginBottom: \"4px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1107,\n        columnNumber: 21\n      }\n    }, \"My Application\"), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1108,\n        columnNumber: 21\n      }\n    }, \"Please make sure your personal and medical information is up to date\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1111,\n        columnNumber: 21\n      }\n    }, \"This section is under construction. We appreciate your patience\")));\n  } // -----------------------------------------------------------------------------------------------//\n  // Below here is the code for generating the donor's dashboard //\n  // -----------------------------------------------------------------------------------------------//\n\n\n  getDonorDash() {\n    return /*#__PURE__*/React.createElement(Container, {\n      style: {\n        margin: \"0px\",\n        maxWidth: \"4000px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1127,\n        columnNumber: 17\n      }\n    }, this.getDonorActionCard({}))));\n  }\n\n  getDonorActionCard() {\n    return /*#__PURE__*/React.createElement(Card, {\n      style: {\n        margin: \"2px\",\n        marginBottom: \"4px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1145,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1146,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1147,\n        columnNumber: 17\n      }\n    }, this.getGreeting()), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1148,\n        columnNumber: 17\n      }\n    }, \"You can find important information here at a glance\"), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1152,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1199,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1201,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1202,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1203,\n        columnNumber: 21\n      }\n    }, \"Request Application\"), /*#__PURE__*/React.createElement(ReactTable, {\n      data: this.state.requests,\n      columns: [{\n        headerClassName: \"apply-table-thead\",\n        Header: \"Name\",\n        accessor: \"fullName\",\n        style: {\n          whiteSpace: \"unset\"\n        }\n      }, {\n        headerClassName: \"apply-table-thead\",\n        Header: \"Request Amount\",\n        accessor: \"desiredAmount\",\n        style: {\n          whiteSpace: \"unset\"\n        }\n      }, {\n        headerClassName: \"apply-table-thead\",\n        Header: \"COVID-19 Status\",\n        accessor: \"covid\",\n        style: {\n          whiteSpace: \"unset\"\n        }\n      }, {\n        headerClassName: \"apply-table-thead\",\n        Header: \"Reason\",\n        accessor: \"story\",\n        style: {\n          whiteSpace: \"unset\"\n        },\n        show: false\n      }, {\n        headerClassName: \"apply-table-thead\",\n        Header: \"Monthly Income\",\n        accessor: \"monthly_income\",\n        style: {\n          whiteSpace: \"unset\"\n        }\n      }, {\n        headerClassName: \"apply-table-thead\",\n        Header: \"Download1\",\n        accessor: \"file1\",\n        style: {\n          whiteSpace: \"unset\"\n        },\n        show: false\n      }, {\n        headerClassName: \"apply-table-thead\",\n        Header: \"Download2\",\n        accessor: \"file2\",\n        style: {\n          whiteSpace: \"unset\"\n        },\n        show: false\n      }, {\n        headerClassName: \"apply-table-thead\",\n        Header: \"Download3\",\n        accessor: \"file3\",\n        style: {\n          whiteSpace: \"unset\"\n        },\n        show: false\n      }, {\n        headerClassName: \"apply-table-thead\",\n        Header: \"HUGID\",\n        accessor: \"HUGID\",\n        style: {\n          whiteSpace: \"unset\"\n        },\n        show: false\n      }, {\n        headerClassName: \"apply-table-thead\",\n        Header: \"ID\",\n        accessor: \"recipientID\",\n        style: {\n          whiteSpace: \"unset\"\n        },\n        show: false\n      }, {\n        headerClassName: \"apply-table-thead\",\n        Header: \"Share\",\n        accessor: \"share\",\n        style: {\n          whiteSpace: \"unset\"\n        },\n        show: false\n      }],\n      getTrGroupProps: (state, rowInfo) => {\n        if (rowInfo && rowInfo.row) {\n          return {\n            onClick: e => {\n              // Unselect\n              if (this.state.display_remove && rowInfo.index === this.state.index) {\n                this.setState({\n                  display_remove: false,\n                  index: -1,\n                  covid: \"\",\n                  share: \"\",\n                  selected_requestName: \"\",\n                  requestAmount: 0,\n                  monthlyIncome: \"\",\n                  story: \"\",\n                  downloadDoc1: \"\",\n                  downloadDoc2: \"\",\n                  downloadDoc3: \"\",\n                  HUGID: -1,\n                  recipientID: \"\"\n                });\n              } else if (this.state.display_remove && rowInfo.index !== this.state.index) {\n                // Clicked on new row\n                this.setState({\n                  index: rowInfo.index,\n                  covid: rowInfo.row.covid,\n                  share: rowInfo.row.share,\n                  selected_requestName: rowInfo.row.fullName,\n                  requestAmount: rowInfo.row.desiredAmount,\n                  story: rowInfo.row.story,\n                  monthlyIncome: rowInfo.row.monthly_income,\n                  downloadDoc1: rowInfo.row.file1,\n                  downloadDoc2: rowInfo.row.file2,\n                  downloadDoc3: rowInfo.row.file3,\n                  HUGID: rowInfo.row.HUGID,\n                  recipientID: rowInfo.row.recipientID\n                });\n              } else {\n                this.setState({\n                  // First time click\n                  display_remove: true,\n                  index: rowInfo.index,\n                  covid: rowInfo.row.covid,\n                  share: rowInfo.row.share,\n                  selected_requestName: rowInfo.row.fullName,\n                  requestAmount: rowInfo.row.desiredAmount,\n                  story: rowInfo.row.story,\n                  monthlyIncome: rowInfo.row.monthly_income,\n                  downloadDoc1: rowInfo.row.file1,\n                  downloadDoc2: rowInfo.row.file2,\n                  downloadDoc3: rowInfo.row.file3,\n                  HUGID: rowInfo.row.HUGID,\n                  recipientID: rowInfo.row.recipientID\n                });\n              }\n\n              console.log(rowInfo.row.requestAmount);\n            },\n            style: {\n              background: rowInfo.index === this.state.index ? \"#f0e3d2c\" : '',\n              color: rowInfo.index === this.state.index ? \"#3771ce\" : '',\n              border: rowInfo.index === this.state.index ? \"2px solid #3771ce\" : ''\n            }\n          };\n        }\n      },\n      defaultPageSize: 5,\n      showPageSizeOptions: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1208,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        width: \"100%\",\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1357,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1358,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      size: \"lg\",\n      onClick: this.openModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1359,\n        columnNumber: 25\n      }\n    }, \"View Applicants\"), /*#__PURE__*/React.createElement(ViewApplicants, {\n      open: this.state.open,\n      covid: this.state.covid,\n      share: this.state.share,\n      selected_requestName: this.state.selected_requestName,\n      requestAmount: this.state.requestAmount,\n      story: this.state.story,\n      monthlyIncome: this.state.monthlyIncome,\n      downloadDoc1: this.state.downloadDoc1,\n      downloadDoc2: this.state.downloadDoc2,\n      downloadDoc3: this.state.downloadDoc3,\n      HUGID: this.state.HUGID,\n      recipientID: this.state.recipientID,\n      closeModal: this.closeModal,\n      removeApplicant: this.removeApplicant,\n      rejectApplicant: this.rejectApplicant,\n      awardHUG: this.awardHUG,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1360,\n        columnNumber: 25\n      }\n    })))));\n  }\n\n  getDonationsCard(elements) {\n    return /*#__PURE__*/React.createElement(Card, {\n      style: {\n        margin: \"2px\",\n        marginBottom: \"4px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1395,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1396,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1397,\n        columnNumber: 17\n      }\n    }, \"Recent Transactions\"), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1398,\n        columnNumber: 17\n      }\n    }, \"View your most recent donations and withdrawls\"), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1402,\n        columnNumber: 17\n      }\n    }, \"Here is a short list of your most recent transactions\"), /*#__PURE__*/React.createElement(ReactTable, {\n      data: [],\n      columns: [{\n        headerClassName: \"apply-table-thead\",\n        Header: \"Sample Column\",\n        accessor: \"something\",\n        style: {\n          whiteSpace: \"unset\"\n        }\n      }],\n      defaultPageSize: 3,\n      showPagination: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1403,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1416,\n        columnNumber: 17\n      }\n    }, \"Here is a button promting the user to go to the transactions page for more information\")));\n  }\n\n  getMyGrantsCard() {\n    return /*#__PURE__*/React.createElement(Card, {\n      style: {\n        margin: \"2px\",\n        marginBottom: \"4px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1428,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1429,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1430,\n        columnNumber: 17\n      }\n    }, \"My Grants\"), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1431,\n        columnNumber: 17\n      }\n    }, \"Here you can see a list of all your active grants\"), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1435,\n        columnNumber: 17\n      }\n    }, \"Clicking on a grant will take you to its page\"), /*#__PURE__*/React.createElement(ReactTable, {\n      data: [],\n      columns: [{\n        headerClassName: \"apply-table-thead\",\n        Header: \"Sample Column\",\n        accessor: \"something\",\n        style: {\n          whiteSpace: \"unset\"\n        }\n      }],\n      defaultPageSize: 6,\n      showPagination: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1439,\n        columnNumber: 17\n      }\n    })));\n  } // -----------------------------------------------------------------------------------------------//\n  // Below here is the code for universal utility functions //\n  // -----------------------------------------------------------------------------------------------//\n\n\n  notificationsCard() {\n    return /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '18rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1464,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1465,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1466,\n        columnNumber: 21\n      }\n    }, this.getGreeting())));\n  }\n\n  getGreeting() {\n    return typeof this.state.firstName === 'undefined' ? \"Welcome \".concat(this.state.userName) : \"Welcome \".concat(this.state.firstName);\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/ubuntu/Connor/WorkOSU/app/src/pages/MainPages/Dashboard/index.js"],"names":["React","Component","AffordableClient","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","CardColumns","ListGroup","ButtonGroup","Container","Row","Col","Form","ReactTable","LinkContainer","CollapseWithHeader","Blob","axios","Popup","swal","DepositButton","WithdrawButton","UserType","ViewApplicants","constructor","props","REACT_APP_AF_BACKEND_URL","process","env","window","client","state","index","requestAmount","rejectRequest","bind","grantRequest","closeModal","handleAmount","downloadDocument","e","setState","target","value","console","log","selected_requestName","reason","JSON","parse","sessionStorage","getItem","primaryEmail","title","buttons","Cancel","Confirm","text","closeOnClickOutside","icon","then","rejectApplicant","HUGID","recipientID","removeApplicant","story","awardHUG","close","map","Map","set","downloadDoc1","downloadDoc2","downloadDoc3","i","get","undefined","data","FormData","fileName","append","fileDownload","json","url","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","render","open","width","margin","padding","share","covid","monthlyIncome","parseFloat","toFixed","Dashboard","getApplications","requests","recipients","stripeOnboardingStatus","userName","userType","usertype","fetch","method","response","ok","alert","resData","accountID","requirementsDue","error","statusText","Error","success","id","message","status","requirements","buttonMessage","showVerified","stripeOnboarding","setItem","location","cancel","proceed","replace","getOwnedHUGs","username","hugList","extractPendingHUGs","HUGList","filteredHUGList","HUG","Status","push","getRecipientAppliedHUGs","recipientUsername","getHUGApplicants","applicants","getHUGPendingApplicants","allApplicants","pendingApplicants","applicant","getBalance","formatBalance","pendingBalance","balance","amount","userId","firstName","selected_hug","selected_hugID","display_remove","selected_recipient","beenVerified","hugs","openModal","handleSelectedRecipient","val1","val2","val3","newRequest","filter","fullName","desiredAmount","val","getDashboardHUGs","componentDidMount","localeCompare","RECIPIENT","componentWillUnmount","clearInterval","checkBalance","getDashboardHUGsInterval","DONOR","returnObj0","length","pending","available","p","toLocaleString","minimumFractionDigits","a","availableBalance","getDonorDash","getRecipientDash","maxWidth","getRecipientActionCard","getApplicationCard","getAccountsCard","marginBottom","getGreeting","height","size","color","headerClassName","Header","accessor","style","whiteSpace","getDonorActionCard","show","rowInfo","row","onClick","monthly_income","file1","file2","file3","background","border","getDonationsCard","elements","getMyGrantsCard","notificationsCard"],"mappings":"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","sourcesContent":["import \"./scss/dashboard.scss\";\nimport React, { Component } from \"react\";\nimport { AffordableClient } from \"affordable-client\";\nimport {Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button, CardColumns, ListGroup, ButtonGroup} from \"react-bootstrap\"\nimport {Container, Row, Col, Form} from \"react-bootstrap\"\nimport ReactTable from \"react-table\"; /*INSERT */\nimport { LinkContainer } from \"react-router-bootstrap\";/*INSERT */\nimport CollapseWithHeader from \"../../../components/CollapseWithHeader\";\n\nimport Blob from 'blob';\nimport axios from 'axios';\n\n\nimport Popup from \"reactjs-popup\";\nimport swal from \"sweetalert\";\n\nimport \"../Settings/scss/settings.scss\";\nimport \"./scss/dashboard.scss\";\nimport \"../../../styles/buttons.css\";/*INSERT */\nimport DepositButton from \"../../../components/Modal/DepositButton\";\nimport WithdrawButton from \"../../../components/Modal/WithdrawButton\";\n\nimport {UserType} from \"affordable-shared-models\";\n\n\nclass ViewApplicants extends Component{\n\n    REACT_APP_AF_BACKEND_URL = process.env.REACT_APP_AF_BACKEND_URL || window.REACT_APP_AF_BACKEND_URL;\n\n    constructor(props){\n        super(props);\n        this.client = new AffordableClient();\n        this.state  = {\n            index: -1,\n            requestAmount: 0\n\n        };\n\n        this.rejectRequest = this.rejectRequest.bind(this);\n        this.grantRequest = this.grantRequest.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.handleAmount = this.handleAmount.bind(this);\n        this.downloadDocument = this.downloadDocument.bind(this);\n\n\n    }\n\n    handleAmount(e){\n        this.setState({requestAmount: e.target.value});\n    }\n\n    closeModal(){\n        this.props.closeModal();\n    }\n\n    async rejectRequest(){\n        console.log(this.props.requestAmount);\n        console.log(this.props.selected_requestName);\n        console.log(this.props.reason);\n        console.log(JSON.parse(sessionStorage.getItem('userInfo')).primaryEmail);\n\n        console.log(\"reject\");\n        swal({title: \"Do you want to reject \" + this.props.selected_requestName + \"?\",\n        buttons: {\n            Cancel: true,\n            Confirm: {\n                text: \"Confirm\",\n                value: \"Confirm\",\n            },\n        },\n        closeOnClickOutside: false,\n        icon: \"success\"})\n            .then(async (value) =>{\n\n            switch(value){\n                case \"Cancel\":\n                    break;\n\n                case \"Confirm\":\n\n                    await this.props.rejectApplicant(this.props.HUGID, this.props.recipientID, JSON.parse(sessionStorage.getItem('userInfo')).primaryEmail);\n                    this.props.removeApplicant(this.props.selected_requestName, this.props.requestAmount, this.props.story);\n                    this.props.closeModal();\n\n                default:\n                    break;\n            }\n            });\n    }\n\n    async grantRequest(){\n        console.log(this.props.HUGID);\n        console.log(this.props.recipientID);\n\n        if(this.state.requestAmount != 0){\n            console.log(\"Grant\");\n            swal({title: \"Do you want to granted \" + this.state.requestAmount + \" to \" + this.props.selected_requestName + \"?\",\n            buttons: {\n                Cancel: true,\n                Confirm: {\n                    text: \"Confirm\",\n                    value: \"Confirm\",\n                },\n            },\n            closeOnClickOutside: false,\n            icon: \"success\"})\n              .then(async (value) =>{\n\n                switch(value){\n                    case \"Cancel\":\n                        console.log(\"Cancel grant\");\n                        break;\n\n                    case \"Confirm\":\n                        console.log(this.props.selected_requestName);\n                        await this.props.awardHUG(this.props.HUGID, this.props.recipientID, this.state.requestAmount,JSON.parse(sessionStorage.getItem('userInfo')).primaryEmail);\n                        this.props.removeApplicant(this.props.selected_requestName, this.props.requestAmount, this.props.story);\n                        this.props.closeModal();\n\n                    default:\n                        break;\n                }\n              });\n        }\n        else{\n            console.log(\"don't award\");\n            swal({title: \"Please enter an amount to grant to \" + this.props.selected_requestName,\n            buttons: {\n                close: {\n                    text: \"Close\",\n                    value: \"Close\",\n                },\n            },\n            icon: \"error\"});\n        }\n    }\n\n    async downloadDocument(){\n\n        const map= new Map();\n        map.set(\"file0\", this.props.downloadDoc1);\n        map.set(\"file1\", this.props.downloadDoc2);\n        map.set(\"file2\", this.props.downloadDoc3);\n\n        const i=0;\n        for(i=0; i<3; i++){\n            if(map.get(\"file\"+i)!=null && map.get(\"file\"+i)!=undefined ){\n                const data= new FormData();\n                var fileName=map.get(\"file\"+i);\n                data.append(\"fileName\", fileName);\n\n                var json = await this.client.fileDownload(data);\n                console.log(json);\n\n                const url = window.URL.createObjectURL(new Blob([json]));\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download',fileName);\n                document.body.appendChild(link);\n                link.click();\n\n        // await axios({\n        //     url: process.env.REACT_APP_AF_BACKEND_URL + \"/file/download\",data,\n        //     method: 'POST',\n        //     responseType: 'blob',\n        //   }).then((response) => {\n        //       console.log(response);\n        //     // const url = window.URL.createObjectURL(new Blob([response.data]));\n        //     // const link = document.createElement('a');\n        //     // link.href = url;\n        //     // link.setAttribute('download',fileName);\n        //     // document.body.appendChild(link);\n        //     // link.click();\n        //   });\n\n              }\n          }\n    }\n\n    render(){\n        return (\n        <Popup\n            open={this.props.open}\n            closeOnDocumentClick = {true}\n            onClose={this.closeModal}>\n\n              <a className=\"close\" onClick={this.closeModal}>\n                  &times;\n              </a>\n              <div className=\"header\"> <p></p> </div>\n              <div className=\"content\">\n\n                <Row style={{width: \"100%\", margin: \"0px\"}}>\n                    <Col style={{padding: \"5px\"}}>\n                        <h4>Applicant: {this.props.selected_requestName}</h4>\n                    </Col>\n                </Row>\n\n                <Row style={{width: \"100%\", margin: \"0px\"}}>\n                    <Col style={{padding: \"5px\"}}>\n                        <h6>Applicant Story</h6>\n                    </Col>\n                    <Col style={{padding: \"5px\"}}>\n                        <textarea cols={35} rows={5} value={this.props.story} />\n                    </Col>\n                </Row>\n\n                <Row style={{width: \"100%\", margin: \"0px\"}}>\n                    <Col style={{padding: \"5px\"}}>\n                        <h6>Willing to Share Their Story</h6>\n                    </Col>\n                    <Col style={{padding: \"5px\"}}>\n                        <p>{this.props.share}</p>\n                    </Col>\n                </Row>\n\n                <Row style={{width: \"100%\", margin: \"0px\"}}>\n                    <Col style={{padding: \"5px\"}}>\n                        <h6>Applicant COVID Test Result</h6>\n                    </Col>\n                    <Col style={{padding: \"5px\"}}>\n                        <p>{this.props.covid}</p>\n                    </Col>\n                </Row>\n\n                <Row style={{width: \"100%\", margin: \"0px\"}}>\n                    <Col style={{padding: \"5px\"}}>\n                        <h6>Applicant Monthly Income</h6>\n                    </Col>\n                    <Col style={{padding: \"5px\"}}>\n                        <p>{this.props.monthlyIncome}</p>\n                    </Col>\n                </Row>\n\n                <Row style={{width: \"100%\", margin: \"0px\"}}>\n                    <Col style={{padding: \"5px\"}}>\n                        <h6>Request Amount</h6>\n                    </Col>\n                    <Col style={{padding: \"5px\"}}>\n                    <p>{this.props.requestAmount}</p>\n                    </Col>\n                </Row>\n\n                <Row style={{width: \"100%\", margin: \"0px\"}}>\n                    <Col style={{padding: \"5px\"}}>\n                        <h6>Recommended Grant Amount</h6>\n                    </Col>\n                    <Col style={{padding: \"5px\"}}>\n                    <p>{((parseFloat(this.props.requestAmount) * 100) / 97.5).toFixed(2)}</p>\n                    </Col>\n                </Row>\n\n                <Row style={{width: \"100%\", margin: \"0px\"}}>\n                    <Col style={{padding: \"5px\"}}>\n                        <h6>Request Documentation</h6>\n                    </Col>\n                    <Col style={{padding: \"5px\"}}>\n                        <Button block style={{width: 250}} size=\"1g\" onClick={this.downloadDocument} >Download</Button>\n                    </Col>\n                </Row>\n\n                <Row style={{width: \"100%\", margin: \"0px\"}}>\n                    <Col style={{padding: \"5px\"}}>\n                        <h6>Grant Amount:</h6>\n                    </Col>\n                    <Col style={{padding: \"5px\"}}>\n                        <input\n                            type=\"text\"\n                            id=\"amountNumber\"\n                            value={this.state.requestAmount}\n                            onChange={this.handleAmount} />\n                    </Col>\n                </Row>\n\n                <Row style={{width: \"100%\", margin: \"0px\"}}>\n                    <Col style={{padding: \"5px\"}}>\n                        <Button block size=\"lg\" onClick={this.rejectRequest} >Reject</Button>\n                    </Col>\n                    <Col style={{padding: \"5px\"}}>\n                        <Button block size=\"lg\" onClick={this.grantRequest}>Grant</Button>\n                    </Col>\n                </Row>\n\n                <Row style={{width: \"100%\", margin: \"0px\"}}>\n                </Row>\n\n              </div>\n              <div className=\"actions\">\n                  <div className=\"floats-right\">\n                  {/*Cancel the transaction */}\n                  <button\n                    className=\"submit-button\"\n                    onClick={this.closeModal}>\n                      Cancel\n                  </button>\n                  </div>\n\n                  { /* Submit the transaction*/ }\n                  {/*NEED TO CHECK WHAT OTHER PEOPLE ARE USING TO DETERMINE USER */ }\n              </div>\n          </Popup>\n        );\n    }\n\n}\n\n\n\n\n\nclass Dashboard extends Component {\n\n    // -----------------------------------------------------------------------------------------------//\n    // Below here are constructors and other essential code blocks //\n    // -----------------------------------------------------------------------------------------------//\n    REACT_APP_AF_BACKEND_URL = process.env.REACT_APP_AF_BACKEND_URL || window.REACT_APP_AF_BACKEND_URL;\n    constructor(props) {\n        super(props);\n\n        console.log(props);\n\n        this.client = new AffordableClient();\n        this.state = {\n            userId: this.props.userId,\n            userName: this.props.userName,\n            userType: this.props.userType,\n            firstName: this.props.firstName,\n            index: -1,\n            selected_hug: \"\",\n            selected_hugID: -1,\n            display_remove: false,\n            open: false,\n            selected_recipient:\"\",\n            buttonMessage: \"\",\n            beenVerified: sessionStorage.getItem(\"Verified\") === null,\n            showVerified: sessionStorage.getItem(\"Verified\") === null || sessionStorage.getItem(\"Verified\") === \"inProcess\",\n            //firstName: \"Elan\"\n            hugs: [],\n            covid: \"\",\n            share:\"\",\n            monthlyIncome: \"\",\n            selected_requestName: \"\",\n            requestAmount: 0,\n            story: \"\",\n            downloadDoc1: \"\",\n            downloadDoc2: \"\",\n            downloadDoc3: \"\",\n            HUGID: -1,\n            recipientID: \"\",\n            requests: []\n            // requests: [{recipientID: \"d\", HUGID: 2, covid: \"Yes\", desiredAmount: 30, fullName: \"Nick\", monthly_income: \"3000-5000\" , story: \"COVID-19\", file1: \"1.zip\", file2: \"2.zip\", file3: \"3.zip\"},\n            // {recipientID: \"Hello\", HUGID: 3, covid: \"No\", desiredAmount: 100, fullName: \"Sam J\", monthly_income: \"1000-3000\" , story: \"Broken Arm\", file1: \"2.zip\", file2: \"2.zip\", file3: \"2.zip\"},\n            // {recipientID: \"Good\", HUGID: 4, covid: \"No\", desiredAmount: 50, fullName: \"Jack A\", monthly_income: \"4000-6000\" , story: \"Doctor Appointment\", file1: \"2.zip\", file2: \"2.zip\", file3: \"2.zip\"},\n            // {recipientID: \"Bye\", HUGID: 5, covid: \"Yes\", desiredAmount: 35, fullName: \"Nick\", monthly_income: \"3000-5000\" , story: \"Sed ut perspiciatis, unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam eaque ipsa, quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt, explicabo. Nemo enim ipsam voluptatem, quia voluptas sit, aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos, qui ratione voluptatem sequi nesciunt, neque porro quisquam est, qui dolorem ipsum, quia dolor sit amet consectetur adipisci[ng]velit, sed quia non-numquam [do] eius modi tempora inci[di]dunt, ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum[d] exercitationem ullam corporis suscipitlaboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit, qui inea voluptate velit esse, quam nihil molestiae consequatur, vel illum, qui dolorem eum fugiat, quo voluptas nulla pariatur? [33] At vero eos et accusamus et iusto odio dignissimos ducimus, qui blanditiis praesentium voluptatum deleniti atque corrupti, quos dolores et quas molestias excepturi sint, obcaecati cupiditate non-provident, similique sunt in culpa, qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio, cumque nihil impedit, quo minus id, quod maxime placeat, facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet, ut et voluptates repudiandae sint et molestiae non-recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat…\", file1: \"2.zip\", file2: \"2.zip\", file3: \"2.zip\"}]\n\n        };\n        this.getBalance();\n\n\n        this.closeModal = this.closeModal.bind(this);\n        this.openModal = this.openModal.bind(this);\n        this.handleSelectedRecipient = this.handleSelectedRecipient.bind(this);\n        this.removeApplicant = this.removeApplicant.bind(this);\n        this.getApplications = this.getApplications.bind(this);\n    }\n\n    getApplications = async (e)=>{\n        var json = await this.client.getApplications(\"Pending\");\n        this.setState({requests: json.recipients});\n    }\n\n    removeApplicant(val1, val2, val3){\n        console.log(\"RemoveApplicant\");\n        console.log(val1);\n        console.log(val2);\n        console.log(val3);\n        let newRequest = this.state.requests.filter(applicant => (applicant.fullName !== val1 || applicant.desiredAmount !== val2 || applicant.story !== val3));\n        this.setState({\n            requests: newRequest\n        });\n    }\n\n    handleSelectedRecipient(val){\n        this.setState({\n            selected_recipient: val\n        });\n    }\n\n    closeModal(){\n        this.setState({open:false});\n    }\n\n    async openModal(){\n        if(this.state.selected_requestName != \"\"){\n            {/*let v = await this.getHUGPendingApplicants(this.state.selected_hugID);*/}\n\n            this.setState({\n                open:true\n\n            });\n        }\n        else{\n            swal(\"Please select a request\", \"\", \"error\");\n            this.getDashboardHUGs();\n        }\n    }\n\n\n    // Do this stuff after page loads\n    async componentDidMount() {\n        console.log(`Loaded dashboard with user information:\n        id: ${this.state.userId}\n        user: ${this.state.userName}\n        type: ${this.state.userType}\n        name: ${this.state.firstName}`);\n\n        // Do these immediately upon load\n        this.getBalance() // Update balance every\n        this.getDashboardHUGs() // Get donor/recipient HUGs\n        this.getApplications();\n\n        if (\"admin\".localeCompare(this.state.userName) !== 0 && this.state.userType === UserType.RECIPIENT) {\n            this.stripeOnboardingStatus();\n        }\n\n        // And then repeat on a polling interval (in milliseconds)\n        //this.checkBalance=setInterval(() => this.getBalance(), 1000);\n        // this.getDashboardHUGsInterval = setInterval(() => this.getDashboardHUGs(), 2000);\n    }\n\n    componentWillUnmount() {\n        // Stop repeating Dashboard tasks\n        clearInterval(this.checkBalance);\n        clearInterval(this.getDashboardHUGsInterval);\n  }\n\n    // Get all the hugs to populate the dashboard. Different functions are called depending on usertype\n    async getDashboardHUGs() {\n        let hugs = [];\n\n        if (this.state.userType === UserType.DONOR) {\n            let returnObj0 = await this.getOwnedHUGs(this.state.userName);\n\n            if (returnObj0 != null && returnObj0.length > 0) {\n                hugs = this.extractPendingHUGs(returnObj0);\n            }\n\n            // console.log(\"Donor user's unawarded HUGs:\");\n            // console.log(hugs);\n            this.setState({\n                hugs: hugs\n            });\n        }\n        else {\n            let returnObj0 = await this.getRecipientAppliedHUGs(this.state.userName);\n\n            if (returnObj0 != null && returnObj0.length > 0) {\n                hugs = this.extractPendingHUGs(returnObj0);\n            }\n\n            // console.log(\"Recipient user's applied HUGs with \\\"Pending\\\" status:\");\n            // console.log(hugs);\n            this.setState({\n                hugs: hugs\n            });\n        }\n    }\n\n    stripeOnboardingStatus = async() => {\n        console.log(this.state.userName, this.state.userType);\n        const data = new FormData();\n        data.append(\"username\", this.state.userName);\n        const usertype = null;\n\n        // gets the usertype\n        await fetch(this.REACT_APP_AF_BACKEND_URL +\"/profile/get-user-type\", {\n            method: \"POST\",\n            body: data\n            })\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            } else {\n                alert(\"Unable to get user type\");\n            }\n         })\n        .then(resData => {\n            usertype = resData.usertype;\n        });\n\n        data.append(\"usertype\", usertype);\n\n        var accountID = null;\n        var requirementsDue = false;\n        // first attempts to get the Stripe Connected Account ID of the current user\n        try {\n            const response = await fetch(this.REACT_APP_AF_BACKEND_URL +\"/stripe/getCustomAccountID\", {\n                method: \"POST\",\n                body: data\n            });\n            if(!response.ok) {\n                console.error(response.statusText);\n                throw Error(response.statusText);\n            }\n\n            const json = await response.json();\n\n            // if no Connect Account was found, then send an alert\n            // Though, this is not possible since both recipients and donors are given one\n            if(json.success === \"No Account Found\") {\n                alert(\"Error: No Withdraw Account Found!\");\n            } else {\n                accountID = json.id;\n                console.log(\"Account Found: \" + accountID);\n\n                data.append(\"accountID\", accountID);\n            }\n\n        } catch(error) {\n            console.error(error);\n        }\n\n        // checks if account needs to be verified\n        try {\n            const response = await fetch(this.REACT_APP_AF_BACKEND_URL +\"/stripe/checkConnectRequirements\", {\n                method: \"POST\",\n                body: data\n            });\n            if(!response.ok) {\n                console.error(response.statusText);\n                throw Error(response.statusText);\n            }\n\n            const json = await response.json();\n\n            if(json.success === \"STRIPE ERROR\") {\n                console.error(json.message);\n            } else {\n                if(json.status === \"None\") {\n                    requirementsDue = false;\n                }\n                else {\n                    const requirements = json.requirements;\n\n                    requirementsDue = true;\n                }\n                console.log(\"Account Found: \" + accountID);\n                accountID = json.id;\n            }\n\n        } catch(error) {\n            console.error(error);\n        }\n\n        if(requirementsDue){\n            // First check of status\n            if(sessionStorage.getItem(\"Verified\") === null){\n                this.setState({buttonMessage: \"Get Verified\"});\n            } else if (sessionStorage.getItem(\"Verified\") === \"inProcess\"){\n                this.setState({buttonMessage: \"We need more information\"});\n            } else {\n                this.setState({ showVerified: false});\n            }\n        } else {\n            this.setState({ showVerified: false});\n        }\n    }\n\n    stripeOnboarding = async () => {\n        console.log(this.state.userName, this.state.userType);\n        const data = new FormData();\n        data.append(\"username\", this.state.userName);\n        const usertype = null;\n\n        // gets the usertype\n        await fetch(this.REACT_APP_AF_BACKEND_URL +\"/profile/get-user-type\", {\n            method: \"POST\",\n            body: data\n            })\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            } else {\n                alert(\"Unable to get user type\");\n            }\n         })\n        .then(resData => {\n            usertype = resData.usertype;\n        });\n\n        data.append(\"usertype\", usertype);\n\n        var accountID = null;\n        var requirementsDue = false;\n        // first attempts to get the Stripe Connected Account ID of the current user\n        try {\n            const response = await fetch(this.REACT_APP_AF_BACKEND_URL +\"/stripe/getCustomAccountID\", {\n                method: \"POST\",\n                body: data\n            });\n            if(!response.ok) {\n                console.error(response.statusText);\n                throw Error(response.statusText);\n            }\n\n            const json = await response.json();\n\n            // if no Connect Account was found, then send an alert\n            // Though, this is not possible since both recipients and donors are given one\n            if(json.success === \"No Account Found\") {\n                alert(\"Error: No Withdraw Account Found!\");\n            } else {\n                accountID = json.id;\n                console.log(\"Account Found: \" + accountID);\n\n                data.append(\"accountID\", accountID);\n            }\n\n        } catch(error) {\n            console.error(error);\n        }\n\n        // checks if account needs to be verified\n        try {\n            const response = await fetch(this.REACT_APP_AF_BACKEND_URL +\"/stripe/checkConnectRequirements\", {\n                method: \"POST\",\n                body: data\n            });\n            if(!response.ok) {\n                console.error(response.statusText);\n                throw Error(response.statusText);\n            }\n\n            const json = await response.json();\n\n            if(json.success === \"STRIPE ERROR\") {\n                console.error(json.message);\n            } else {\n                if(json.status === \"None\") {\n                    requirementsDue = false;\n                }\n                else {\n                    const requirements = json.requirements;\n                    if(requirements[0] === \"external_account\") {\n                        alert(\"Please Add a Bank Account in Settings/Banking Information\");\n                        return;\n                    }\n                    requirementsDue = true;\n                }\n                console.log(\"Account Found: \" + accountID);\n                accountID = json.id;\n            }\n\n        } catch(error) {\n            console.error(error);\n        }\n\n        //Change display\n        if(requirementsDue === false){\n            sessionStorage.setItem(\"Verified\", \"Verified\");\n            this.setState({\n                showVerified:false\n            });\n        }\n        else {\n            data.append(\"successURL\",window.location.href);\n            data.append(\"failureURL\", window.location.href);\n\n\n            //alert(\"To enable withdraws, we need more information. Redirecting to form...\");\n            swal({title: \"To enable withdraws, we need more information. Proceed to information form?\",\n                buttons: {\n                    cancel: \"Cancel\",\n                    proceed: {\n                        text: \"Proceed\",\n                        value: \"proceed\",\n                    },\n                },\n              })\n              .then(async (value) =>{\n                // console.log(value + \"hellllllooooo\");\n\n                switch(value){\n\n                    case \"proceed\":\n                        sessionStorage.setItem(\"Verified\", \"inProcess\");\n                        // console.log(\"Proceed1111111\");\n                        try {\n                            const response = await fetch(this.REACT_APP_AF_BACKEND_URL +\"/stripe/onboardingInfoRequest\", {\n                                method: \"POST\",\n                                body: data\n                            });\n                            if(!response.ok) {\n                                throw Error(response.statusText);\n                            }\n\n                            const json = await response.json();\n\n                            if(json.success == \"STRIPE ERROR\") {\n                                alert(\"Can't reach Stripe\")\n                                console.error(json.message);\n                            } else {\n                                console.log(json.message)\n                                window.location.replace(json.message.url);\n                            }\n\n                        } catch(error) {\n                            console.error(error);\n                        }\n                        break;\n\n                    default:\n                        // console.log(\"Default3333333333\");\n\n                        break;\n                }\n              });\n        }\n    }\n\n    // Return a list of HUGs owned by the donor with the given username with\n    // server/src/services/StripeService.ts getOwnedHugs()\n    getOwnedHUGs = async (username) => {\n        const data = new FormData();\n        data.append(\"username\", username);\n\n        try {\n            const response = await fetch(this.REACT_APP_AF_BACKEND_URL +\"/stripe/getOwnedHugs\", {\n                method: \"POST\",\n                body: data\n            });\n            if (! response.ok) {\n                console.log(\"Dashboard getOwnedHugs() BAD RESPONSE:\");\n                throw Error(response.statusText);\n\n                return [];\n            }\n            const json = await response.json();\n\n            if(json.success === \"getOwnedHugs()\"){\n                return json.hugList;\n            }\n            else {\n                return [];\n            }\n        } catch (error) {\n            console.log(\"Dashboard getOwnedHugs() ERROR:\");\n            console.log(error);\n\n            return [];\n        }\n    }\n\n    // Return only those HUGs of HUGList which have \"Pending\" status\n    extractPendingHUGs = (HUGList) => {\n        let filteredHUGList = [];\n\n        for (let HUG of HUGList) {\n            if (HUG.Status == \"Pending\") {\n                filteredHUGList.push(HUG);\n            }\n        }\n\n        return filteredHUGList;\n    }\n\n    // Return a list of HUGs a recipient with the given username has applied to\n    // with server/src/services/StripeService.ts getRecipientAppliedHUGs()\n    //\n    // Useful for recipient dashboards, listing all their applied-to HUGs\n    getRecipientAppliedHUGs = async (recipientUsername) => {\n        const data = new FormData();\n        data.append(\"recipientUsername\", recipientUsername);\n\n        try {\n            const response = await fetch(this.REACT_APP_AF_BACKEND_URL+\"/stripe/getRecipientAppliedHUGs\", {\n                method: \"POST\",\n                body: data\n            });\n            if (! response.ok) {\n                console.log(\"Dashboard getRecipientAppliedHUGs() BAD RESPONSE:\");\n                throw Error(response.statusText);\n\n                return [];\n            }\n            const json = await response.json();\n\n            if(json.success === \"getRecipientAppliedHUGs()\"){\n                return json.hugList;\n            }\n            else {\n                return [];\n            }\n        } catch (error) {\n            console.log(\"Dashboard getRecipientAppliedHUGs() ERROR:\");\n            console.log(error);\n\n            return [];\n        }\n    }\n\n    // Return all a HUG's applicants with\n    // server/src/services/StripeService.ts getHUGApplicants()\n    //\n    // Useful for donor dashboards, listing all the applicants to their HUG(s)\n    getHUGApplicants = async (HUGID) => {\n        const data = new FormData();\n        data.append(\"HUGID\", HUGID);\n\n        try {\n            const response = await fetch(this.REACT_APP_AF_BACKEND_URL+\"/stripe/getHUGApplicants\", {\n                method: \"POST\",\n                body: data\n            });\n            if (!response.ok) {\n                console.log(\"Dashboard getHUGApplicants() BAD RESPONSE:\");\n                throw Error(response.statusText);\n\n                return [];\n            }\n            const json = await response.json();\n            console.log(\"Dashboard getHUGApplicants() SUCCESS:\");\n            // console.log(json)\n\n            return json.applicants;\n        } catch (error) {\n            console.log(\"Dashboard getHUGApplicants() ERROR:\");\n            // console.log(error);\n\n            return [];\n        }\n    }\n\n    // Return all a HUG's pending applicants with\n    // server/src/services/StripeService.ts getHUGApplicants()\n    getHUGPendingApplicants = async (HUGID) => {\n        const allApplicants = await this.getHUGApplicants(HUGID);\n        let pendingApplicants = [];\n\n        for (let applicant of allApplicants) {\n            if (applicant.Status == \"Pending\") {\n                pendingApplicants.push(applicant);\n            }\n        }\n\n        return pendingApplicants;\n    }\n\n    formatBalance(pending, available) {\n        var p = pending.toLocaleString(undefined, { minimumFractionDigits: 2 });\n        var a = available.toLocaleString(undefined, { minimumFractionDigits: 2 });\n        this.setState({\n          pendingBalance: p,\n          availableBalance: a\n        });\n      }\n\n    getBalance = async () => {\n        const data = new FormData();\n        data.append(\"username\", this.props.userName);\n        data.append(\"usertype\", this.props.userType);\n\n        try {\n          const response = await fetch(this.REACT_APP_AF_BACKEND_URL+\"/transaction/balance\", {\n            method: \"POST\",\n            body: data\n          });\n          if (!response.ok) {\n            throw Error(response.statusText);\n          }\n          const json = await response.json();\n          if (json.success === \"Balance found\") {\n            this.formatBalance(json.pendingBalance, json.balance);\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      }\n\n      // Award the HUG with the given HUGID to the applicant with the given username,\n      // returning true if successful and false otherwise, using\n      // server/src/services/StripeService.ts transferFundFromHUGToRecipient()\n      awardHUG = async (HUGID, username, amount) => {\n        var json = await this.client.awardHUG(HUGID, username, amount);\n        console.log(json);\n        if(json.success === \"Updated Awarded status\"){\n            return true;\n        }\n        else {\n            return false;\n        }\n      }\n\n        // Reject the applicant with the given username for the HUG with the given\n        // HUGID, returning true if successful and false otherwise, using\n        // server/src/services/StripeService.ts rejectRecipient()\n        rejectApplicant = async (HUGID, username) => {\n            var json = await this.client.rejectApplicant(HUGID, username);\n            console.log(json);\n            if(json.success === \"Updated Awarded status\"){\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n\n    render() {\n        //console.log(\"User type is \" + this.state.usertype);\n        return (\n        <div className=\"dash\">\n            {\n                this.props.userName == \"admin\" ?\n                    this.getDonorDash()\n                :\n                    this.getRecipientDash()\n            }\n        </div>\n        )\n    }\n\n    // -----------------------------------------------------------------------------------------------//\n    // Below here is the code for generating the recipient's dashboard //\n    // -----------------------------------------------------------------------------------------------//\n\n    getRecipientDash() {\n        return (\n        <Container style={{margin: \"0px\", maxWidth:\"4000px\"}}>\n            {/* <text>This is a recipient dashboard</text> */}\n\n            <Row>\n\n                <Col style={{padding: \"0px\"}}>\n                    {this.getRecipientActionCard()}\n                </Col>\n\n                <Col style={{padding: \"0px\"}}>\n                    {this.getApplicationCard()}\n                    {this.getAccountsCard()}\n                </Col>\n\n            </Row>\n\n        </Container>\n        )\n    }\n\n    getRecipientActionCard() {\n        return (\n        <Card style={{margin: \"2px\", marginBottom: \"4px\"}}>\n            <Card.Body>\n                <Card.Title>{this.getGreeting()}</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                    You can find important information here at a glance\n                </Card.Subtitle>\n\n                <Card.Text/>\n\n                <Row style={{width: \"100%\", margin: \"0px\"}}>\n                    <Col style={{padding: \"0px\"}}>\n                    <ListGroup horizontal width=\"100%\">\n                        <ListGroup.Item style={{width: \"50%\"}}>\n                            <text>Your waiting grant funds:</text>\n                            <h1>{\n                                this.state.availableBalance === undefined?\n                                \"$__.__\"\n                                :\n                                \"$\" + this.state.availableBalance\n                            }</h1>\n                        </ListGroup.Item>\n                        <ListGroup.Item style={{width: \"50%\"}}>\n                            {this.state.showVerified?\n                                <button className =\"btn btn-primary btn-block btn-lg\" style={{width: \"100%\", height: \"100%\", margin: \"0px\",\n                            size: \"lg\"}} onClick={this.stripeOnboarding}>{this.state.buttonMessage}</button>\n                            :\n                                <WithdrawButton buttonText=\"Claim Your Funds\" buttonStyle={{width: \"100%\", height: \"100%\", margin: \"0px\",\n                            size: \"lg\"}}/>\n                            }\n                        </ListGroup.Item>\n                    </ListGroup>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        {\n                            this.state.availableBalance === undefined ?\n                                <text style={{color: \"red\"}}>Sorry, we had trouble retrieving your information</text>\n                            :\n                            (this.state.availableBalance == 0 ?\n                                <text style={{color: \"red\"}}>Your balance is zero. Try applying to more grants</text>\n                            :\n                                <text></text>\n                            )\n                        }\n                    </Col>\n                </Row>\n\n                <Card.Text/>\n\n                <Row style={{width: \"100%\", margin: \"0px\"}}>\n                    <Col style={{padding: \"0px\"}}>\n                    <ListGroup horizontal width=\"100%\">\n                        <ListGroup.Item style={{width: \"50%\"}}>\n                            <text>Applications Pending:</text>\n                            <h1>\n                            {\n                                this.state.hugs === undefined ? 0\n                                :\n                                this.state.hugs.length\n                            }\n                            </h1>\n                        </ListGroup.Item>\n                        <ListGroup.Item style={{width: \"50%\"}}>\n                            <Button size=\"lg\" block style={{height: \"100%\"}} href=\"/hugbrowser\">Apply For Grants</Button>\n                        </ListGroup.Item>\n                    </ListGroup>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        {\n                            this.state.hugs === undefined || this.state.hugs.length === 0 ?\n                                <text style={{color: \"red\"}}>Click the button to apply for grant funds</text>\n                            :\n                                null\n                        }\n                    </Col>\n                </Row>\n\n                <Card.Text/>\n\n                <Row style={{width: \"100%\", margin: \"0px\"}}>\n                    <Col style={{padding: \"0px\"}}>\n                        <Card.Title>My Applications</Card.Title>\n\n                        {/* Recipient's table of applied-to HUGs */}\n                        <ReactTable\n                                data={this.state.hugs}\n                                columns={[\n                                    {\n                                        headerClassName: \"apply-table-thead\",\n                                        Header: \"Name\",\n                                        accessor: \"HUGName\",\n                                        style: { whiteSpace: \"unset\" }\n                                    },\n                                    {\n                                        headerClassName: \"apply-table-thead\",\n                                        Header: \"Award\",\n                                        accessor: \"Balance\",\n                                        style: { whiteSpace: \"unset\" }\n                                    },\n                                    {\n                                        headerClassName: \"apply-table-thead\",\n                                        Header: \"Status\",\n                                        accessor: \"Status\",\n                                        style: { whiteSpace: \"unset\" }\n                                    }\n                                ]}\n                                showPageSizeOptions={false}\n                                defaultPageSize={5}\n                            />\n                    </Col>\n                </Row>\n                {/* <ButtonGroup vertical style={{width:\"100%\"}}>\n                    <Button size=\"lg\" block>Claim My Grants</Button>\n                    <Button size=\"lg\" block>View All Applications</Button>\n                </ButtonGroup> */}\n\n\n            </Card.Body>\n\n        </Card>\n        )\n    }\n\n    getAccountsCard() {\n        return (\n            <Card style={{margin: \"2px\", marginBottom: \"4px\"}}>\n                <Card.Body>\n                    <Card.Title>My Accounts</Card.Title>\n                    <Card.Subtitle className=\"mb-2 text-muted\">\n                        Review your banking information here\n                    </Card.Subtitle>\n                    <ReactTable\n                                data={[]}\n                                columns={[\n                                    {\n                                        headerClassName: \"apply-table-thead\",\n                                        Header: \"Sample Column\",\n                                        accessor: \"something\",\n                                        style: { whiteSpace: \"unset\" }\n                                    }\n                                ]}\n                                defaultPageSize={5}\n                                showPagination={false}\n                            />\n                    <Button block>Add Bank Account</Button>\n                </Card.Body>\n            </Card>\n            )\n    }\n\n    getApplicationCard() {\n        return (\n            <Card style={{margin: \"2px\", marginBottom: \"4px\"}}>\n                <Card.Body>\n                    <Card.Title>My Application</Card.Title>\n                    <Card.Subtitle className=\"mb-2 text-muted\">\n                        Please make sure your personal and medical information is up to date\n                    </Card.Subtitle>\n                    <h2>This section is under construction. We appreciate your patience</h2>\n                </Card.Body>\n            </Card>\n            )\n    }\n\n    // -----------------------------------------------------------------------------------------------//\n    // Below here is the code for generating the donor's dashboard //\n    // -----------------------------------------------------------------------------------------------//\n\n    getDonorDash() {\n        return (\n        <Container style={{margin: \"0px\", maxWidth:\"4000px\"}}>\n            {/* <text>This is a recipient dashboard</text> */}\n            <Row >\n\n                <Col style={{padding: \"0px\"}}>\n                    {this.getDonorActionCard({})}\n                </Col>\n\n    {/*            <Col style={{padding: \"0px\"}}>\n                    {this.getDonationsCard()}\n                    {this.getMyGrantsCard()}\n                </Col>\n    */}\n            </Row>\n\n        </Container>\n        )\n    }\n\n\n    getDonorActionCard() {\n        return (\n        <Card style={{margin: \"2px\", marginBottom: \"4px\"}}>\n            <Card.Body>\n                <h3>{this.getGreeting()}</h3>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                    You can find important information here at a glance\n                </Card.Subtitle>\n\n                <Card.Text/>\n\n                {/* This Section generates the Acount Balance Box */}\n    {/*            <Row style={{width: \"100%\", margin: \"0px\"}}>\n                    <Col style={{padding: \"5px\"}}>\n                    <h4>My Account</h4>\n                    <ListGroup horizontal width=\"100%\">\n                        <ListGroup.Item style={{width: \"50%\"}}>\n                            <text>Your account balance:</text>\n                            <h1>{\n                                this.state.availableBalance === undefined?\n                                \"$__.__\"\n                                :\n                                \"$\" + this.state.availableBalance\n                            }</h1>\n                        </ListGroup.Item>\n                        <ListGroup.Item style={{width: \"50%\"}}>\n                            {/* <Button size=\"lg\" block style={{height: \"100%\"}}>Donate Now</Button> }\n                            <DepositButton buttonText=\"Deposit Now\" buttonStyle={{width: \"100%\", height: \"100%\", margin: \"0px\",\n                            size: \"lg\"}}/>\n                        </ListGroup.Item>\n                    </ListGroup>\n                    </Col>\n                </Row>\n                <Row style={{width: \"100%\", margin: \"0px\"}}>\n                    <Col style={{padding: \"5px\"}}>\n                        <Button block size=\"lg\" href=\"/hugbrowser\">Donate To Grants</Button>\n                    </Col>\n                </Row>\n    */}\n                {/* Show a helpfull message based on the user's account balance */}\n    {/*            <Row>\n                    <Col>\n                        {\n                            this.state.availableBalance === undefined ?\n                                <text style={{color: \"red\"}}>Sorry, we had trouble retrieving your information</text>\n                            :\n                            (this.state.availableBalance == 0 ?\n                                <text style={{color: \"red\"}}>You must deposit to your balance before donating to grants</text>\n                            :\n                                <text></text>\n                            )\n                        }\n\n                    </Col>\n                </Row>\n    */}\n                <Card.Text/>\n\n                <Row style={{width: \"100%\", margin: \"0px\"}}>\n                    <Col style={{padding: \"5px\"}}>\n                    <h4>Request Application</h4>\n\n                    {/* Donor's table of owned HUGs and their applicants\n                    (probably in a list pop-up accessed with a button in the applicants\n                    column) */}\n                    <ReactTable\n                        data={this.state.requests}\n                        columns={[\n                            {\n                                headerClassName: \"apply-table-thead\",\n                                Header: \"Name\",\n                                accessor: \"fullName\",\n                                style: { whiteSpace: \"unset\" }\n                            },\n                            {\n                                headerClassName: \"apply-table-thead\",\n                                Header: \"Request Amount\",\n                                accessor: \"desiredAmount\",\n                                style: { whiteSpace: \"unset\" },\n                            },\n                            {\n                                headerClassName: \"apply-table-thead\",\n                                Header: \"COVID-19 Status\",\n                                accessor: \"covid\",\n                                style: { whiteSpace: \"unset\" },\n                            },\n                            {\n                                headerClassName: \"apply-table-thead\",\n                                Header: \"Reason\",\n                                accessor: \"story\",\n                                style: { whiteSpace: \"unset\" },\n                                show: false\n                            },\n                            {\n                                headerClassName: \"apply-table-thead\",\n                                Header: \"Monthly Income\",\n                                accessor: \"monthly_income\",\n                                style: { whiteSpace: \"unset\" }\n                            },\n                            {\n                                headerClassName: \"apply-table-thead\",\n                                Header: \"Download1\",\n                                accessor: \"file1\",\n                                style: { whiteSpace: \"unset\" },\n                                show: false\n                            },\n                            {\n                                headerClassName: \"apply-table-thead\",\n                                Header: \"Download2\",\n                                accessor: \"file2\",\n                                style: { whiteSpace: \"unset\" },\n                                show: false\n                            },\n                            {\n                                headerClassName: \"apply-table-thead\",\n                                Header: \"Download3\",\n                                accessor: \"file3\",\n                                style: { whiteSpace: \"unset\" },\n                                show: false\n                            },\n                            {\n                                headerClassName: \"apply-table-thead\",\n                                Header: \"HUGID\",\n                                accessor: \"HUGID\",\n                                style: { whiteSpace: \"unset\" },\n                                show: false\n                            },\n                            {\n                                headerClassName: \"apply-table-thead\",\n                                Header: \"ID\",\n                                accessor: \"recipientID\",\n                                style: { whiteSpace: \"unset\" },\n                                show: false\n                            },\n                            {\n                                headerClassName: \"apply-table-thead\",\n                                Header: \"Share\",\n                                accessor: \"share\",\n                                style: { whiteSpace: \"unset\" },\n                                show: false\n                            }\n                        ]}\n                        getTrGroupProps={(state, rowInfo) => {\n                            if (rowInfo && rowInfo.row) {\n                              return {\n                                onClick: (e) => {\n                                  // Unselect\n                                  if(this.state.display_remove && rowInfo.index === this.state.index){\n                                    this.setState({\n                                      display_remove:false,\n                                      index:-1,\n                                      covid: \"\",\n                                      share:\"\",\n                                      selected_requestName:\"\",\n                                      requestAmount: 0,\n                                      monthlyIncome: \"\",\n                                      story: \"\",\n                                      downloadDoc1: \"\",\n                                      downloadDoc2: \"\",\n                                      downloadDoc3: \"\",\n                                      HUGID: -1,\n                                      recipientID: \"\"\n                                    });\n                                  } else if(this.state.display_remove && rowInfo.index !== this.state.index){\n                                      // Clicked on new row\n                                      this.setState({\n                                        index:rowInfo.index,\n                                        covid: rowInfo.row.covid,\n                                        share: rowInfo.row.share,\n                                        selected_requestName:rowInfo.row.fullName,\n                                        requestAmount: rowInfo.row.desiredAmount,\n                                        story: rowInfo.row.story,\n                                        monthlyIncome: rowInfo.row.monthly_income,\n                                        downloadDoc1:rowInfo.row.file1,\n                                        downloadDoc2:rowInfo.row.file2,\n                                        downloadDoc3:rowInfo.row.file3,\n                                        HUGID:rowInfo.row.HUGID,\n                                        recipientID: rowInfo.row.recipientID\n                                      });\n                                  } else {\n                                    this.setState({\n                                      // First time click\n                                      display_remove:true,\n                                      index:rowInfo.index,\n                                      covid: rowInfo.row.covid,\n                                      share: rowInfo.row.share,\n                                      selected_requestName:rowInfo.row.fullName,\n                                      requestAmount: rowInfo.row.desiredAmount,\n                                      story: rowInfo.row.story,\n                                      monthlyIncome: rowInfo.row.monthly_income,\n                                      downloadDoc1:rowInfo.row.file1,\n                                      downloadDoc2:rowInfo.row.file2,\n                                      downloadDoc3:rowInfo.row.file3,\n                                      HUGID:rowInfo.row.HUGID,\n                                      recipientID: rowInfo.row.recipientID\n\n                                    });\n                                  }\n                                  console.log(rowInfo.row.requestAmount);\n                                },\n                                style:{\n                                  background: rowInfo.index === this.state.index?\"#f0e3d2c\":'',\n                                  color:rowInfo.index === this.state.index?\"#3771ce\":'',\n                                  border: rowInfo.index === this.state.index? \"2px solid #3771ce\":'',\n                                }\n                              }\n                            }\n                          }\n                        }\n                        defaultPageSize={5}\n                        showPageSizeOptions={false}\n                    />\n                    </Col>\n                </Row>\n                <Row style={{width: \"100%\", margin: \"0px\"}}>\n                    <Col style={{padding: \"5px\"}}>\n                        <Button block size=\"lg\" onClick={this.openModal}>View Applicants</Button>\n                        <ViewApplicants\n                        open={this.state.open}\n                        covid={this.state.covid}\n                        share={this.state.share}\n                        selected_requestName={this.state.selected_requestName}\n                        requestAmount = {this.state.requestAmount}\n                        story = {this.state.story}\n                        monthlyIncome= {this.state.monthlyIncome}\n                        downloadDoc1={this.state.downloadDoc1}\n                        downloadDoc2={this.state.downloadDoc2}\n                        downloadDoc3={this.state.downloadDoc3}\n                        HUGID= {this.state.HUGID}\n                        recipientID={this.state.recipientID}\n                        closeModal={this.closeModal}\n                        removeApplicant={this.removeApplicant}\n                        rejectApplicant = {this.rejectApplicant}\n                        awardHUG = {this.awardHUG}\n\n\n                         />\n                    </Col>\n                </Row>\n{/*                <Row style={{width: \"100%\", margin: \"0px\"}}>\n                    <Col style={{padding: \"5px\"}}>\n                        <Button block size=\"lg\" href=\"/createhug\">Start Grant</Button>\n                    </Col>\n                </Row>\n*/}\n            </Card.Body>\n        </Card>\n        )\n    }\n\n    getDonationsCard(elements) {\n        return (\n            <Card style={{margin: \"2px\", marginBottom: \"4px\"}}>\n            <Card.Body>\n                <Card.Title>Recent Transactions</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                    View your most recent donations and withdrawls\n                </Card.Subtitle>\n\n                <Card.Text>Here is a short list of your most recent transactions</Card.Text>\n                <ReactTable\n                    data={[]}\n                    columns={[\n                        {\n                            headerClassName: \"apply-table-thead\",\n                            Header: \"Sample Column\",\n                            accessor: \"something\",\n                            style: { whiteSpace: \"unset\" }\n                        }\n                    ]}\n                    defaultPageSize={3}\n                    showPagination={false}\n                />\n                <Card.Text>\n                    Here is a button promting the user to go to the transactions page\n                    for more information\n                </Card.Text>\n\n            </Card.Body>\n        </Card>\n        )\n    }\n\n    getMyGrantsCard() {\n        return (\n            <Card style={{margin: \"2px\", marginBottom: \"4px\"}}>\n            <Card.Body>\n                <Card.Title>My Grants</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                    Here you can see a list of all your active grants\n                </Card.Subtitle>\n\n                <Card.Text>\n                    Clicking on a grant will take you to its page\n                </Card.Text>\n\n                <ReactTable\n                    data={[]}\n                    columns={[\n                        {\n                            headerClassName: \"apply-table-thead\",\n                            Header: \"Sample Column\",\n                            accessor: \"something\",\n                            style: { whiteSpace: \"unset\" }\n                        }\n                    ]}\n                    defaultPageSize={6}\n                    showPagination={false}\n                />\n\n            </Card.Body>\n        </Card>\n        )\n    }\n\n    // -----------------------------------------------------------------------------------------------//\n    // Below here is the code for universal utility functions //\n    // -----------------------------------------------------------------------------------------------//\n\n    notificationsCard() {\n        return (\n            <Card style={{width : '18rem'}}>\n                <Card.Body>\n                    <Card.Title>{this.getGreeting()}</Card.Title>\n                </Card.Body>\n            </Card>\n        )\n    }\n\n    getGreeting() {\n        return typeof this.state.firstName === 'undefined' ?\n                `Welcome ${this.state.userName}`\n            :\n                `Welcome ${this.state.firstName}`\n    }\n\n}\n\n\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}