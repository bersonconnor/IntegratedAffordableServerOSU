{"ast":null,"code":"import _regeneratorRuntime from \"/home/ubuntu/Connor/WorkOSU/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ubuntu/Connor/WorkOSU/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/ubuntu/Connor/WorkOSU/app/src/pages/MainPages/Settings/BankingInfoTab.js\";\nimport React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport CollapseWithHeader from \"../../../components/CollapseWithHeader\";\nimport AddBankAccountButton from \"../../../components/Modal/AddBankAccountButton\";\nimport AddCreditDebitButton from \"../../../components/Modal/AddCreditDebitButton\";\nimport AddBankAccountTest from \"../../../components/Modal/AddBankAccountTest\";\nimport { UserType } from \"affordable-shared-models\";\nimport { AffordableClient } from \"affordable-client\";\nimport \"./scss/settings.scss\";\nimport \"./scss/bankingInfoTab.scss\";\nimport \"../../../styles/apply-table.css\";\nimport \"../../../styles/buttons.css\";\nimport \"../../../styles/collapse-with-header.css\";\nimport { AffordableAdminClient } from \"affordable-client\";\nvar path = (window.REACT_APP_AF_BACKEND_URL || process.env.REACT_APP_AF_BACKEND_URL) + \"/\";\n\nclass AdditionPaymentPannel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPopup: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebyside-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, this.props.usertype === UserType.DONOR ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebyside-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AddBankAccountButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AddCreditDebitButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AddBankAccountTest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    })));\n  }\n\n}\n\nclass BankingInfoTab extends Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    this.getCards = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var json, i, name, type;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.client.getPaymentMethod(_this.state.user, true, false);\n\n              case 2:\n                json = _context.sent;\n\n                if (json.success === \"Cards Found\") {\n                  for (i = 0; i < json.cardList.length; i++) {\n                    name = json.cardList[i].cardName;\n                    type = json.cardList[i].cardType;\n\n                    _this.addToTable(name, type);\n                  }\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.getBanks = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n        var json, i, name, type;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this.client.getPaymentMethod(_this.state.user, false, false);\n\n              case 2:\n                json = _context2.sent;\n\n                if (json.success === \"Bank Account Found\") {\n                  for (i = 0; i < json.bankList.length; i++) {\n                    name = json.bankList[i].bankName;\n                    type = json.bankList[i].bankType;\n\n                    _this.addToTable(name, type);\n                  }\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    this.getConnectedBanks = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n        var json, i, name, type;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _this.client.getPaymentMethod(_this.state.user, false, true);\n\n              case 2:\n                json = _context3.sent;\n\n                if (json.success === \"Bank Account Found\") {\n                  for (i = 0; i < json.bankList.length; i++) {\n                    name = json.bankList[i].bankName;\n                    type = json.bankList[i].bankType;\n\n                    _this.addToTable(name, type);\n                  }\n                }\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    this.removeCard = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(e) {\n        var type, name, json;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                type = _this.state.remove_payment.type;\n                name = _this.state.remove_payment.name;\n                _context4.next = 4;\n                return _this.client.removePaymentMethod(_this.state.user, type, name, _this.state.usertype);\n\n              case 4:\n                json = _context4.sent;\n                console.log(json);\n\n                _this.successfulDelete();\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    this.removeBank = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(e) {\n        var name, json;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                name = _this.state.remove_payment.name;\n                _context5.next = 3;\n                return _this.client.removePaymentMethod(_this.state.user, 'Bank', name, _this.state.usertype);\n\n              case 3:\n                json = _context5.sent;\n                console.log(json);\n\n                _this.successfulDelete();\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    this.client = new AffordableClient();\n    this.state = {\n      user: this.props.user,\n      usertype: this.props.usertype,\n      display_remove: false,\n      index: -1,\n      payments: [],\n      remove_payment: {}\n    };\n    this.addToTable = this.addToTable.bind(this);\n    this.deleteFromTable = this.deleteFromTable.bind(this);\n    this.getCards();\n    this.getBanks();\n    this.getConnectedBanks();\n  }\n\n  componentDidMount() {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var time;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              time = 5000; //update every 5 secs   \n\n              _this2.checkAll = setInterval(() => _this2.syncAll(), time);\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }))();\n  }\n\n  componentWillUnmount() {\n    //stop updating\n    clearInterval(this.checkAll);\n  }\n\n  syncAll() {\n    this.getCards();\n    this.getBanks();\n    this.getConnectedBanks();\n  }\n\n  checkDuplicates(cur, newer) {\n    var type = newer[0][\"type\"]; // Get all those with that type\n\n    var list = cur.filter((val, index) => {\n      return val[\"type\"] === type;\n    }); // Remove duplicates\n\n    var result = newer.filter(function (val) {\n      return list.every(function (obj) {\n        return obj[\"date\"] !== val[\"date\"];\n      });\n    });\n    return result;\n  } // Add items to table\n\n\n  addToTable(name, type) {\n    var updatedPayments = this.state.payments;\n    var obj = {\n      accountType: type,\n      accountName: name\n    };\n    var included = updatedPayments.some(function (val) {\n      return val[\"accountType\"] === obj[\"accountType\"] && val[\"accountName\"] === obj[\"accountName\"];\n    });\n\n    if (!included) {\n      updatedPayments.push(obj);\n    }\n\n    this.setState({\n      payments: updatedPayments\n    });\n  }\n\n  deleteFromTable() {\n    var type = this.state.remove_payment.type;\n    var name = this.state.remove_payment.name; // Remove from tables\n\n    if (type === 'Credit' || type === 'Debit') {\n      // Remove from cards\n      this.removeCard();\n    } else {\n      // Remove from bankAccount\n      this.removeBank();\n    }\n  }\n\n  successfulDelete() {\n    // Remove from payment state\n    var index = this.state.index;\n    var item = this.state.payments[index];\n    var updatedPayments = this.state.payments.filter(function (val, index) {\n      return item !== val;\n    });\n    this.setState({\n      payments: updatedPayments,\n      display_remove: false,\n      index: -1\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CollapseWithHeader, {\n      title: \"Banking\",\n      open: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ReactTable, {\n      data: this.state.payments,\n      columns: [{\n        headerClassName: \"apply-table-thead\",\n        Header: \"Account Type\",\n        accessor: \"accountType\",\n        style: {\n          whiteSpace: \"unset\"\n        }\n      }, {\n        headerClassName: \"apply-table-thead\",\n        Header: \"Account Name\",\n        accessor: \"accountName\",\n        style: {\n          whiteSpace: \"unset\"\n        }\n      }],\n      defaultPageSize: 10,\n      className: \"-striped -highlight\",\n      style: {\n        height: \"400px\"\n      },\n      getTrGroupProps: (state, rowInfo) => {\n        if (rowInfo && rowInfo.row) {\n          return {\n            onClick: e => {\n              // Unselect\n              if (this.state.display_remove && rowInfo.index === this.state.index) {\n                this.setState({\n                  display_remove: false,\n                  index: -1,\n                  remove_payment: {}\n                });\n              } else if (this.state.display_remove && rowInfo.index !== this.state.index) {\n                // Clicked on new row\n                this.setState({\n                  index: rowInfo.index,\n                  remove_payment: {\n                    name: rowInfo.row.accountName,\n                    type: rowInfo.row.accountType\n                  }\n                });\n              } else {\n                this.setState({\n                  // First time click\n                  display_remove: true,\n                  index: rowInfo.index,\n                  remove_payment: {\n                    name: rowInfo.row.accountName,\n                    type: rowInfo.row.accountType\n                  }\n                });\n              }\n            },\n            style: {\n              background: rowInfo.index === this.state.index ? \"#f0e3d2c\" : '',\n              color: rowInfo.index === this.state.index ? \"#3771ce\" : '',\n              border: rowInfo.index === this.state.index ? \"2px solid #3771ce\" : ''\n            }\n          };\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }\n    })), this.state.display_remove ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"submit-button\",\n      onClick: this.deleteFromTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 13\n      }\n    }, \"Remove\")) : /*#__PURE__*/React.createElement(AdditionPaymentPannel, {\n      usertype: this.state.usertype,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default BankingInfoTab;","map":{"version":3,"sources":["/home/ubuntu/Connor/WorkOSU/app/src/pages/MainPages/Settings/BankingInfoTab.js"],"names":["React","Component","ReactTable","CollapseWithHeader","AddBankAccountButton","AddCreditDebitButton","AddBankAccountTest","UserType","AffordableClient","AffordableAdminClient","path","window","REACT_APP_AF_BACKEND_URL","process","env","AdditionPaymentPannel","constructor","props","state","showPopup","render","usertype","DONOR","BankingInfoTab","getCards","e","client","getPaymentMethod","user","json","success","i","cardList","length","name","cardName","type","cardType","addToTable","getBanks","bankList","bankName","bankType","getConnectedBanks","removeCard","remove_payment","removePaymentMethod","console","log","successfulDelete","removeBank","display_remove","index","payments","bind","deleteFromTable","componentDidMount","time","checkAll","setInterval","syncAll","componentWillUnmount","clearInterval","checkDuplicates","cur","newer","list","filter","val","result","every","obj","updatedPayments","accountType","accountName","included","some","push","setState","item","headerClassName","Header","accessor","style","whiteSpace","height","rowInfo","row","onClick","background","color","border"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\n\nimport CollapseWithHeader from \"../../../components/CollapseWithHeader\";\nimport AddBankAccountButton from \"../../../components/Modal/AddBankAccountButton\";\nimport AddCreditDebitButton from \"../../../components/Modal/AddCreditDebitButton\";\nimport AddBankAccountTest from \"../../../components/Modal/AddBankAccountTest\";\n\nimport {UserType} from \"affordable-shared-models\";\nimport {AffordableClient} from \"affordable-client\";\n\nimport \"./scss/settings.scss\";\nimport \"./scss/bankingInfoTab.scss\";\nimport \"../../../styles/apply-table.css\";\nimport \"../../../styles/buttons.css\";\nimport \"../../../styles/collapse-with-header.css\";\nimport { AffordableAdminClient } from \"affordable-client\";\n\nconst path = (window.REACT_APP_AF_BACKEND_URL || process.env.REACT_APP_AF_BACKEND_URL) +\"/\";\n\n\nclass AdditionPaymentPannel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { showPopup: false };\n  }\n\n  render() {\n    return (\n      <div className=\"sidebyside-buttons\">\n        {/*Donor vs recipient buttons on bottom*/}\n        {\n          this.props.usertype === UserType.DONOR ?\n            <div className=\"sidebyside-buttons\">\n              <div className=\"float-right\">\n                <AddBankAccountButton  />\n              </div>\n              <div className=\"float-right\">\n                <AddCreditDebitButton />\n              </div>\n            </div>\n            :\n            <div className=\"float-right\">\n              {/* <AddBankAccountButton /> */}\n              <AddBankAccountTest/>\n            </div>\n        }\n      </div>\n    );\n  }\n}\n\nclass BankingInfoTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.client = new AffordableClient();\n    this.state = {\n      user: this.props.user,\n      usertype: this.props.usertype,\n      display_remove: false,\n      index: -1,\n      payments: [],\n      remove_payment:{}\n    }\n    this.addToTable = this.addToTable.bind(this);\n    this.deleteFromTable = this.deleteFromTable.bind(this);\n    \n    this.getCards();\n    this.getBanks();\n    this.getConnectedBanks();\n  }\n\n  async componentDidMount() {\n    var time = 5000;\n    //update every 5 secs   \n    this.checkAll = setInterval(() => this.syncAll(), time);\n\n  }\n\n  componentWillUnmount() {\n    //stop updating\n    clearInterval(this.checkAll);\n  }\n\n  syncAll(){\n    this.getCards();\n    this.getBanks();\n    this.getConnectedBanks();\n  }\n  \n  checkDuplicates (cur, newer){\n    var type = newer[0][\"type\"];\n    \n    // Get all those with that type\n    var list = cur.filter((val, index)=>{\n      return val[\"type\"] === type;\n    });\n\n    // Remove duplicates\n    var result = newer.filter(\n      function(val){\n        return list.every(\n          function(obj){\n            return obj[\"date\"] !== val[\"date\"] \n          }\n        )\n      }\n    );\n\n    return result;\n  }\n\n  // Add items to table\n  addToTable(name,type) {\n    var updatedPayments = this.state.payments;\n    \n    var obj = {\n      accountType: type,\n      accountName: name\n    };\n    \n    var included = updatedPayments.some(\n      function(val){\n        return val[\"accountType\"] === obj[\"accountType\"] && val[\"accountName\"] === obj[\"accountName\"]\n      }\n    );\n    if(!included){\n      updatedPayments.push(obj);\n    }\n    \n    this.setState({\n      payments: updatedPayments\n    });\n  }\n\n  deleteFromTable(){\n    var type = this.state.remove_payment.type;\n    var name = this.state.remove_payment.name;\n    \n    // Remove from tables\n    if(type === 'Credit' || type === 'Debit'){\n      // Remove from cards\n      this.removeCard();\n    } else {\n      // Remove from bankAccount\n      this.removeBank();\n    }\n  }\n\n  successfulDelete(){\n    // Remove from payment state\n    var index = this.state.index;\n    var item = this.state.payments[index];\n    var updatedPayments = this.state.payments.filter(\n      function(val, index){\n        return item !== val;\n      }\n    );\n\n    this.setState({\n      payments: updatedPayments,\n      display_remove: false,\n      index:-1\n    });\n  }\n\n  getCards = async (e) => {\n    var json = await this.client.getPaymentMethod(this.state.user, true, false);\n    if (json.success === \"Cards Found\") {\n      for(let i = 0; i < json.cardList.length; i++){\n        var name = json.cardList[i].cardName;\n        var type = json.cardList[i].cardType;\n        this.addToTable(name,type);\n      }  \n    }\n  }\n\n  getBanks = async (e) => {\n    var json = await this.client.getPaymentMethod(this.state.user, false, false);\n    if (json.success === \"Bank Account Found\") {\n      for(let i = 0; i < json.bankList.length; i++){\n        var name = json.bankList[i].bankName;\n        var type = json.bankList[i].bankType;\n        this.addToTable(name,type);\n      } \n    }\n  }\n\n  getConnectedBanks = async (e) => {\n    var json = await this.client.getPaymentMethod(this.state.user, false, true);\n    if (json.success === \"Bank Account Found\") {\n      for(let i = 0; i < json.bankList.length; i++){\n        var name = json.bankList[i].bankName;\n        var type = json.bankList[i].bankType;\n        this.addToTable(name,type);\n      } \n    }\n  }\n\n  removeCard = async (e) => {\n    var type = this.state.remove_payment.type;\n    var name = this.state.remove_payment.name;\n\n    var json = await this.client.removePaymentMethod(this.state.user, type, name,this.state.usertype);\n    console.log(json);\n    this.successfulDelete();\n  }\n\n  removeBank = async (e) => {\n    var name = this.state.remove_payment.name;\n\n    var json = await this.client.removePaymentMethod(this.state.user, 'Bank', name, this.state.usertype);\n    console.log(json);\n    this.successfulDelete();\n  }\n\n  render() {\n    return (\n      <div>\n        <CollapseWithHeader title=\"Banking\" open={true}>\n          <ReactTable\n            data={this.state.payments}\n            columns={[\n              {\n                headerClassName: \"apply-table-thead\",\n                Header: \"Account Type\",\n                accessor: \"accountType\",\n                style: { whiteSpace: \"unset\" }\n              },\n              {\n                headerClassName: \"apply-table-thead\",\n                Header: \"Account Name\",\n                accessor: \"accountName\",\n                style: { whiteSpace: \"unset\" }\n              }\n            ]}\n            defaultPageSize={10}\n            className=\"-striped -highlight\"\n            style={{\n              height: \"400px\"\n            }}\n            getTrGroupProps={(state, rowInfo) => {\n              if (rowInfo && rowInfo.row) {\n                return {\n                  onClick: (e) => {\n                    // Unselect\n                    if(this.state.display_remove && rowInfo.index === this.state.index){\n                      this.setState({\n                        display_remove:false,\n                        index:-1,\n                        remove_payment:{}\n                      })\n                    } else if(this.state.display_remove && rowInfo.index !== this.state.index){\n                        // Clicked on new row\n                        this.setState({\n                          index:rowInfo.index,\n                          remove_payment:{name:rowInfo.row.accountName, type:rowInfo.row.accountType}\n                        })\n                    } else {\n                      this.setState({\n                        // First time click\n                        display_remove:true,\n                        index:rowInfo.index,\n                        remove_payment:{name:rowInfo.row.accountName, type:rowInfo.row.accountType}\n                      })\n                    }\n                  }, style:{\n                    background: rowInfo.index === this.state.index?\"#f0e3d2c\":'',\n                    color:rowInfo.index === this.state.index?\"#3771ce\":'',\n                    border: rowInfo.index === this.state.index? \"2px solid #3771ce\":'',\n                  }\n                }\n              }\n            }\n          }\n          /> \n        </CollapseWithHeader>\n        {\n          this.state.display_remove ?\n          <div className=\"float-right\">\n            <button className=\"submit-button\" onClick={this.deleteFromTable}>\n              Remove\n            </button>\n          </div>\n          :\n          <AdditionPaymentPannel usertype={this.state.usertype} />\n        }\n      </div>\n    );\n  }\n}\n\nexport default BankingInfoTab;"]},"metadata":{},"sourceType":"module"}