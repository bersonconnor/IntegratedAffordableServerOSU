{"ast":null,"code":"import _regeneratorRuntime from \"/home/ubuntu/Connor/SandBoxOSU/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ubuntu/Connor/SandBoxOSU/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/ubuntu/Connor/SandBoxOSU/app/src/components/Modal/CheckoutForm.js\";\n\nimport React, { Component } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { NavLink } from \"react-router-dom\";\nimport { CardElement, Elements, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { Fade } from 'react-bootstrap';\nimport { config } from \"dotenv\";\nconfig();\n\nvar CheckoutForm = props => {\n  var stripe = useStripe();\n  var elements = useElements();\n  var cardType = props.cardType;\n  var name;\n  var cardName = props.cardName;\n  var nameError = false;\n\n  var handleChangeCardType = e => {\n    props.handleChangeCardType(e.target.value);\n  };\n\n  var handleChangeCardName = e => {\n    props.handleChangeCardName(e.target.value);\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var data, json, method, i, name, _yield$stripe$createT, error, token;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              data = new FormData();\n              data.append(\"username\", JSON.parse(sessionStorage.getItem('userInfo')).username);\n              _context.next = 5;\n              return _this.client.getPaymentMethod(JSON.parse(sessionStorage.getItem('userInfo')).username, true, false);\n\n            case 5:\n              json = _context.sent;\n              method = [];\n\n              for (i = 0; i < json.cardList.length; i++) {\n                name = json.cardList[i].cardName;\n                method.push(name);\n              }\n\n              if (!(json.cardList.length != 0 && method.indexOf(cardName) >= 0 || cardName == \"\" || cardType == \"--\")) {\n                _context.next = 16;\n                break;\n              }\n\n              console.log(\"don't add card\");\n              props.handleNameError(true);\n\n              if (method.indexOf(cardName) >= 0 || cardName == \"\") {\n                props.handleNameError(true);\n              } else {\n                props.handleNameError(false);\n              }\n\n              if (cardType == \"--\") {\n                props.handleCardTypeError(true);\n              } else {\n                props.handleCardTypeError(false);\n              }\n\n              console.log(cardType);\n              _context.next = 27;\n              break;\n\n            case 16:\n              props.handleNameError(false);\n              console.log(cardType);\n              _context.next = 20;\n              return stripe.createToken(elements.getElement(CardElement));\n\n            case 20:\n              _yield$stripe$createT = _context.sent;\n              error = _yield$stripe$createT.error;\n              token = _yield$stripe$createT.token;\n              _context.next = 25;\n              return _this.client.stripeSaveCard(JSON.parse(sessionStorage.getItem('userInfo')).username, token.id, cardType, cardName);\n\n            case 25:\n              json = _context.sent;\n              props.handlehadSubmitted(true); // await fetch(process.env.REACT_APP_AF_BACKEND_URL +'/stripe/saveCard',{\n              //   method: \"POST\",\n              //   headers: {\n              //     'Accept': 'application/json',\n              //     'Content-Type': 'application/json'\n              //   },\n              //   body: JSON.stringify({username: JSON.parse(sessionStorage.getItem('userInfo')).username,\n              //   \"tokenId\":token.id,\"cardType\":cardType,\"cardName\":cardName})\n              // }).then(response => {\n              //   if (response.ok) {\n              //     props.handlehadSubmitted(true);\n              //     return response.json();\n              //   }\n              // })\n              // .then(() => { });\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 24\n    }\n  }, \"Card Type:\", /*#__PURE__*/React.createElement(\"select\", {\n    className: \"cardType\",\n    onChange: handleChangeCardType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"--\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 33\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"credit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 33\n    }\n  }, \"Credit Card\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"debit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 33\n    }\n  }, \"Debit Card\")), props.cardTypeError ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 53\n    }\n  }, \"Please select a card type.\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 89\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 39\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }, \"Nickname for the card:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"nameField\",\n    onChange: handleChangeCardName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 29\n    }\n  }), props.nameError ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 53\n    }\n  }, \"Please enter a unique nickname for the card\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 106\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 39\n    }\n  }), /*#__PURE__*/React.createElement(CardElement, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit-button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n};\n\nexport default CheckoutForm;","map":{"version":3,"sources":["/home/ubuntu/Connor/SandBoxOSU/app/src/components/Modal/CheckoutForm.js"],"names":["React","Component","loadStripe","NavLink","CardElement","Elements","useStripe","useElements","Fade","config","CheckoutForm","props","stripe","elements","cardType","name","cardName","nameError","handleChangeCardType","e","target","value","handleChangeCardName","handleSubmit","preventDefault","data","FormData","append","JSON","parse","sessionStorage","getItem","username","client","getPaymentMethod","json","method","i","cardList","length","push","indexOf","console","log","handleNameError","handleCardTypeError","createToken","getElement","error","token","stripeSaveCard","id","handlehadSubmitted","cardTypeError"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,SACEC,WADF,EAEEC,QAFF,EAGEC,SAHF,EAIEC,WAJF,QAKO,yBALP;AAMA,SAASC,IAAT,QAAqB,iBAArB;AAEA,SAASC,MAAT,QAAuB,QAAvB;AACAA,MAAM;;AAGN,IAAMC,YAAY,GAAIC,KAAD,IAAW;AAE9B,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,MAAMO,QAAQ,GAAGN,WAAW,EAA5B;AACA,MAAIO,QAAQ,GAAGH,KAAK,CAACG,QAArB;AACA,MAAIC,IAAJ;AACA,MAAIC,QAAQ,GAAGL,KAAK,CAACK,QAArB;AACA,MAAIC,SAAS,GAAE,KAAf;;AAGA,MAAMC,oBAAoB,GAAEC,CAAD,IAAM;AAC3BR,IAAAA,KAAK,CAACO,oBAAN,CAA2BC,CAAC,CAACC,MAAF,CAASC,KAApC;AACL,GAFD;;AAIA,MAAMC,oBAAoB,GAAEH,CAAD,IAAM;AAC7BR,IAAAA,KAAK,CAACW,oBAAN,CAA2BH,CAAC,CAACC,MAAF,CAASC,KAApC;AACH,GAFD;;AAMA,MAAME,YAAY;AAAA,wEAAG,iBAAOJ,CAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,CAAC,CAACK,cAAF;AAEMC,cAAAA,IAHa,GAGN,IAAIC,QAAJ,EAHM;AAInBD,cAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAX,EAA+CC,QAAvE;AAJmB;AAAA,qBAMF,KAAI,CAACC,MAAL,CAAYC,gBAAZ,CAA6BN,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAX,EAA+CC,QAA5E,EAAsF,IAAtF,EAA4F,KAA5F,CANE;;AAAA;AAMfG,cAAAA,IANe;AAOfC,cAAAA,MAPe,GAOR,EAPQ;;AAQjB,mBAAQC,CAAR,GAAY,CAAZ,EAAeA,CAAC,GAAGF,IAAI,CAACG,QAAL,CAAcC,MAAjC,EAAyCF,CAAC,EAA1C,EAA6C;AACvCtB,gBAAAA,IADuC,GAChCoB,IAAI,CAACG,QAAL,CAAcD,CAAd,EAAiBrB,QADe;AAE3CoB,gBAAAA,MAAM,CAACI,IAAP,CAAYzB,IAAZ;AACD;;AAXgB,oBAcboB,IAAI,CAACG,QAAL,CAAcC,MAAd,IAAwB,CAAxB,IAA6BH,MAAM,CAACK,OAAP,CAAezB,QAAf,KAA4B,CAA1D,IAAgEA,QAAQ,IAAI,EAA5E,IAAkFF,QAAQ,IAAI,IAdhF;AAAA;AAAA;AAAA;;AAef4B,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAhC,cAAAA,KAAK,CAACiC,eAAN,CAAsB,IAAtB;;AAEA,kBAAGR,MAAM,CAACK,OAAP,CAAezB,QAAf,KAA4B,CAA5B,IAAiCA,QAAQ,IAAI,EAAhD,EAAmD;AACjDL,gBAAAA,KAAK,CAACiC,eAAN,CAAsB,IAAtB;AACD,eAFD,MAGI;AACFjC,gBAAAA,KAAK,CAACiC,eAAN,CAAsB,KAAtB;AACD;;AAED,kBAAG9B,QAAQ,IAAI,IAAf,EAAoB;AAClBH,gBAAAA,KAAK,CAACkC,mBAAN,CAA0B,IAA1B;AACD,eAFD,MAGI;AACFlC,gBAAAA,KAAK,CAACkC,mBAAN,CAA0B,KAA1B;AACD;;AACDH,cAAAA,OAAO,CAACC,GAAR,CAAY7B,QAAZ;AA/Be;AAAA;;AAAA;AAmCfH,cAAAA,KAAK,CAACiC,eAAN,CAAsB,KAAtB;AAEAF,cAAAA,OAAO,CAACC,GAAR,CAAY7B,QAAZ;AArCe;AAAA,qBAuCcF,MAAM,CAACkC,WAAP,CAAmBjC,QAAQ,CAACkC,UAAT,CAAoB3C,WAApB,CAAnB,CAvCd;;AAAA;AAAA;AAuCR4C,cAAAA,KAvCQ,yBAuCRA,KAvCQ;AAuCDC,cAAAA,KAvCC,yBAuCDA,KAvCC;AAAA;AAAA,qBAyCE,KAAI,CAAChB,MAAL,CAAYiB,cAAZ,CAA2BtB,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAX,EAA+CC,QAA1E,EACjBiB,KAAK,CAACE,EADW,EACRrC,QADQ,EACCE,QADD,CAzCF;;AAAA;AAyCXmB,cAAAA,IAzCW;AA2CfxB,cAAAA,KAAK,CAACyC,kBAAN,CAAyB,IAAzB,EA3Ce,CA6Cf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA3De;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZ7B,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAqIA,sBACE;AAAM,IAAA,QAAQ,EAAEA,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEmB;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACK;AACI,IAAA,SAAS,EAAC,UADd;AAEI,IAAA,QAAQ,EAAEL,oBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,eAKI;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,CADL,EAQOP,KAAK,CAAC0C,aAAN,gBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAtB,gBAA0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARjE,CAFnB,eAW4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAX5B,eAWkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXlC,eAcoB;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,EAAE,EAAC,WAFP;AAGI,IAAA,QAAQ,EAAE/B,oBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKUX,KAAK,CAACM,SAAN,gBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAAlB,gBAAuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALjF,CAdpB,eAoB4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApB5B,eAoBkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBlC,eAqBoB,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBpB,eAuBE;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF,CADF;AA6BD,CAtLD;;AA2LA,eAAeP,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport {loadStripe} from '@stripe/stripe-js';\nimport { NavLink } from \"react-router-dom\";\n\nimport {\n  CardElement,\n  Elements,\n  useStripe,\n  useElements,\n} from '@stripe/react-stripe-js';\nimport { Fade } from 'react-bootstrap';\n\nimport { config } from \"dotenv\";\nconfig();\n\n\nconst CheckoutForm = (props) => {\n\n  const stripe = useStripe();\n  const elements = useElements();\n  var cardType = props.cardType;\n  var name;\n  var cardName = props.cardName;\n  var nameError= false;\n\n\n  const handleChangeCardType=(e) =>{\n        props.handleChangeCardType(e.target.value);\n  }\n\n  const handleChangeCardName=(e) =>{\n      props.handleChangeCardName(e.target.value);\n  }\n\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const data = new FormData();\n    data.append(\"username\", JSON.parse(sessionStorage.getItem('userInfo')).username);\n\n    var json = await this.client.getPaymentMethod(JSON.parse(sessionStorage.getItem('userInfo')).username, true, false);\n    var method=[];\n      for(let i = 0; i < json.cardList.length; i++){\n        var name = json.cardList[i].cardName;\n        method.push(name);\n      }\n\n\n      if((json.cardList.length != 0 && method.indexOf(cardName) >= 0) || cardName == \"\" || cardType == \"--\"){\n        console.log(\"don't add card\");\n        props.handleNameError(true);\n\n        if(method.indexOf(cardName) >= 0 || cardName == \"\"){\n          props.handleNameError(true);\n        }\n        else{\n          props.handleNameError(false);\n        }\n\n        if(cardType == \"--\"){\n          props.handleCardTypeError(true);\n        }\n        else{\n          props.handleCardTypeError(false);\n        }\n        console.log(cardType);\n\n\n      }else{\n        props.handleNameError(false);\n\n        console.log(cardType);\n\n        const {error, token} = await stripe.createToken(elements.getElement(CardElement));\n        \n        var json = await this.client.stripeSaveCard(JSON.parse(sessionStorage.getItem('userInfo')).username,\n        token.id,cardType,cardName);\n        props.handlehadSubmitted(true);\n\n        // await fetch(process.env.REACT_APP_AF_BACKEND_URL +'/stripe/saveCard',{\n        //   method: \"POST\",\n        //   headers: {\n        //     'Accept': 'application/json',\n        //     'Content-Type': 'application/json'\n        //   },\n        //   body: JSON.stringify({username: JSON.parse(sessionStorage.getItem('userInfo')).username,\n        //   \"tokenId\":token.id,\"cardType\":cardType,\"cardName\":cardName})\n        // }).then(response => {\n        //   if (response.ok) {\n        //     props.handlehadSubmitted(true);\n        //     return response.json();\n        //   }\n        // })\n        // .then(() => { });\n\n      }\n\n\n    // try {\n    //   const response = await fetch(process.env.REACT_APP_AF_BACKEND_URL +\"/transaction/cards\", {\n    //     method: \"POST\",\n    //     body: data\n    //   });\n    //   if (!response.ok) {\n    //     throw Error(response.statusText);\n    //   }\n    //   const json = await response.json();\n\n    //   var method=[];\n    //   for(let i = 0; i < json.cardList.length; i++){\n    //     var name = json.cardList[i].cardName;\n    //     method.push(name);\n    //   }\n\n\n    //   if((json.cardList.length != 0 && method.indexOf(cardName) >= 0) || cardName == \"\" || cardType == \"--\"){\n    //     console.log(\"don't add card\");\n    //     props.handleNameError(true);\n\n    //     if(method.indexOf(cardName) >= 0 || cardName == \"\"){\n    //       props.handleNameError(true);\n    //     }\n    //     else{\n    //       props.handleNameError(false);\n    //     }\n\n    //     if(cardType == \"--\"){\n    //       props.handleCardTypeError(true);\n    //     }\n    //     else{\n    //       props.handleCardTypeError(false);\n    //     }\n    //     console.log(cardType);\n\n\n    //   }else{\n    //     props.handleNameError(false);\n\n    //     console.log(cardType);\n\n    //     const {error, token} = await stripe.createToken(elements.getElement(CardElement));\n\n    //     await fetch(process.env.REACT_APP_AF_BACKEND_URL +'/stripe/saveCard',{\n    //       method: \"POST\",\n    //       headers: {\n    //         'Accept': 'application/json',\n    //         'Content-Type': 'application/json'\n    //       },\n    //       body: JSON.stringify({username: JSON.parse(sessionStorage.getItem('userInfo')).username,\n    //       \"tokenId\":token.id,\"cardType\":cardType,\"cardName\":cardName})\n    //     }).then(response => {\n    //       if (response.ok) {\n    //         props.handlehadSubmitted(true);\n    //         return response.json();\n    //       }\n    //     })\n    //     .then(() => { });\n\n    //   }\n\n    // } catch (error) {\n    //   console.error(error);\n    // }\n\n}\n\n\n  return (\n    <form onSubmit={handleSubmit}>\n\n                       <label className=\"label\">Card Type:\n                            <select\n                                className=\"cardType\"\n                                onChange={handleChangeCardType} >\n                                <option value=\"--\">Select</option>\n                                <option value=\"credit\">Credit Card</option>\n                                <option value=\"debit\">Debit Card</option>\n                            </select>\n                            { props.cardTypeError ? <p>Please select a card type.</p> : <div></div>}\n                        </label><br /><br />\n\n\n                        <label className=\"label\">Nickname for the card:\n                            <input\n                                type=\"text\"\n                                id=\"nameField\"\n                                onChange={handleChangeCardName} />\n                                { props.nameError ? <p>Please enter a unique nickname for the card</p> : <div></div>}\n                        </label><br /><br />\n                        <CardElement />\n\n      <button className=\"submit-button\" type=\"submit\">\n        Submit\n      </button>\n    </form>\n  );\n};\n\n\n\n\nexport default CheckoutForm;\n"]},"metadata":{},"sourceType":"module"}