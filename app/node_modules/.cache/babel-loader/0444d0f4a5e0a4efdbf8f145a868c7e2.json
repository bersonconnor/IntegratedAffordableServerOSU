{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Connor/SandBoxOSU/app/src/pages/MainPages/Filemanager/filemanager/src/Dropzone.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport DropzoneComponent from 'react-dropzone-component';\nimport ReactDOMServer from 'react-dom/server';\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.componentConfig = {\n      iconFiletypes: ['.jpg', '.png', '.gif'],\n      showFiletypeIcon: true,\n      postUrl: 'http://localhost:3020/files',\n      dropzoneSelector: '.manager'\n    }; // If you want to attach multiple callbacks, simply\n    // create an array filled with all your callbacks.\n\n    this.callbackArray = [() => console.log('Hi!'), () => console.log('Ho!')]; // Simple callbacks work too, of course\n\n    this.callback = () => console.log('Hello!');\n\n    this.success = file => console.log('uploaded', file);\n\n    this.removedfile = file => console.log('removing...', file);\n\n    this.dropzone = null;\n    console.log(\"DROPZONE CONSTRUCTED\");\n  } //dropUI() {\n  //document.getElementById(\"filemanager-1\").className = 'overlayUI';\n  //}\n\n\n  render() {\n    var config = this.componentConfig;\n    var djsConfig = this.djsConfig; // For a list of all possible events (there are many), see README.md!\n\n    var eventHandlers = {\n      init: dz => this.dropzone = dz,\n      drop: this.props.onDrop,\n      addedfile: this.callback,\n      success: this.success,\n      removedfile: this.removedfile,\n      dragenter: this.props.onDrag,\n      dragleave: this.props.onDragExit\n    };\n    console.log(\"DROPZONE RENDERED\");\n    return /*#__PURE__*/React.createElement(DropzoneComponent, {\n      config: config,\n      eventHandlers: eventHandlers,\n      djsConfig: this.props.djsConfig,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/ubuntu/Connor/SandBoxOSU/app/src/pages/MainPages/Filemanager/filemanager/src/Dropzone.js"],"names":["React","ReactDOM","DropzoneComponent","ReactDOMServer","Example","Component","constructor","props","componentConfig","iconFiletypes","showFiletypeIcon","postUrl","dropzoneSelector","callbackArray","console","log","callback","success","file","removedfile","dropzone","render","config","djsConfig","eventHandlers","init","dz","drop","onDrop","addedfile","dragenter","onDrag","dragleave","onDragExit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,iBAAP,MAA8B,0BAA9B;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,eAAe,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAsC;AAEjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,eAAL,GAAuB;AACnBC,MAAAA,aAAa,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CADI;AAEnBC,MAAAA,gBAAgB,EAAE,IAFC;AAGnBC,MAAAA,OAAO,EAAE,6BAHU;AAInBC,MAAAA,gBAAgB,EAAE;AAJC,KAAvB,CAHe,CAUf;AACA;;AACA,SAAKC,aAAL,GAAqB,CAAC,MAAMC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAP,EAA2B,MAAMD,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAjC,CAArB,CAZe,CAaf;;AACA,SAAKC,QAAL,GAAgB,MAAMF,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAtB;;AACA,SAAKE,OAAL,GAAeC,IAAI,IAAIJ,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBG,IAAxB,CAAvB;;AACA,SAAKC,WAAL,GAAmBD,IAAI,IAAIJ,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BG,IAA3B,CAA3B;;AACA,SAAKE,QAAL,GAAgB,IAAhB;AACPN,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACI,GArBgD,CAuBjD;AACE;AACF;;;AAEAM,EAAAA,MAAM,GAAG;AACL,QAAMC,MAAM,GAAG,KAAKd,eAApB;AACA,QAAMe,SAAS,GAAG,KAAKA,SAAvB,CAFK,CAGL;;AACA,QAAMC,aAAa,GAAG;AAClBC,MAAAA,IAAI,EAAEC,EAAE,IAAI,KAAKN,QAAL,GAAgBM,EADV;AAElBC,MAAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWqB,MAFC;AAGlBC,MAAAA,SAAS,EAAE,KAAKb,QAHE;AAIlBC,MAAAA,OAAO,EAAE,KAAKA,OAJI;AAKlBE,MAAAA,WAAW,EAAE,KAAKA,WALA;AAMlBW,MAAAA,SAAS,EAAE,KAAKvB,KAAL,CAAWwB,MANJ;AAOlBC,MAAAA,SAAS,EAAE,KAAKzB,KAAL,CAAW0B;AAPJ,KAAtB;AASPnB,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACO,wBAAO,oBAAC,iBAAD;AAAmB,MAAA,MAAM,EAAEO,MAA3B;AAAmC,MAAA,aAAa,EAAEE,aAAlD;AAAiE,MAAA,SAAS,EAAE,KAAKjB,KAAL,CAAWgB,SAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEH;;AA3CgD","sourcesContent":["import React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport DropzoneComponent from 'react-dropzone-component';\n\nimport ReactDOMServer from 'react-dom/server'\n\nexport default class Example extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.componentConfig = {\n            iconFiletypes: ['.jpg', '.png', '.gif'],\n            showFiletypeIcon: true,\n            postUrl: 'http://localhost:3020/files',\n            dropzoneSelector: '.manager',\n        };\n\n        // If you want to attach multiple callbacks, simply\n        // create an array filled with all your callbacks.\n        this.callbackArray = [() => console.log('Hi!'), () => console.log('Ho!')];\n        // Simple callbacks work too, of course\n        this.callback = () => console.log('Hello!');\n        this.success = file => console.log('uploaded', file);\n        this.removedfile = file => console.log('removing...', file);\n        this.dropzone = null;\n\tconsole.log(\"DROPZONE CONSTRUCTED\");\n    }\n\n    //dropUI() {\n      //document.getElementById(\"filemanager-1\").className = 'overlayUI';\n    //}\n\n    render() {\n        const config = this.componentConfig;\n        const djsConfig = this.djsConfig;\n        // For a list of all possible events (there are many), see README.md!\n        const eventHandlers = {\n            init: dz => this.dropzone = dz,\n            drop: this.props.onDrop,\n            addedfile: this.callback,\n            success: this.success,\n            removedfile: this.removedfile,\n            dragenter: this.props.onDrag,\n            dragleave: this.props.onDragExit\n        }\n\tconsole.log(\"DROPZONE RENDERED\");\n        return <DropzoneComponent config={config} eventHandlers={eventHandlers} djsConfig={this.props.djsConfig} />\n\t\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}