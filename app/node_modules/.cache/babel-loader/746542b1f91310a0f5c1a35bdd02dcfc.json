{"ast":null,"code":"/* eslint no-undef:\"off\"*/\n\"use strict\";\n/**\n * filesize\n *\n * @copyright 2017 Jason Mulligan <jason.mulligan@avoidwork.com>\n * @license BSD-3-Clause\n * @version 3.5.11\n */\n\n(function (global) {\n  var b = /^(b|B)$/,\n      symbol = {\n    iec: {\n      bits: [\"b\", \"Kib\", \"Mib\", \"Gib\", \"Tib\", \"Pib\", \"Eib\", \"Zib\", \"Yib\"],\n      bytes: [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"]\n    },\n    jedec: {\n      bits: [\"b\", \"Kb\", \"Mb\", \"Gb\", \"Tb\", \"Pb\", \"Eb\", \"Zb\", \"Yb\"],\n      bytes: [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n    }\n  },\n      fullform = {\n    iec: [\"\", \"kibi\", \"mebi\", \"gibi\", \"tebi\", \"pebi\", \"exbi\", \"zebi\", \"yobi\"],\n    jedec: [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\", \"exa\", \"zetta\", \"yotta\"]\n  };\n  /**\n   * filesize\n   *\n   * @method filesize\n   * @param  {Mixed}   arg        String, Int or Float to transform\n   * @param  {Object}  descriptor [Optional] Flags\n   * @return {String}             Readable file size String\n   */\n\n  function filesize(arg) {\n    var descriptor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var result = [],\n        val = 0,\n        e = void 0,\n        base = void 0,\n        bits = void 0,\n        ceil = void 0,\n        full = void 0,\n        fullforms = void 0,\n        neg = void 0,\n        num = void 0,\n        output = void 0,\n        round = void 0,\n        unix = void 0,\n        spacer = void 0,\n        standard = void 0,\n        symbols = void 0;\n\n    if (isNaN(arg)) {\n      throw new Error(\"Invalid arguments\");\n    }\n\n    bits = descriptor.bits === true;\n    unix = descriptor.unix === true;\n    base = descriptor.base || 2;\n    round = descriptor.round !== undefined ? descriptor.round : unix ? 1 : 2;\n    spacer = descriptor.spacer !== undefined ? descriptor.spacer : unix ? \"\" : \" \";\n    symbols = descriptor.symbols || descriptor.suffixes || {};\n    standard = base === 2 ? descriptor.standard || \"jedec\" : \"jedec\";\n    output = descriptor.output || \"string\";\n    full = descriptor.fullform === true;\n    fullforms = descriptor.fullforms instanceof Array ? descriptor.fullforms : [];\n    e = descriptor.exponent !== undefined ? descriptor.exponent : -1;\n    num = Number(arg);\n    neg = num < 0;\n    ceil = base > 2 ? 1000 : 1024; // Flipping a negative number to determine the size\n\n    if (neg) {\n      num = -num;\n    } // Determining the exponent\n\n\n    if (e === -1 || isNaN(e)) {\n      e = Math.floor(Math.log(num) / Math.log(ceil));\n\n      if (e < 0) {\n        e = 0;\n      }\n    } // Exceeding supported length, time to reduce & multiply\n\n\n    if (e > 8) {\n      e = 8;\n    } // Zero is now a special case because bytes divide by 1\n\n\n    if (num === 0) {\n      result[0] = 0;\n      result[1] = unix ? \"\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\n    } else {\n      val = num / (base === 2 ? Math.pow(2, e * 10) : Math.pow(1000, e));\n\n      if (bits) {\n        val = val * 8;\n\n        if (val >= ceil && e < 8) {\n          val = val / ceil;\n          e++;\n        }\n      }\n\n      result[0] = Number(val.toFixed(e > 0 ? round : 0));\n      result[1] = base === 10 && e === 1 ? bits ? \"kb\" : \"kB\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\n\n      if (unix) {\n        result[1] = standard === \"jedec\" ? result[1].charAt(0) : e > 0 ? result[1].replace(/B$/, \"\") : result[1];\n\n        if (b.test(result[1])) {\n          result[0] = Math.floor(result[0]);\n          result[1] = \"\";\n        }\n      }\n    } // Decorating a 'diff'\n\n\n    if (neg) {\n      result[0] = -result[0];\n    } // Applying custom symbol\n\n\n    result[1] = symbols[result[1]] || result[1]; // Returning Array, Object, or String (default)\n\n    if (output === \"array\") {\n      return result;\n    }\n\n    if (output === \"exponent\") {\n      return e;\n    }\n\n    if (output === \"object\") {\n      return {\n        value: result[0],\n        suffix: result[1],\n        symbol: result[1]\n      };\n    }\n\n    if (full) {\n      result[1] = fullforms[e] ? fullforms[e] : fullform[standard][e] + (bits ? \"bit\" : \"byte\") + (result[0] === 1 ? \"\" : \"s\");\n    }\n\n    return result.join(spacer);\n  } // Partial application for functional programming\n\n\n  filesize.partial = function (opt) {\n    return function (arg) {\n      return filesize(arg, opt);\n    };\n  }; // CommonJS, AMD, script tag\n\n\n  if (typeof exports !== \"undefined\") {\n    module.exports = filesize;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(function () {\n      return filesize;\n    });\n  } else {\n    global.filesize = filesize;\n  }\n})(typeof window !== \"undefined\" ? window : global);","map":{"version":3,"sources":["/home/ubuntu/Connor/WorkOSU/node_modules/@opuscapita/react-filemanager-connector-node-v1/node_modules/filesize/lib/filesize.js"],"names":["global","b","symbol","iec","bits","bytes","jedec","fullform","filesize","arg","descriptor","arguments","length","undefined","result","val","e","base","ceil","full","fullforms","neg","num","output","round","unix","spacer","standard","symbols","isNaN","Error","suffixes","Array","exponent","Number","Math","floor","log","pow","toFixed","charAt","replace","test","value","suffix","join","partial","opt","exports","module","define","amd","window"],"mappings":"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","sourcesContent":["/* eslint no-undef:\"off\"*/\n\"use strict\";\n\n/**\n * filesize\n *\n * @copyright 2017 Jason Mulligan <jason.mulligan@avoidwork.com>\n * @license BSD-3-Clause\n * @version 3.5.11\n */\n(function (global) {\n\tvar b = /^(b|B)$/,\n\t    symbol = {\n\t\tiec: {\n\t\t\tbits: [\"b\", \"Kib\", \"Mib\", \"Gib\", \"Tib\", \"Pib\", \"Eib\", \"Zib\", \"Yib\"],\n\t\t\tbytes: [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"]\n\t\t},\n\t\tjedec: {\n\t\t\tbits: [\"b\", \"Kb\", \"Mb\", \"Gb\", \"Tb\", \"Pb\", \"Eb\", \"Zb\", \"Yb\"],\n\t\t\tbytes: [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n\t\t}\n\t},\n\t    fullform = {\n\t\tiec: [\"\", \"kibi\", \"mebi\", \"gibi\", \"tebi\", \"pebi\", \"exbi\", \"zebi\", \"yobi\"],\n\t\tjedec: [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\", \"exa\", \"zetta\", \"yotta\"]\n\t};\n\n\t/**\n  * filesize\n  *\n  * @method filesize\n  * @param  {Mixed}   arg        String, Int or Float to transform\n  * @param  {Object}  descriptor [Optional] Flags\n  * @return {String}             Readable file size String\n  */\n\tfunction filesize(arg) {\n\t\tvar descriptor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tvar result = [],\n\t\t    val = 0,\n\t\t    e = void 0,\n\t\t    base = void 0,\n\t\t    bits = void 0,\n\t\t    ceil = void 0,\n\t\t    full = void 0,\n\t\t    fullforms = void 0,\n\t\t    neg = void 0,\n\t\t    num = void 0,\n\t\t    output = void 0,\n\t\t    round = void 0,\n\t\t    unix = void 0,\n\t\t    spacer = void 0,\n\t\t    standard = void 0,\n\t\t    symbols = void 0;\n\n\t\tif (isNaN(arg)) {\n\t\t\tthrow new Error(\"Invalid arguments\");\n\t\t}\n\n\t\tbits = descriptor.bits === true;\n\t\tunix = descriptor.unix === true;\n\t\tbase = descriptor.base || 2;\n\t\tround = descriptor.round !== undefined ? descriptor.round : unix ? 1 : 2;\n\t\tspacer = descriptor.spacer !== undefined ? descriptor.spacer : unix ? \"\" : \" \";\n\t\tsymbols = descriptor.symbols || descriptor.suffixes || {};\n\t\tstandard = base === 2 ? descriptor.standard || \"jedec\" : \"jedec\";\n\t\toutput = descriptor.output || \"string\";\n\t\tfull = descriptor.fullform === true;\n\t\tfullforms = descriptor.fullforms instanceof Array ? descriptor.fullforms : [];\n\t\te = descriptor.exponent !== undefined ? descriptor.exponent : -1;\n\t\tnum = Number(arg);\n\t\tneg = num < 0;\n\t\tceil = base > 2 ? 1000 : 1024;\n\n\t\t// Flipping a negative number to determine the size\n\t\tif (neg) {\n\t\t\tnum = -num;\n\t\t}\n\n\t\t// Determining the exponent\n\t\tif (e === -1 || isNaN(e)) {\n\t\t\te = Math.floor(Math.log(num) / Math.log(ceil));\n\n\t\t\tif (e < 0) {\n\t\t\t\te = 0;\n\t\t\t}\n\t\t}\n\n\t\t// Exceeding supported length, time to reduce & multiply\n\t\tif (e > 8) {\n\t\t\te = 8;\n\t\t}\n\n\t\t// Zero is now a special case because bytes divide by 1\n\t\tif (num === 0) {\n\t\t\tresult[0] = 0;\n\t\t\tresult[1] = unix ? \"\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\n\t\t} else {\n\t\t\tval = num / (base === 2 ? Math.pow(2, e * 10) : Math.pow(1000, e));\n\n\t\t\tif (bits) {\n\t\t\t\tval = val * 8;\n\n\t\t\t\tif (val >= ceil && e < 8) {\n\t\t\t\t\tval = val / ceil;\n\t\t\t\t\te++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult[0] = Number(val.toFixed(e > 0 ? round : 0));\n\t\t\tresult[1] = base === 10 && e === 1 ? bits ? \"kb\" : \"kB\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\n\n\t\t\tif (unix) {\n\t\t\t\tresult[1] = standard === \"jedec\" ? result[1].charAt(0) : e > 0 ? result[1].replace(/B$/, \"\") : result[1];\n\n\t\t\t\tif (b.test(result[1])) {\n\t\t\t\t\tresult[0] = Math.floor(result[0]);\n\t\t\t\t\tresult[1] = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Decorating a 'diff'\n\t\tif (neg) {\n\t\t\tresult[0] = -result[0];\n\t\t}\n\n\t\t// Applying custom symbol\n\t\tresult[1] = symbols[result[1]] || result[1];\n\n\t\t// Returning Array, Object, or String (default)\n\t\tif (output === \"array\") {\n\t\t\treturn result;\n\t\t}\n\n\t\tif (output === \"exponent\") {\n\t\t\treturn e;\n\t\t}\n\n\t\tif (output === \"object\") {\n\t\t\treturn { value: result[0], suffix: result[1], symbol: result[1] };\n\t\t}\n\n\t\tif (full) {\n\t\t\tresult[1] = fullforms[e] ? fullforms[e] : fullform[standard][e] + (bits ? \"bit\" : \"byte\") + (result[0] === 1 ? \"\" : \"s\");\n\t\t}\n\n\t\treturn result.join(spacer);\n\t}\n\n\t// Partial application for functional programming\n\tfilesize.partial = function (opt) {\n\t\treturn function (arg) {\n\t\t\treturn filesize(arg, opt);\n\t\t};\n\t};\n\n\t// CommonJS, AMD, script tag\n\tif (typeof exports !== \"undefined\") {\n\t\tmodule.exports = filesize;\n\t} else if (typeof define === \"function\" && define.amd) {\n\t\tdefine(function () {\n\t\t\treturn filesize;\n\t\t});\n\t} else {\n\t\tglobal.filesize = filesize;\n\t}\n})(typeof window !== \"undefined\" ? window : global);\n"]},"metadata":{},"sourceType":"script"}