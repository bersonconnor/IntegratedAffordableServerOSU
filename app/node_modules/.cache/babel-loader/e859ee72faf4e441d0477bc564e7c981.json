{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Connor/Demo_OSU_Filemanager/app/src/pages/MainPages/MainPagesRoutingContainer/RepresentingOrganization.tsx\";\nimport React, { Component } from \"react\";\nimport \"./scss/sidebar.scss\";\nimport swal from \"sweetalert\";\n\n/**\n * This component provides a select box that shows all of the user's organizations. When the user\n * selects an organization, they will be \"representing\" or acting on behalf of that organization.\n */\nclass RepresentingOrganization extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      organizationOptions: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    // Get organizations for user.\n    if (this.props.userId != null) {\n      this.props.client.getOrganizationsForUser(this.props.userId).then(organizations => {\n        this.setState({\n          organizationOptions: organizations\n        });\n      });\n    }\n\n    if (!window.location.hash) {\n      // using reload() method to reload web page\n      window.location.assign(window.location + \"#loaded\");\n    }\n  }\n  /*Handle Event Functions*/\n\n\n  handleChange(event) {\n    if (event.target.value === \"unverified\" || event.target.value === \"\") {\n      swal(\"Once your organizations have been verified, you will be eligible to create a HUG\", \"\", \"warning\").then(function (isConfirm) {\n        if (isConfirm) {\n          window.location.replace(\"http://localhost:3000/organization\");\n        } else {//if no clicked => do something else\n        }\n      });\n    } else {\n      swal(\"You are representing\", event.target.value, \"success\").then(function (isConfirm) {\n        if (isConfirm) {\n          window.location.assign(window.location.toString());\n        } else {//if no clicked => do something else\n        }\n      });\n    }\n\n    console.log(this.state.organizationOptions);\n    var result = this.state.organizationOptions.filter(organizationMembership => {\n      return organizationMembership.organization.id === Number.parseInt(event.target.value);\n    })[0];\n    console.log(\"Representing:\");\n    console.log(result);\n    this.props.updateOrganizationFn(result);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  render() {\n    var _this$state$organizat;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"col\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"Representing\"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"representing\",\n      className: \"form-control\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, \"Select Organization...\"), (_this$state$organizat = this.state.organizationOptions) === null || _this$state$organizat === void 0 ? void 0 : _this$state$organizat.map(organization => {\n      var _organization$organiz, _organization$organiz2, _organization$organiz3, _organization$organiz4, _organization$organiz5;\n\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: \"RepresentingOrganizationOption-\" + ((_organization$organiz = organization.organization) === null || _organization$organiz === void 0 ? void 0 : _organization$organiz.id),\n        id: (_organization$organiz2 = organization.organization) === null || _organization$organiz2 === void 0 ? void 0 : (_organization$organiz3 = _organization$organiz2.id) === null || _organization$organiz3 === void 0 ? void 0 : _organization$organiz3.toString(),\n        value: (_organization$organiz4 = organization.organization) === null || _organization$organiz4 === void 0 ? void 0 : _organization$organiz4.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 19\n        }\n      }, (_organization$organiz5 = organization.organization) === null || _organization$organiz5 === void 0 ? void 0 : _organization$organiz5.name);\n    }), \" \", /*#__PURE__*/React.createElement(\"option\", {\n      value: \"unverified\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, \"No Verified Orgs\"))));\n  }\n\n}\n\nexport default RepresentingOrganization;","map":{"version":3,"sources":["/home/ubuntu/Connor/Demo_OSU_Filemanager/app/src/pages/MainPages/MainPagesRoutingContainer/RepresentingOrganization.tsx"],"names":["React","Component","swal","RepresentingOrganization","constructor","props","context","state","organizationOptions","handleChange","bind","componentDidMount","userId","client","getOrganizationsForUser","then","organizations","setState","window","location","hash","assign","event","target","value","isConfirm","replace","toString","console","log","result","filter","organizationMembership","organization","id","Number","parseInt","updateOrganizationFn","handleSubmit","e","preventDefault","render","map","name"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport \"./scss/sidebar.scss\";\nimport swal from \"sweetalert\";\nimport {OrganizationMembership} from \"affordable-shared-models\";\nimport {AffordableClient} from \"affordable-client\";\n\ninterface RepresentingOrganizationProps {\n  userId: number;\n  representedOrganization: OrganizationMembership;\n  updateOrganizationFn: (organization: OrganizationMembership) => void;\n  client: AffordableClient;\n}\n\ninterface RepresentingOrganizationState {\n  organizationOptions: Array<OrganizationMembership>;\n}\n\n/**\n * This component provides a select box that shows all of the user's organizations. When the user\n * selects an organization, they will be \"representing\" or acting on behalf of that organization.\n */\nclass RepresentingOrganization extends Component<\n  RepresentingOrganizationProps,\n  RepresentingOrganizationState\n> {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      organizationOptions: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount(): void {\n    // Get organizations for user.\n    if (this.props.userId != null) {\n      this.props.client.getOrganizationsForUser(this.props.userId).then(\n        (organizations: Array<OrganizationMembership>) => {\n          this.setState({ organizationOptions: organizations });\n        }\n      );\n    }\n\n    if (!window.location.hash) {\n      // using reload() method to reload web page\n      window.location.assign(window.location + \"#loaded\");\n    }\n  }\n\n  /*Handle Event Functions*/\n  handleChange(event): void {\n    if (event.target.value === \"unverified\" || event.target.value === \"\") {\n      swal(\n        \"Once your organizations have been verified, you will be eligible to create a HUG\",\n        \"\",\n        \"warning\"\n      ).then(function(isConfirm) {\n        if (isConfirm) {\n          window.location.replace(\"http://localhost:3000/organization\");\n        } else {\n          //if no clicked => do something else\n        }\n      });\n    } else {\n      swal(\"You are representing\", event.target.value, \"success\").then(function(\n        isConfirm\n      ) {\n        if (isConfirm) {\n          window.location.assign(window.location.toString());\n        } else {\n          //if no clicked => do something else\n        }\n      });\n    }\n    console.log(this.state.organizationOptions);\n    const result = this.state.organizationOptions.filter(\n      organizationMembership => {\n        return organizationMembership.organization.id === Number.parseInt(event.target.value);\n      }\n    )[0];\n    console.log(\"Representing:\")\n    console.log(result);\n    this.props.updateOrganizationFn(result);\n  }\n\n  handleSubmit(e): void {\n    e.preventDefault();\n  }\n\n  render(): React.ReactNode {\n    return (\n      <div>\n        <form className=\"col\" onSubmit={this.handleSubmit}>\n          <label>Representing</label>\n          <select\n            id=\"representing\"\n            className=\"form-control\"\n            onChange={this.handleChange}\n          >\n            <option value=\"\" disabled selected>\n              Select Organization...\n            </option>\n            {this.state.organizationOptions?.map(\n              (organization: OrganizationMembership) => {\n                return (\n                  <option\n                    key={\n                      \"RepresentingOrganizationOption-\" +\n                      organization.organization?.id\n                    }\n                    id={organization.organization?.id?.toString()}\n                    value={organization.organization?.id}\n                  >\n                    {organization.organization?.name}\n                  </option>\n                );\n              }\n            )}{\" \"}\n            <option value=\"unverified\">No Verified Orgs</option>\n          </select>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RepresentingOrganization;\n"]},"metadata":{},"sourceType":"module"}