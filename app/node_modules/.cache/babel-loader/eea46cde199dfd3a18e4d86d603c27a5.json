{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Connor/WorkOSU/app/src/pages/MainPages/HUGPages/HUGPagesRoutingContainer/purpose.js\";\nimport React, { Component, Fragment } from \"react\";\nimport DiagnosisAutosuggest from \"./DiagnosisAutosuggest\";\nimport PrescriptionAutosuggest from \"./PrescriptionAutosuggest\";\nimport \"../../../../styles/buttons.css\";\nimport \"./scss/purpose.scss\";\nimport \"react-table/react-table.css\";\n\nvar FormGroup = ({\n  labelName,\n  value,\n  handleChange\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: labelName.replace(/\\s+/g, \"-\"),\n    className: \"col-2 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, labelName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: labelName.replace(/\\s+/g, \"-\"),\n    value: value,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n};\n\nclass Purpose extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = key => {\n      return event => {\n        this.setState({\n          [key]: event.target.value\n        });\n      };\n    };\n\n    this.addDiagnosis = e => {\n      this.setState(prevState => ({\n        diagnosisNeeded: [...prevState.diagnosisNeeded, {\n          name: \"\"\n        }]\n      }));\n      console.log(\"after add diagnosis\", this.state.diagnosisNeeded);\n    };\n\n    this.deleteDiagnosis = e => {\n      this.setState({\n        diagnosisNeeded: []\n      });\n    };\n\n    this.deletePrescription = e => {\n      this.setState({\n        prescriptionNeeded: []\n      });\n    };\n\n    this.handleDiagnosisChange = index => key => {\n      var diagnosisNeeded = this.state.diagnosisNeeded;\n      console.log(this.state.diagnosisNeeded);\n      return event => {\n        diagnosisNeeded[index][key] = event.target.value;\n        this.setState({\n          diagnosisNeeded\n        });\n      };\n    };\n\n    this.addPrescription = e => {\n      this.setState(prevState => ({\n        prescriptionNeeded: [...prevState.prescriptionNeeded, {\n          name: \"\"\n        }]\n      }));\n      console.log(\"after add prescription\", this.state.prescriptionNeeded);\n    };\n\n    this.handlePrescriptionChange = index => key => {\n      var prescriptionNeeded = this.state.prescriptionNeeded;\n      console.log(this.state.prescriptionNeeded);\n      return event => {\n        prescriptionNeeded[index][key] = event.target.value;\n        this.setState({\n          prescriptionNeeded\n        });\n      };\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n    };\n\n    this.handleReturnInfo = () => {\n      return this.state;\n    };\n\n    this.state = {\n      diagnosisNeeded: [{\n        name: \"\"\n      }],\n      prescriptionNeeded: [{\n        name: \"\"\n      }],\n      hugName: \"\",\n      // name of the HUG\n      hugCat: \"\",\n      // HUG Category\n      medCat: \"\",\n      // medical category\n      specialtyCare: \"\",\n      //specialty care, only filled out if specialty care was selected for med cat\n      purpose: \"\",\n      // purpose of the HUG\n      hasPrescriptions: \"\",\n      // are the prescriptions associated with this hug\n      hasDiagnosis: \"\" // are there certain diagnosises associated with this hug\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDiagnosisChange = this.handleDiagnosisChange.bind(this);\n    this.handlePrescriptionChange = this.handlePrescriptionChange.bind(this);\n    this.saveDiagnosis = this.saveDiagnosis.bind(this);\n    this.savePrescription = this.savePrescription.bind(this);\n  }\n  /*Handle Event Functions*/\n\n\n  // call back function for the diagnosis autosuggest\n  saveDiagnosis(index, diagnosisName) {\n    var diagnosisNeeded = this.state.diagnosisNeeded;\n    console.log(\"in function\");\n    diagnosisNeeded[index][\"name\"] = diagnosisName;\n    this.setState({\n      diagnosisNeeded\n    });\n    console.log(\"after add diagnosis\", this.state.diagnosisNeeded);\n  } // callback function for the prescription autosuggest\n\n\n  savePrescription(index, prescriptionName) {\n    var prescriptionNeeded = this.state.prescriptionNeeded;\n    console.log(\"in function\");\n    prescriptionNeeded[index][\"name\"] = prescriptionName;\n    this.setState({\n      prescriptionNeeded\n    });\n    console.log(\"after add prescription\", this.state.prescriptionNeeded);\n  } // everytime add prescription is clicked, add a new map entry\n\n\n  componentDidMount() {\n    if (!window.location.hash) {\n      //setting window location\n      window.location.assign(window.location + \"#loaded\"); //using reload() method to reload web page\n      // window.location.reload();\n    }\n  }\n\n  render() {\n    var diagnosisNeeded = this.state.diagnosisNeeded;\n    var prescriptionNeeded = this.state.prescriptionNeeded;\n\n    if (this.props.currentStep !== 1) {\n      // Prop: The current step\n      return null;\n    }\n\n    var medicalCatNames = [\"Primary Care\", \"UrgentCare\", \"Geriatric/Nursing\", \"Mental/Psychiatric\", \"Dental Care\", \"Laboratory and Diagnostic Care\", \"Substance Abuse Rehabilitation\", \"Optometry\", \"Preventative Care\", \"Physical and Occupational Therapy\", \"Nutritionist\", \"Prenatal Care\", \"Specialty Care\"];\n    var medicalList = medicalCatNames.map(function (medName) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        id: medName,\n        value: medName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }\n      }, medName);\n    });\n    var specialtyNames = [\"Allergy & Asthma\", \"Anesthesiology\", \"Dermatology\", \"Endocrinology\", \"Gastroenterology\", \"General Surgery\", \"Hematology\", \"Immunology\", \"Infectious Disease\", \"Nephrology\", \"Neurology\", \"OB/GYN\", \"Oncology\", \"Ophthalmology\", \"Orthopedics\", \"Otorhinolaryngology\", \"Physical Therapy + Rehabilitiatice Medicine\", \"Psychiatry\", \"Pulmonary\", \"Radiology\", \"Rheumatology\", \"Urology\", \"Other\"];\n    var specialtyList = specialtyNames.map(function (specName) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: specName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 14\n        }\n      }, specName);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      labelName: \"Name\",\n      value: this.state.hugName,\n      handleChange: this.handleChange(\"hugName\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"HUG Category\",\n      className: \"col-2 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }, \"Hug Category\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"hugCat\",\n      value: this.state.hugCat,\n      className: \"form-control\",\n      onChange: this.handleChange(\"hugCat\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 19\n      }\n    }, \"Select category...\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Medical Care\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 19\n      }\n    }, \"Medical Care\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Prescriptions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 19\n      }\n    }, \"Prescriptions\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Lifestyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 19\n      }\n    }, \"Lifestyle\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Transportation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 19\n      }\n    }, \"Transportation\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Medical Category\",\n      className: \"col-2 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 15\n      }\n    }, \"Medical Category\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"medCat\",\n      value: this.state.medCat,\n      className: \"form-control\",\n      onChange: this.handleChange(\"medCat\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 19\n      }\n    }, \"Select category...\"), medicalList)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Specialty Care\",\n      className: \"col-2 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }\n    }, \"Specialty Care\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"specialtyCare\",\n      value: this.state.specialtyVare,\n      className: \"form-control\",\n      onChange: this.handleChange(\"specialtyCare\"),\n      disabled: this.state.medCat != \"Specialty Care\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 19\n      }\n    }, \"Select category...\"), specialtyList)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      labelName: \"Purpose\",\n      value: this.state.purpose,\n      handleChange: this.handleChange(\"purpose\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Services\",\n      className: \"col-2 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 15\n      }\n    }, \"Is HUG for a specific illness?\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"yesDiagnosis\",\n      value: \"1\",\n      checked: this.state.hasDiagnosis === \"1\",\n      onChange: this.handleChange(\"hasDiagnosis\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 23\n      }\n    }), \"Yes\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"noDiagnosis\",\n      value: \"0\",\n      checked: this.state.hasDiagnosis === \"0\",\n      onChange: this.handleChange(\"hasDiagnosis\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 23\n      }\n    }), \"No\"))))), this.state.hasDiagnosis === \"1\" && [/*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 15\n      }\n    }, diagnosisNeeded.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"Diagnosis\",\n        className: \"col-2 col-form-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 25\n        }\n      }, \"Diagnosis\"), /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        value: this.state.diagnosisNeeded[index].name,\n        className: \"col-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(DiagnosisAutosuggest, {\n        onChange: this.handleDiagnosisChange(index),\n        value: this.state.diagnosisNeeded[index].name,\n        index: index,\n        saveFunction: this.saveDiagnosis.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 25\n        }\n      })));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      onClick: this.addDiagnosis,\n      value: \"Add Diagnosis\",\n      className: \"submit-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      onClick: this.deleteDiagnosis,\n      value: \"Delete Diagnoses\",\n      className: \"submit-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 19\n      }\n    })))], /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"hasPrescriptions\",\n      className: \"col-2 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 15\n      }\n    }, \"Is HUG specific prescriptions?\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"hugPrescript\",\n      type: \"radio\",\n      value: \"1\",\n      checked: this.state.hasPrescriptions === \"1\",\n      onChange: this.handleChange(\"hasPrescriptions\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 23\n      }\n    }), \"Yes\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"noHugPrescript\",\n      name: \"noPrescription\",\n      type: \"radio\",\n      value: \"0\",\n      checked: this.state.hasPrescriptions === \"0\",\n      onChange: this.handleChange(\"hasPrescriptions\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 23\n      }\n    }), \"No\"))))), this.state.hasPrescriptions === \"1\" && [/*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 15\n      }\n    }, prescriptionNeeded.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"Prescription\",\n        className: \"col-2 col-form-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 23\n        }\n      }, \"Prescription\"), /*#__PURE__*/React.createElement(\"div\", {\n        value: this.state.prescriptionNeeded[index].name,\n        className: \"col-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(PrescriptionAutosuggest, {\n        onChange: this.handlePrescriptionChange(index),\n        value: this.state.prescriptionNeeded[index].name,\n        index: index,\n        saveFunction: this.savePrescription.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 23\n        }\n      })));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      onClick: this.addPrescription,\n      value: \"Add Prescription\",\n      className: \"submit-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      onClick: this.deletePrescription,\n      value: \"Delete Prescriptions\",\n      className: \"submit-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 19\n      }\n    })))])), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      id: \"nextButton\",\n      onClick: () => {\n        this.props.nextFunction(this.state);\n      },\n      value: \"Next\",\n      className: \"submit-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Purpose;","map":{"version":3,"sources":["/home/ubuntu/Connor/WorkOSU/app/src/pages/MainPages/HUGPages/HUGPagesRoutingContainer/purpose.js"],"names":["React","Component","Fragment","DiagnosisAutosuggest","PrescriptionAutosuggest","FormGroup","labelName","value","handleChange","replace","Purpose","constructor","props","key","event","setState","target","addDiagnosis","e","prevState","diagnosisNeeded","name","console","log","state","deleteDiagnosis","deletePrescription","prescriptionNeeded","handleDiagnosisChange","index","addPrescription","handlePrescriptionChange","handleSubmit","preventDefault","handleReturnInfo","hugName","hugCat","medCat","specialtyCare","purpose","hasPrescriptions","hasDiagnosis","bind","saveDiagnosis","savePrescription","diagnosisName","prescriptionName","componentDidMount","window","location","hash","assign","render","currentStep","medicalCatNames","medicalList","map","medName","specialtyNames","specialtyList","specName","specialtyVare","item","nextFunction"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport DiagnosisAutosuggest from \"./DiagnosisAutosuggest\";\nimport PrescriptionAutosuggest from \"./PrescriptionAutosuggest\";\nimport \"../../../../styles/buttons.css\";\nimport \"./scss/purpose.scss\";\nimport \"react-table/react-table.css\";\n\nconst FormGroup = ({ labelName, value, handleChange }) => {\n  return (\n    <div className=\"form-group row\">\n      <div className=\"col-1\" />\n      <label\n        htmlFor={labelName.replace(/\\s+/g, \"-\")}\n        className=\"col-2 col-form-label\"\n      >\n        {labelName}\n      </label>\n      <div className=\"col-8\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id={labelName.replace(/\\s+/g, \"-\")}\n          value={value}\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"col-1\" />\n    </div>\n  );\n};\n\n\n\nclass Purpose extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      diagnosisNeeded: [\n        {\n          name: \"\"\n        }\n      ],\n      prescriptionNeeded: [\n        {\n          name: \"\"\n        }\n      ],\n      hugName: \"\",            // name of the HUG\n      hugCat: \"\",             // HUG Category\n      medCat: \"\",             // medical category\n      specialtyCare: \"\",      //specialty care, only filled out if specialty care was selected for med cat\n      purpose: \"\",            // purpose of the HUG\n      hasPrescriptions: \"\",   // are the prescriptions associated with this hug\n      hasDiagnosis: \"\"        // are there certain diagnosises associated with this hug\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDiagnosisChange = this.handleDiagnosisChange.bind(this);\n    this.handlePrescriptionChange = this.handlePrescriptionChange.bind(this);\n    this.saveDiagnosis = this.saveDiagnosis.bind(this);\n    this.savePrescription = this.savePrescription.bind(this);\n  }\n\n  /*Handle Event Functions*/\n  handleChange = key => {\n    return event => {\n      this.setState({ [key]: event.target.value });\n    };\n  };\n  // called when the add diagnosis button is pressed, create  a new map entry\n  addDiagnosis = e => {\n    this.setState(prevState => ({\n      diagnosisNeeded: [...prevState.diagnosisNeeded, { name: \"\" }]\n    }));\n    console.log(\"after add diagnosis\", this.state.diagnosisNeeded);\n  };\n\n  // clear all of the Diagnoses if the delete button is pressed\n  deleteDiagnosis = e => {\n    this.setState({ diagnosisNeeded: [] });\n  };\n// clear all of the prescriptions if the delete button is pressed\n  deletePrescription = e => {\n    this.setState({ prescriptionNeeded: [] });\n  };\n  // each time a new character is added to a diagnosis field\n  handleDiagnosisChange = index => key => {\n    const { diagnosisNeeded } = this.state;\n    console.log(this.state.diagnosisNeeded);\n\n    return event => {\n      diagnosisNeeded[index][key] = event.target.value;\n      this.setState({ diagnosisNeeded });\n    };\n  };\n  // call back function for the diagnosis autosuggest\n  saveDiagnosis(index, diagnosisName) {\n    const { diagnosisNeeded } = this.state;\n    console.log(\"in function\");\n    diagnosisNeeded[index][\"name\"] = diagnosisName;\n    this.setState({ diagnosisNeeded });\n    console.log(\"after add diagnosis\", this.state.diagnosisNeeded);\n  }\n // callback function for the prescription autosuggest\n  savePrescription(index, prescriptionName) {\n    const { prescriptionNeeded } = this.state;\n    console.log(\"in function\");\n    prescriptionNeeded[index][\"name\"] = prescriptionName;\n    this.setState({ prescriptionNeeded });\n    console.log(\"after add prescription\", this.state.prescriptionNeeded);\n  }\n  // everytime add prescription is clicked, add a new map entry\n  addPrescription = e => {\n    this.setState(prevState => ({\n      prescriptionNeeded: [...prevState.prescriptionNeeded, { name: \"\" }]\n    }));\n    console.log(\"after add prescription\", this.state.prescriptionNeeded);\n  };\n  // when a new prescription character is entered\n  handlePrescriptionChange = index => key => {\n    const { prescriptionNeeded } = this.state;\n    console.log(this.state.prescriptionNeeded);\n\n    return event => {\n      prescriptionNeeded[index][key] = event.target.value;\n      this.setState({ prescriptionNeeded });\n    };\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  handleReturnInfo = () => {\n    return this.state;\n  };\n  componentDidMount() {\n    if (!window.location.hash) {\n      //setting window location\n      window.location.assign(window.location + \"#loaded\");\n      //using reload() method to reload web page\n      // window.location.reload();\n    }\n  }\n\n  render() {\n    const { diagnosisNeeded } = this.state;\n    const { prescriptionNeeded } = this.state;\n    if (this.props.currentStep !== 1) {\n      // Prop: The current step\n      return null;\n    }\n    const medicalCatNames = [\n      \"Primary Care\",\n      \"UrgentCare\",\n      \"Geriatric/Nursing\",\n      \"Mental/Psychiatric\",\n      \"Dental Care\",\n      \"Laboratory and Diagnostic Care\",\n      \"Substance Abuse Rehabilitation\",\n      \"Optometry\",\n      \"Preventative Care\",\n      \"Physical and Occupational Therapy\",\n      \"Nutritionist\",\n      \"Prenatal Care\",\n      \"Specialty Care\"\n    ];\n    const medicalList = medicalCatNames.map(function(medName) {\n      return (\n        <option id={medName} value={medName}>\n          {medName}\n        </option>\n      );\n    });\n    const specialtyNames = [\n      \"Allergy & Asthma\",\n      \"Anesthesiology\",\n      \"Dermatology\",\n      \"Endocrinology\",\n      \"Gastroenterology\",\n      \"General Surgery\",\n      \"Hematology\",\n      \"Immunology\",\n      \"Infectious Disease\",\n      \"Nephrology\",\n      \"Neurology\",\n      \"OB/GYN\",\n      \"Oncology\",\n      \"Ophthalmology\",\n      \"Orthopedics\",\n      \"Otorhinolaryngology\",\n      \"Physical Therapy + Rehabilitiatice Medicine\",\n      \"Psychiatry\",\n      \"Pulmonary\",\n      \"Radiology\",\n      \"Rheumatology\",\n      \"Urology\",\n      \"Other\"\n    ];\n    const specialtyList = specialtyNames.map(function(specName) {\n      return <option value={specName}>{specName}</option>;\n    });\n    return (\n      <div className=\"col\">\n        <div className=\"row mt-5\">\n          <div className=\"col\">\n            <FormGroup\n              labelName=\"Name\"\n              value={this.state.hugName}\n              handleChange={this.handleChange(\"hugName\")}\n            />\n\n            <div className=\"form-group row\">\n              <div className=\"col-1\" />\n              <label htmlFor=\"HUG Category\" className=\"col-2 col-form-label\">\n                Hug Category\n              </label>\n              <div className=\"col\">\n                <select\n                  id=\"hugCat\"\n                  value={this.state.hugCat}\n                  className=\"form-control\"\n                  onChange={this.handleChange(\"hugCat\")}\n                >\n                  <option value=\"\" disabled selected>\n                    Select category...\n                  </option>\n                  <option value=\"Medical Care\">Medical Care</option>\n                  <option value=\"Prescriptions\">Prescriptions</option>\n                  <option value=\"Lifestyle\">Lifestyle</option>\n                  <option value=\"Transportation\">Transportation</option>\n                </select>\n              </div>\n              <div className=\"col-1\" />\n            </div>\n\n            <div className=\"form-group row\">\n              <div className=\"col-1\" />\n              <label\n                htmlFor=\"Medical Category\"\n                className=\"col-2 col-form-label\"\n              >\n                Medical Category\n              </label>\n              <div className=\"col\">\n                <select\n                  id=\"medCat\"\n                  value={this.state.medCat}\n                  className=\"form-control\"\n                  onChange={this.handleChange(\"medCat\")}\n                >\n                  <option value=\"\" disabled selected>\n                    Select category...\n                  </option>\n                  {medicalList}\n                </select>\n              </div>\n              <div className=\"col-1\" />\n            </div>\n\n            <div className=\"form-group row\">\n              <div className=\"col-1\" />\n              <label htmlFor=\"Specialty Care\" className=\"col-2 col-form-label\">\n                Specialty Care\n              </label>\n              <div className=\"col\">\n                <select\n                  id=\"specialtyCare\"\n                  value={this.state.specialtyVare}\n                  className=\"form-control\"\n                  onChange={this.handleChange(\"specialtyCare\")}\n                  disabled={this.state.medCat != \"Specialty Care\"}\n                >\n                  <option value=\"\" disabled selected>\n                    Select category...\n                  </option>\n                  {specialtyList}\n                </select>\n              </div>\n              <div className=\"col-1\" />\n            </div>\n\n            <FormGroup\n              labelName=\"Purpose\"\n              value={this.state.purpose}\n              handleChange={this.handleChange(\"purpose\")}\n            />\n\n            <div className=\"form-group row\">\n              <div className=\"col-1\" />\n\n              <label htmlFor=\"Services\" className=\"col-2 col-form-label\" />\n              <div className=\"col-8\">\n                Is HUG for a specific illness?\n                <ul>\n                  <li>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        id=\"yesDiagnosis\"\n                        value=\"1\"\n                        checked={this.state.hasDiagnosis === \"1\"}\n                        onChange={this.handleChange(\"hasDiagnosis\")}\n                      />\n                      Yes\n                    </label>\n                  </li>\n\n                  <li>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        id=\"noDiagnosis\"\n                        value=\"0\"\n                        checked={this.state.hasDiagnosis === \"0\"}\n                        onChange={this.handleChange(\"hasDiagnosis\")}\n                      />\n                      No\n                    </label>\n                  </li>\n                </ul>\n              </div>\n            </div>\n\n            {this.state.hasDiagnosis === \"1\" && [\n              <div>\n                {diagnosisNeeded.map((item, index) => {\n                  return (\n                    <div>\n                      <div className=\"form-group row\">\n                        <div className=\"col-1\" />\n                        <label\n                          htmlFor=\"Diagnosis\"\n                          className=\"col-2 col-form-label\"\n                        >\n                          Diagnosis\n                        </label>\n                        <div key={index} value={this.state.diagnosisNeeded[index].name} className=\"col-8\">\n                          <DiagnosisAutosuggest\n                            onChange={this.handleDiagnosisChange(index)}\n                            value = {this.state.diagnosisNeeded[index].name}\n                            index = {index}\n                            saveFunction={this.saveDiagnosis.bind(this)}\n                          />\n                        </div>\n                        <div className=\"col-1\" />\n                      </div>\n                    </div>\n                  );\n                })}\n                <div className=\"form-group row\">\n                  <div className=\"col-4\" />\n                  <input\n                    type=\"submit\"\n                    onClick={this.addDiagnosis}\n                    value=\"Add Diagnosis\"\n                    className=\"submit-button\"\n                  />\n                  <input\n                    type=\"submit\"\n                    onClick={this.deleteDiagnosis}\n                    value=\"Delete Diagnoses\"\n                    className=\"submit-button\"\n                  />\n                </div>\n              </div>\n            ]}\n\n            <div className=\"form-group row\">\n              <div className=\"col-1\" />\n\n              <label\n                htmlFor=\"hasPrescriptions\"\n                className=\"col-2 col-form-label\"\n              />\n              <div className=\"col-8\">\n                Is HUG specific prescriptions?\n                <ul>\n                  <li>\n                    <label>\n                      <input\n                        id=\"hugPrescript\"\n                        type=\"radio\"\n                        value=\"1\"\n                        checked={this.state.hasPrescriptions === \"1\"}\n                        onChange={this.handleChange(\"hasPrescriptions\")}\n                      />\n                      Yes\n                    </label>\n                  </li>\n\n                  <li>\n                    <label>\n                      <input\n                        id=\"noHugPrescript\"\n                        name=\"noPrescription\"\n                        type=\"radio\"\n                        value=\"0\"\n                        checked={this.state.hasPrescriptions === \"0\"}\n                        onChange={this.handleChange(\"hasPrescriptions\")}\n                      />\n                      No\n                    </label>\n                  </li>\n                </ul>\n              </div>\n            </div>\n\n            {this.state.hasPrescriptions === \"1\" && [\n              <div>\n                {prescriptionNeeded.map((item, index) => {\n                  return (\n                    <div key={index}>\n                    <div className=\"form-group row\">\n                      <div className=\"col-1\" />\n                      <label htmlFor=\"Prescription\" className=\"col-2 col-form-label\">\n                        Prescription\n                      </label>\n                      <div value={this.state.prescriptionNeeded[index].name} className=\"col-8\">\n                        <PrescriptionAutosuggest\n                        onChange={this.handlePrescriptionChange(index)}\n                        value = {this.state.prescriptionNeeded[index].name}\n                        index = {index}\n                        saveFunction={this.savePrescription.bind(this)}/>\n                      </div>\n                      <div className=\"col-1\" />\n                    </div>\n                    </div>\n                  );\n                })}\n                <div className=\"form-group row\">\n                  <div className=\"col-6\" />\n                  <input\n                    type=\"submit\"\n                    onClick={this.addPrescription}\n                    value=\"Add Prescription\"\n                    className=\"submit-button\"\n                  />\n                  <input\n                    type=\"submit\"\n                    onClick={this.deletePrescription}\n                    value=\"Delete Prescriptions\"\n                    className=\"submit-button\"\n                  />\n                </div>\n              </div>\n            ]}\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <div className=\"col-10\" />\n          <input\n            type=\"submit\"\n            id=\"nextButton\"\n            onClick={() => {\n              this.props.nextFunction(this.state);\n            }}\n            value=\"Next\"\n            className=\"submit-button\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default Purpose;\n"]},"metadata":{},"sourceType":"module"}