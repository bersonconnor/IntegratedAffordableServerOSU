{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Connor/SandBoxOSU/app/src/pages/MainPages/HUGPages/HUGPagesRoutingContainer/information.js\";\nimport React, { Component, Fragment } from \"react\";\nimport \"../../../../styles/buttons.css\";\nimport './scss/information.scss';\nimport 'react-table/react-table.css';\nimport { UserIDContext } from \"../../MainPagesRoutingContainer/index.tsx\";\nimport swal from \"sweetalert\";\n\nvar FormGroup = ({\n  labelName,\n  value,\n  handleChange\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: labelName.replace(/\\s+/g, \"-\"),\n    className: \"col-2 col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, labelName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: labelName.replace(/\\s+/g, \"-\"),\n    value: value,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }));\n}; // To dynamically create the input fields for adding identifiable documents\n\n\nvar DocumentFormGroup = ({\n  name,\n  handleChange,\n  key\n}) => {\n  console.log({\n    key\n  });\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    labelName: \"Document\",\n    value: name,\n    handleChange: handleChange(\"name\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }));\n}; // To dynamically create the input fields for adding medical documents\n\n\nvar InformationFormGroup = ({\n  name,\n  handleChange,\n  key\n}) => {\n  console.log({\n    key\n  });\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    labelName: \"Document\",\n    value: name,\n    handleChange: handleChange(\"name\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }));\n};\n\nclass Information extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = key => {\n      return event => {\n        this.setState({\n          [key]: event.target.value\n        });\n      };\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n    };\n\n    this.addDocumentSelected = index => key => {\n      var documentsSelected = this.state.documentsSelected;\n      console.log(documentsSelected);\n      this.setState(prevState => ({\n        documentsSelected: [...prevState.documentsSelected, this.state.documents[index]]\n      }));\n    };\n\n    this.addInformationSelected = index => key => {\n      var informationSelected = this.state.informationSelected;\n      console.log(informationSelected);\n      this.setState(prevState => ({\n        informationSelected: [...prevState.informationSelected, this.state.information[index]]\n      }));\n    };\n\n    this.clearDocumentChoices = e => {\n      this.setState({\n        documentsSelected: []\n      });\n    };\n\n    this.clearInformationEntries = e => {\n      this.setState({\n        informationNeeded: []\n      });\n    };\n\n    this.clearDocumentEntries = e => {\n      this.setState({\n        documentsNeeded: []\n      });\n    };\n\n    this.clearInformationChoices = e => {\n      this.setState({\n        informationSelected: []\n      });\n    };\n\n    this.addDocument = e => {\n      this.setState(prevState => ({\n        documentsNeeded: [...prevState.documentsNeeded, {\n          name: \"\"\n        }]\n      }));\n      console.log(\"after add doc\", this.state.documentsNeeded);\n    };\n\n    this.handleDocumentChange = index => key => {\n      var documentsNeeded = this.state.documentsNeeded;\n      console.log(this.state.documentsNeeded);\n      return event => {\n        documentsNeeded[index][key] = event.target.value;\n        this.setState({\n          documentsNeeded\n        });\n      };\n    };\n\n    this.addInformation = e => {\n      this.setState(prevState => ({\n        informationNeeded: [...prevState.informationNeeded, {\n          name: \"\"\n        }]\n      }));\n      console.log(\"after add info\", this.state.informationNeeded);\n    };\n\n    this.handleInformationChange = index => key => {\n      var informationNeeded = this.state.informationNeeded;\n      console.log(this.state.informationNeeded);\n      return event => {\n        informationNeeded[index][key] = event.target.value;\n        this.setState({\n          informationNeeded\n        });\n      };\n    };\n\n    this.state = {\n      documentsNeeded: [],\n      //holds the user input fields for documents\n      informationNeeded: [],\n      //holds the user input fields for information\n      documentsSelected: [],\n      //to hold the radio buttons that are selected for the documents\n      informationSelected: [],\n      //to hold the radio buttons that are selected for the information\n      candidateSelection: '',\n      //boolean of whether they want to select the candidate\n      documentationNeeded: '',\n      //boolean of whether they require documentation\n      medicalInfoNeeded: '',\n      //boolean of whether they require medical info\n      shouldHide: true,\n      documents: ['Social Security Card', 'Birth Certiciate', 'Passport', 'Tax Return', 'Residency Card', 'Drivers License', 'Health Insurance Card', 'Veterans ID Card', 'DD Form 214', 'DD Form 256', 'Other'],\n      //these can be changed (radio button options)\n      information: ['Primary Physician Information', 'Medical History', 'Medications/Perscriptions', 'Other'] //these can be changed (radio button options)\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  /*Helper Functions*/\n\n  /*Handle Event Functions*/\n\n  /*Handle Event Functions*/\n\n\n  componentDidMount() {\n    if (!window.location.hash) {\n      //setting window location\n      window.location = window.location + \"#loaded\"; //using reload() method to reload web page\n      // window.location.reload();\n    }\n  }\n\n  render() {\n    if (this.props.currentStep !== 3) {\n      // Prop: The current step\n      return null;\n    } //get all the documentsNeeded that are input fields (add Document)\n\n\n    var documentsNeeded = this.state.documentsNeeded; //get all of the informationNeeded that are input fields(add Document)\n\n    var informationNeeded = this.state.informationNeeded; //Get the array list of predefined documents that will be radio options\n\n    var documents = this.state.documents;\n    var information = this.state.information;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"candidateSelection\",\n      className: \"col-2 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    }, \"Do you wish to select the eligible candidate?\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"yesSelect\",\n      value: \"1\",\n      checked: this.state.candidateSelection === \"1\",\n      onChange: this.handleChange('candidateSelection'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 37\n      }\n    }), \"Yes\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"noSelect\",\n      value: \"0\",\n      checked: this.state.candidateSelection === \"0\",\n      onChange: this.handleChange('candidateSelection'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 37\n      }\n    }), \"No\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"documentationNeeded\",\n      className: \"col-2 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }\n    }, \"Do you need documentation from applicants?\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"yesDocApp\",\n      value: \"1\",\n      checked: this.state.documentationNeeded === \"1\",\n      onChange: this.handleChange('documentationNeeded'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 37\n      }\n    }), \"Yes\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"noDocApp\",\n      value: \"0\",\n      checked: this.state.documentationNeeded === \"0\",\n      onChange: this.handleChange('documentationNeeded'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 37\n      }\n    }), \"No\"))))), this.state.documentationNeeded === \"1\" && [/*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"requiredDoc\",\n      className: \"col-2 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 25\n      }\n    }, \"Select Required Documentation\", /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"doclist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 29\n      }\n    }, documents.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        name: documents[index],\n        id: documents[index],\n        checked: this.state.documentsSelected.includes(documents[index]) === true,\n        onChange: this.addDocumentSelected(index),\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 41\n        }\n      }), documents[index]);\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      onClick: this.clearDocumentChoices,\n      value: \"Clear Documents\",\n      className: \"submit-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 35\n      }\n    })), documentsNeeded.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(DocumentFormGroup, {\n        name: this.state.documentsNeeded[index].name,\n        handleChange: this.handleDocumentChange(index),\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 41\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      onClick: this.clearDocumentEntries,\n      value: \"Delete Documents\",\n      className: \"submit-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      onClick: this.addDocument,\n      value: \"Add Document\",\n      className: \"submit-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 33\n      }\n    }))))], /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"medicalInfoNeeded\",\n      className: \"col-2 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 21\n      }\n    }, \"Do you need to collect medical information?\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"yesMedInfo\",\n      value: \"1\",\n      checked: this.state.medicalInfoNeeded === \"1\",\n      onChange: this.handleChange('medicalInfoNeeded'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 37\n      }\n    }), \"Yes\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"noMedInfo\",\n      value: \"0\",\n      checked: this.state.medicalInfoNeeded === \"0\",\n      onChange: this.handleChange('medicalInfoNeeded'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 37\n      }\n    }), \"No\"))))), this.state.medicalInfoNeeded === \"1\" && [/*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"requiredInfo\",\n      className: \"col-2 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 25\n      }\n    }, \"Select Required Information\", /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"medicalList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 29\n      }\n    }, information.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        name: information[index],\n        id: information[index],\n        checked: this.state.informationSelected.includes(information[index]) === true,\n        onChange: this.addInformationSelected(index),\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 41\n        }\n      }), information[index]);\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      onClick: this.clearInformationChoices,\n      value: \"Clear Selections\",\n      className: \"submit-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 35\n      }\n    })), informationNeeded.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(InformationFormGroup, {\n        name: this.state.informationNeeded[index].name,\n        handleChange: this.handleInformationChange(index),\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 41\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      id: \"addMedicalInfo\",\n      onClick: this.addInformation,\n      value: \"Add Document\",\n      className: \"submit-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      onClick: this.clearInformationEntries,\n      value: \"Delete Documents\",\n      className: \"submit-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 33\n      }\n    }))))], /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      onClick: this.props.previousFunction,\n      value: \"Previous\",\n      className: \"submit-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      id: \"nextButton\",\n      onClick: () => {\n        this.props.nextFunction(this.state);\n      },\n      value: \"Next\",\n      className: \"submit-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Information;","map":{"version":3,"sources":["/home/ubuntu/Connor/SandBoxOSU/app/src/pages/MainPages/HUGPages/HUGPagesRoutingContainer/information.js"],"names":["React","Component","Fragment","UserIDContext","swal","FormGroup","labelName","value","handleChange","replace","DocumentFormGroup","name","key","console","log","InformationFormGroup","Information","constructor","props","event","setState","target","handleSubmit","e","preventDefault","addDocumentSelected","index","documentsSelected","state","prevState","documents","addInformationSelected","informationSelected","information","clearDocumentChoices","clearInformationEntries","informationNeeded","clearDocumentEntries","documentsNeeded","clearInformationChoices","addDocument","handleDocumentChange","addInformation","handleInformationChange","candidateSelection","documentationNeeded","medicalInfoNeeded","shouldHide","bind","componentDidMount","window","location","hash","render","currentStep","map","item","includes","previousFunction","nextFunction"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport \"../../../../styles/buttons.css\";\nimport './scss/information.scss';\nimport 'react-table/react-table.css';\nimport { UserIDContext } from \"../../MainPagesRoutingContainer/index.tsx\";\nimport swal from \"sweetalert\";\n\nconst FormGroup = ({ labelName, value, handleChange }) => {\n    return (\n        <div className=\"form-group row\">\n            <div className=\"col-1\" />\n            <label\n                htmlFor={labelName.replace(/\\s+/g, \"-\")}\n                className=\"col-2 col-form-label\"\n            >\n                {labelName}\n            </label>\n            <div className=\"col-8\">\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id={labelName.replace(/\\s+/g, \"-\")}\n                    value={value}\n                    onChange={handleChange}\n                />\n            </div>\n            <div className=\"col-1\" />\n        </div>\n    );\n};\n// To dynamically create the input fields for adding identifiable documents\nconst DocumentFormGroup = ({\n                               name,\n                               handleChange,\n                               key\n                           }) => {\n    console.log({ key });\n    return (\n        <Fragment>\n            <FormGroup\n                labelName=\"Document\"\n                value={name}\n                handleChange={handleChange(\"name\")}\n            />\n        </Fragment>\n    );\n};\n\n// To dynamically create the input fields for adding medical documents\nconst InformationFormGroup = ({\n                                  name,\n                                  handleChange,\n                                  key\n                              }) => {\n    console.log({ key });\n    return (\n        <Fragment>\n            <FormGroup\n                labelName=\"Document\"\n                value={name}\n                handleChange={handleChange(\"name\")}\n            />\n        </Fragment>\n    );\n};\n\n\nclass Information extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            documentsNeeded: [],     //holds the user input fields for documents\n            informationNeeded: [],   //holds the user input fields for information\n            documentsSelected:[],    //to hold the radio buttons that are selected for the documents\n            informationSelected:[],  //to hold the radio buttons that are selected for the information\n            candidateSelection: '',  //boolean of whether they want to select the candidate\n            documentationNeeded: '', //boolean of whether they require documentation\n            medicalInfoNeeded:'',    //boolean of whether they require medical info\n            shouldHide: true,\n            documents: ['Social Security Card', 'Birth Certiciate', 'Passport', 'Tax Return', 'Residency Card',\n                'Drivers License','Health Insurance Card', 'Veterans ID Card', 'DD Form 214', 'DD Form 256', 'Other'], //these can be changed (radio button options)\n            information: ['Primary Physician Information', 'Medical History', 'Medications/Perscriptions', 'Other'] //these can be changed (radio button options)\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    /*Helper Functions*/\n\n    /*Handle Event Functions*/\n    /*Handle Event Functions*/\n    handleChange = key => {\n\n        return event => {\n            this.setState({ [key]: event.target.value });\n        };\n    };\n    handleSubmit = e => {\n        e.preventDefault();\n    };\n\n    // function gets called when a radio button for documents is selected\n    addDocumentSelected = index => key => {\n      const { documentsSelected } = this.state;\n      console.log(documentsSelected)\n      this.setState(prevState => ({\n                  documentsSelected: [\n                      ...prevState.documentsSelected,\n                      this.state.documents[index]\n                  ]\n              }));\n    };\n\n      // function gets called when a radio button for medical information is selected\n    addInformationSelected = index => key => {\n      const { informationSelected } = this.state;\n      console.log(informationSelected)\n      this.setState(prevState => ({\n                  informationSelected: [\n                      ...prevState.informationSelected,\n                      this.state.information[index]\n                  ]\n              }));\n\n\n\n    };\n\n    // when someone clicks on clear documents (Radio buttons)\n    clearDocumentChoices = e =>{\n        this.setState({documentsSelected: []});\n    }\n    // when someone clicks on clear medical documents (input fields)\n    clearInformationEntries = e=> {\n        this.setState({informationNeeded: []});\n    }\n    // when someone clicks on clear idenifiable documents (input fields)\n    clearDocumentEntries = e=> {\n        this.setState({documentsNeeded: []});\n    }\n    // when someone clicks on clear medical documents (radio buttons)\n    clearInformationChoices = e =>{\n        this.setState({informationSelected: []});\n    }\n\n    // saves input field identifiable documents to map (this just a new slot)\n    //- actual value is added in a separate function (handleDocumentChange)\n    addDocument = e => {\n        this.setState(prevState => ({\n            documentsNeeded: [\n                ...prevState.documentsNeeded,\n                { name: \"\" }\n            ]\n        }));\n        console.log(\"after add doc\", this.state.documentsNeeded);\n    };\n\n    // each time the user enters a new character, update the name value for the document\n    handleDocumentChange = index => key => {\n        const { documentsNeeded } = this.state;\n        console.log(this.state.documentsNeeded);\n\n        return event => {\n            documentsNeeded[index][key] = event.target.value;\n            this.setState({ documentsNeeded });\n        };\n    };\n\n    // saves input field medical documents to map (this just a new slot)\n    //- actual value is added in a separate function (handleInformationChange)\n    addInformation = e => {\n        this.setState(prevState => ({\n            informationNeeded: [\n                ...prevState.informationNeeded,\n                { name: \"\" }\n            ]\n        }));\n        console.log(\"after add info\", this.state.informationNeeded);\n    };\n\n    // each time the user enters a new character, update the name value for the medical document\n    handleInformationChange = index => key => {\n        const { informationNeeded } = this.state;\n        console.log(this.state.informationNeeded);\n\n        return event => {\n            informationNeeded[index][key] = event.target.value;\n            this.setState({ informationNeeded });\n        };\n    };\n\n    componentDidMount() {\n        if (!window.location.hash) {\n            //setting window location\n            window.location = window.location + \"#loaded\";\n            //using reload() method to reload web page\n            // window.location.reload();\n        }\n    }\n\n    render() {\n        if (this.props.currentStep !== 3) { // Prop: The current step\n            return null\n        }\n        //get all the documentsNeeded that are input fields (add Document)\n        const { documentsNeeded} = this.state;\n        //get all of the informationNeeded that are input fields(add Document)\n        const { informationNeeded} = this.state;\n        //Get the array list of predefined documents that will be radio options\n        let {documents} = this.state;\n        let {information} = this.state;\n\n        return (\n            <div className=\"col\">\n\n                <div className=\"form-group row\">\n\n                    <label htmlFor=\"candidateSelection\" className=\"col-2 col-form-label\" />\n                    <div className=\"col-8\" >\n                        Do you wish to select the eligible candidate?\n                        <ul>\n                            <li>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        id=\"yesSelect\"\n                                        value=\"1\"\n                                        checked={this.state.candidateSelection === \"1\"}\n                                        onChange={this.handleChange('candidateSelection')}\n                                    />\n                                    Yes\n                                </label>\n                            </li>\n\n                            <li>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        id=\"noSelect\"\n                                        value=\"0\"\n                                        checked={this.state.candidateSelection === \"0\"}\n                                        onChange={this.handleChange('candidateSelection')}\n                                    />\n                                    No\n                                </label>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n\n                <div className=\"form-group row\">\n\n                    <label htmlFor=\"documentationNeeded\" className=\"col-2 col-form-label\" />\n                    <div className=\"col-8\" >\n                        Do you need documentation from applicants?\n                        <ul>\n                            <li>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        id= \"yesDocApp\"\n                                        value=\"1\"\n                                        checked={this.state.documentationNeeded === \"1\"}\n                                        onChange={this.handleChange('documentationNeeded')}\n                                    />\n                                    Yes\n                                </label>\n                            </li>\n\n                            <li>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        id= \"noDocApp\"\n                                        value=\"0\"\n                                        checked={this.state.documentationNeeded === \"0\"}\n                                        onChange={this.handleChange('documentationNeeded')}\n                                    />\n                                    No\n                                </label>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                {this.state.documentationNeeded === \"1\" && [\n                    <div className=\"form-group row\">\n                        <div className=\"col-2\" />\n                        <label htmlFor=\"requiredDoc\" className=\"col-2 col-form-label\" />\n                        <div className=\"col-6\" >\n                            Select Required Documentation\n                            <ul id=\"doclist\">\n                            {documents.map((item, index) => {\n                                return (\n                                    <div key={index}>\n                                        <input\n                                            type=\"radio\"\n                                            name={documents[index]}\n                                            id={documents[index]}\n                                            checked = {this.state.documentsSelected.includes(documents[index])===true}\n                                            onChange={this.addDocumentSelected(index)}\n                                            key={index}\n                                        />{documents[index]}\n                                    </div>\n                                );\n                            })}\n                            </ul>\n                            <div className=\"form-group row\">\n                                <div className=\"col-4\" />\n                                  <input type=\"submit\" onClick={this.clearDocumentChoices} value=\"Clear Documents\" className=\"submit-button\" />\n                              </div>\n                            {documentsNeeded.map((item, index) => {\n                                return (\n                                    <div key={index}>\n                                        <DocumentFormGroup\n                                            name={this.state.documentsNeeded[index].name}\n                                            handleChange={this.handleDocumentChange(index)}\n                                            key={index}\n                                        />\n                                    </div>\n                                );\n                            })}\n\n                            <div className=\"form-group row\">\n                                <div className=\"col-4\" />\n                                <input type=\"submit\" onClick={this.clearDocumentEntries} value=\"Delete Documents\" className=\"submit-button\"/>\n                                <input type=\"submit\" onClick={this.addDocument} value=\"Add Document\" className=\"submit-button\" />\n                            </div>\n                        </div>\n\n                    </div>\n                ]}\n\n\n                <div className=\"form-group row\">\n\n                    <label htmlFor=\"medicalInfoNeeded\" className=\"col-2 col-form-label\" />\n                    <div className=\"col-8\" >\n                        Do you need to collect medical information?\n                        <ul>\n                            <li>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        id= \"yesMedInfo\"\n                                        value=\"1\"\n                                        checked={this.state.medicalInfoNeeded === \"1\"}\n                                        onChange={this.handleChange('medicalInfoNeeded')}\n                                    />\n                                    Yes\n                                </label>\n                            </li>\n\n                            <li>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        id= \"noMedInfo\"\n                                        value=\"0\"\n                                        checked={this.state.medicalInfoNeeded === \"0\"}\n                                        onChange={this.handleChange('medicalInfoNeeded')}\n                                    />\n                                    No\n                                </label>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                {this.state.medicalInfoNeeded === \"1\" && [\n                    <div className=\"form-group row\">\n                        <div className=\"col-2\" />\n                        <label htmlFor=\"requiredInfo\" className=\"col-2 col-form-label\" />\n                        <div className=\"col-6\" >\n                            Select Required Information\n                            <ul id=\"medicalList\">\n                            {information.map((item, index) => {\n                                return (\n                                    <div key={index}>\n                                        <input\n                                            type=\"radio\"\n                                            name={information[index]}\n                                            id={information[index]}\n                                            checked = {this.state.informationSelected.includes(information[index])===true}\n                                            onChange={this.addInformationSelected(index)}\n                                            key={index}\n                                        />{information[index]}\n                                    </div>\n                                );\n                            })}\n                            </ul>\n                            <div className=\"form-group row\">\n                                <div className=\"col-4\" />\n                                  <input type=\"submit\" onClick={this.clearInformationChoices} value=\"Clear Selections\" className=\"submit-button\"/>\n                            </div>\n                            {informationNeeded.map((item, index) => {\n                                return (\n                                    <div key={index}>\n                                        <InformationFormGroup\n                                            name={this.state.informationNeeded[index].name}\n                                            handleChange={this.handleInformationChange(index)}\n                                            key={index}\n                                        />\n                                    </div>\n                                );\n                            })}\n                            <div className=\"form-group row\">\n                                <div className=\"col-4\" />\n                                <input type=\"submit\" id=\"addMedicalInfo\" onClick={this.addInformation} value=\"Add Document\" className=\"submit-button\"/>\n                                <input type=\"submit\" onClick={this.clearInformationEntries} value=\"Delete Documents\" className=\"submit-button\"/>\n                            </div>\n                        </div>\n\n                    </div>\n                ]}\n\n\n                <div className=\"form-group row\">\n                    <div className=\"col-2\" />\n                    <input type=\"submit\" onClick={this.props.previousFunction} value=\"Previous\" className=\"submit-button\"/>\n                    <div className=\"col-8\" />\n                    <input type=\"submit\" id=\"nextButton\" onClick={()=>{this.props.nextFunction(this.state);}} value=\"Next\" className=\"submit-button\"/>\n                </div>\n            </div>\n        );\n    }\n\n}\nexport default Information;\n"]},"metadata":{},"sourceType":"module"}