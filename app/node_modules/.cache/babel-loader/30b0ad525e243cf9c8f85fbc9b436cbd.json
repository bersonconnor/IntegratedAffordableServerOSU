{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Connor/Demo_OSU_Filemanager/app/src/pages/AdminPages/RevokeAdmin/index.tsx\";\nimport React, { Component } from 'react';\nimport { Actions } from 'affordable-shared-models';\nimport { Redirect } from 'react-router-dom';\n\nclass RevokeAdminComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      admins: new Array(),\n      filteredAdmins: new Array(),\n      adminCanView: false,\n      adminPrivsChecked: false\n    };\n  }\n\n  componentDidMount() {\n    //Check User is Authorized to View Page\n    this.checkAdminPrivileges();\n    this.props.client.getAdmins({\n      userId: this.props.adminId\n    }).then(res => {\n      res = res.filter(admin => admin.id !== this.props.adminId && admin.username !== 'admin' && !admin.isDeactivate);\n      this.setState({\n        admins: res,\n        filteredAdmins: res\n      });\n    });\n  }\n\n  checkAdminPrivileges() {\n    this.props.client.checkPrivilege(this.props.adminId, \"revokeAdminAccess\").then(res => {\n      var canView = res;\n      this.setState({\n        adminCanView: canView,\n        adminPrivsChecked: true\n      });\n    });\n  }\n\n  revokeUserAccess(userId, username) {\n    this.props.client.revokeAdminAccess({\n      adminId: this.props.adminId,\n      userId: userId\n    }).then(res => {\n      this.props.client.recordAuditTrails(this.props.admin.username, \"\".concat(this.props.admin.username, \" \").concat(Actions.RevokeAdminAccess, \" for \").concat(username));\n      this.componentDidMount();\n    });\n  }\n\n  getAdminRow(admin) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: admin.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, admin.id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, admin.username), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, admin.primaryEmail), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.revokeUserAccess(admin.id, admin.username),\n      type: \"button\",\n      className: \"btn btn-danger adminButton\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"bottom\",\n      title: \"Revoke\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"Revoke\")));\n  }\n\n  filterAdmins(e) {\n    var searchResults = this.state.admins.filter(admin => {\n      var _admin$primaryEmail;\n\n      return admin.username.includes(e.target.value) || ((_admin$primaryEmail = admin.primaryEmail) === null || _admin$primaryEmail === void 0 ? void 0 : _admin$primaryEmail.includes(e.target.value));\n    });\n    this.setState({\n      filteredAdmins: searchResults\n    });\n  }\n\n  render() {\n    if (this.state.adminPrivsChecked) {\n      if (this.state.adminCanView) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"adminPageContainer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          name: \"search\",\n          placeholder: \"search\",\n          onChange: e => this.filterAdmins(e),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"table\", {\n          className: \"adminTable\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }\n        }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }\n        }, \"Username\"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }\n        }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }\n        }, \"Revoke Admin Access\")), this.state.filteredAdmins.map(admin => {\n          return this.getAdminRow(admin);\n        })));\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/NotFound\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }\n        });\n      }\n    } else {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 20\n        }\n      }, \"Loading...\");\n    }\n  }\n\n}\n\nexport default RevokeAdminComponent;","map":{"version":3,"sources":["/home/ubuntu/Connor/Demo_OSU_Filemanager/app/src/pages/AdminPages/RevokeAdmin/index.tsx"],"names":["React","Component","Actions","Redirect","RevokeAdminComponent","constructor","props","state","admins","Array","filteredAdmins","adminCanView","adminPrivsChecked","componentDidMount","checkAdminPrivileges","client","getAdmins","userId","adminId","then","res","filter","admin","id","username","isDeactivate","setState","checkPrivilege","canView","revokeUserAccess","revokeAdminAccess","recordAuditTrails","RevokeAdminAccess","getAdminRow","primaryEmail","e","filterAdmins","searchResults","includes","target","value","render","map"],"mappings":"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","sourcesContent":["import React, { Component, ReactElement } from 'react'\nimport { AffordableAdminClient } from 'affordable-client'\nimport { Admin, UserInfo, Actions } from 'affordable-shared-models'\nimport { Dropdown } from 'react-bootstrap';\nimport NotFound from '../../ErrorPages/NotFound';\nimport { Redirect } from 'react-router-dom';\n\ninterface Props {\n    client: AffordableAdminClient;\n    adminId: number;\n    admin: UserInfo;\n\n}\ninterface State {\n    admins: Array<UserInfo>;\n    filteredAdmins: Array<UserInfo>;\n    adminCanView: boolean;\n    adminPrivsChecked: boolean;\n}\n\nclass RevokeAdminComponent extends Component<Props, State> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            admins: new Array<UserInfo>(),\n            filteredAdmins: new Array<UserInfo>(),\n            adminCanView: false,\n            adminPrivsChecked: false\n        };\n    }\n\n    componentDidMount() {\n        //Check User is Authorized to View Page\n        this.checkAdminPrivileges();\n        \n        this.props.client.getAdmins({userId: this.props.adminId}).then((res: Array<UserInfo>) => {\n            res = res.filter(admin => admin.id !== this.props.adminId && admin.username !== 'admin' && !admin.isDeactivate)\n            this.setState({\n                admins: res,\n                filteredAdmins: res\n            });\n        });\n    }\n\n    checkAdminPrivileges() {\n        this.props.client.checkPrivilege(this.props.adminId, \"revokeAdminAccess\").then(res => {\n            let canView = res;\n            this.setState({\n                adminCanView: canView,\n                adminPrivsChecked: true\n            });\n        });\n    }\n\n    revokeUserAccess(userId: number, username: string) {\n        this.props.client.revokeAdminAccess({\n            adminId: this.props.adminId,\n            userId: userId\n        }).then(res => {\n            this.props.client.recordAuditTrails(this.props.admin.username, `${this.props.admin.username} ${Actions.RevokeAdminAccess} for ${username}`)\n            this.componentDidMount();\n        })\n    }\n\n    getAdminRow(admin: UserInfo): JSX.Element {\n        return (\n                <tr key={admin.id}>\n                    <td>{admin.id}</td>\n                    <td>{admin.username}</td>\n                    <td>{admin.primaryEmail}</td>  \n                    <td>\n                    <button \n                        onClick={ (e) => this.revokeUserAccess(admin.id, admin.username) } \n                        type=\"button\" \n                        className=\"btn btn-danger adminButton\"\n                        data-toggle=\"tooltip\" \n                        data-placement=\"bottom\" \n                        title={\"Revoke\"}>\n                            Revoke\n                    </button>\n                    </td>                  \n                </tr>\n            )\n    }\n\n    filterAdmins(e: React.ChangeEvent<HTMLInputElement>): void {\n        let searchResults = this.state.admins.filter(admin => admin.username.includes(e.target.value) || admin.primaryEmail?.includes(e.target.value));\n        this.setState({\n            filteredAdmins: searchResults\n        });\n    }\n\n    render() {\n        if (this.state.adminPrivsChecked) {\n            if (this.state.adminCanView) {\n            return (\n                <div className=\"adminPageContainer\">\n                    <input name=\"search\" placeholder=\"search\" onChange={(e) => this.filterAdmins(e)}/>\n                    <table className=\"adminTable\">\n                        <tr>\n                            <th>ID</th>\n                            <th>Username</th>\n                            <th>Email</th>\n                            <th>Revoke Admin Access</th>\n                        </tr>\n                        {this.state.filteredAdmins.map(admin => {\n                            return this.getAdminRow(admin);\n                        })}\n                    </table>\n                </div>\n            )\n            } else {\n                return (\n                    <Redirect to=\"/NotFound\"/>\n                )\n            }\n        } else {\n            return <span>Loading...</span>\n        }\n    }\n}\n\nexport default RevokeAdminComponent;"]},"metadata":{},"sourceType":"module"}