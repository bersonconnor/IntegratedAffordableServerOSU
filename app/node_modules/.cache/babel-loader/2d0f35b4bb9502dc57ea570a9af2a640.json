{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Connor/Demo_OSU_Filemanager/app/src/pages/AuthPages/AddSecondaryEmailVerify/index.js\";\nimport React, { Component } from \"react\";\nimport queryString from \"query-string\";\n\nclass AddSecondaryEmailVerify extends Component {\n  constructor(props) {\n    super(props);\n    this.REACT_APP_AF_BACKEND_URL = process.env.REACT_APP_AF_BACKEND_URL || window.REACT_APP_AF_BACKEND_URL;\n    this.state = {\n      username: \"\",\n      email: \"\",\n      randomString: \"\",\n      timestamp: \"\"\n    };\n    this.handleEmailAdd = this.handleEmailAdd.bind(this);\n  }\n\n  handleEmailAdd() {\n    var tenMinutes = 1000000;\n\n    if (Date.now() - this.state.timestamp < tenMinutes) {\n      var data = new FormData();\n      data.append(\"username\", this.state.username);\n      data.append(\"email\", this.state.newEmail);\n      fetch(this.REACT_APP_AF_BACKEND_URL + \"/profile/verify-email\", {\n        method: \"POST\",\n        body: data\n      }).then(response => {\n        if (response.ok) return response.json().then(resData => {\n          alert(resData.success);\n        });else {\n          alert(\"unable to verify email\");\n        }\n      });\n    } else {\n      var data2 = new FormData();\n      data2.append(\"randomstring\", this.state.randomString);\n      fetch(this.REACT_APP_AF_BACKEND_URL + \"/profile/remove-request\", {\n        method: \"POST\",\n        body: data2\n      }).then(response => {\n        if (response.ok) return response.json().then(() => {\n          alert(\"Secret string expired\");\n        });\n      });\n    }\n  }\n\n  componentDidMount() {\n    var decodedURL = decodeURIComponent(this.props.location.search);\n    var values = queryString.parse(decodedURL);\n    var randomString = values.temp;\n    console.log(\"string: \" + randomString);\n    var rdata = new FormData();\n    rdata.append(\"randomString\", randomString);\n    var that = this;\n    fetch(this.REACT_APP_AF_BACKEND_URL + \"/profile/get-request\", {\n      method: \"POST\",\n      body: rdata\n    }).then(response => {\n      console.log(response);\n      if (response.ok) return response.json().then(resData => {\n        if (resData.RandomString === randomString) {\n          that.setState({\n            username: resData.Username,\n            newEmail: resData.NewEmail,\n            oldEmail: resData.OldEmail,\n            randomString: resData.RandomString,\n            timestamp: resData.Timestamp\n          });\n          that.handleEmailAdd();\n        }\n      });else {\n        alert(\"unable to change email\");\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, \"Your Secondary Email has been Verified!\")))));\n  }\n\n}\n\nexport default AddSecondaryEmailVerify;","map":{"version":3,"sources":["/home/ubuntu/Connor/Demo_OSU_Filemanager/app/src/pages/AuthPages/AddSecondaryEmailVerify/index.js"],"names":["React","Component","queryString","AddSecondaryEmailVerify","constructor","props","REACT_APP_AF_BACKEND_URL","process","env","window","state","username","email","randomString","timestamp","handleEmailAdd","bind","tenMinutes","Date","now","data","FormData","append","newEmail","fetch","method","body","then","response","ok","json","resData","alert","success","data2","componentDidMount","decodedURL","decodeURIComponent","location","search","values","parse","temp","console","log","rdata","that","RandomString","setState","Username","NewEmail","oldEmail","OldEmail","Timestamp","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport queryString from \"query-string\";\n\nclass AddSecondaryEmailVerify extends Component {\n\n  REACT_APP_AF_BACKEND_URL = process.env.REACT_APP_AF_BACKEND_URL || window.REACT_APP_AF_BACKEND_URL;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      randomString: \"\",\n      timestamp: \"\"\n    };\n\n    this.handleEmailAdd = this.handleEmailAdd.bind(this);\n  }\n\n  handleEmailAdd() {\n    const tenMinutes = 1000000;\n    if (Date.now() - this.state.timestamp < tenMinutes) {\n      const data = new FormData();\n      data.append(\"username\", this.state.username);\n      data.append(\"email\", this.state.newEmail);\n\n      fetch(this.REACT_APP_AF_BACKEND_URL + \"/profile/verify-email\", {\n        method: \"POST\",\n        body: data\n      }).then(response => {\n        if (response.ok)\n          return response.json().then(resData => {\n            alert(resData.success);\n          });\n        else {\n          alert(\"unable to verify email\");\n        }\n      });\n    } else {\n      const data2 = new FormData();\n      data2.append(\"randomstring\", this.state.randomString);\n      fetch(this.REACT_APP_AF_BACKEND_URL + \"/profile/remove-request\", {\n        method: \"POST\",\n        body: data2\n      }).then(response => {\n        if (response.ok)\n          return response.json().then(() => {\n            alert(\"Secret string expired\");\n          });\n      });\n    }\n  }\n\n  componentDidMount() {\n    const decodedURL = decodeURIComponent(this.props.location.search);\n    const values = queryString.parse(decodedURL);\n    const randomString = values.temp;\n    console.log(\"string: \" + randomString);\n\n    const rdata = new FormData();\n    rdata.append(\"randomString\", randomString);\n\n    const that = this;\n    fetch(this.REACT_APP_AF_BACKEND_URL + \"/profile/get-request\", {\n      method: \"POST\",\n      body: rdata\n    }).then(response => {\n      console.log(response);\n      if (response.ok)\n        return response.json().then(resData => {\n          if (resData.RandomString === randomString) {\n            that.setState({\n              username: resData.Username,\n              newEmail: resData.NewEmail,\n              oldEmail: resData.OldEmail,\n              randomString: resData.RandomString,\n              timestamp: resData.Timestamp\n            });\n            that.handleEmailAdd();\n          }\n        });\n      else {\n        alert(\"unable to change email\");\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"row mt-5\">\n        <div className=\"col\">\n          <div className=\"row\">\n            <div className=\"col text-center\">\n              <h1>Your Secondary Email has been Verified!</h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddSecondaryEmailVerify;\n"]},"metadata":{},"sourceType":"module"}