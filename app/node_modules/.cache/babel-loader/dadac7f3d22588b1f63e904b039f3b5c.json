{"ast":null,"code":"import _slicedToArray from \"/home/ubuntu/Connor/SandBoxOSU/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createForOfIteratorHelper from \"/home/ubuntu/Connor/SandBoxOSU/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nvar _jsxFileName = \"/home/ubuntu/Connor/SandBoxOSU/app/src/pages/AdminPages/AuditTrail/index.tsx\";\nimport React, { Component } from 'react';\n\nclass AuditTrails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trails: [],\n      trialsFilter: \"ALL\",\n      adminCanView: false,\n      adminPrivsChecked: false,\n      filteredTrails: []\n    };\n    this.getAuditTrailRows = this.getAuditTrailRows.bind(this);\n    this.populateFilterDropdown = this.populateFilterDropdown.bind(this);\n  }\n\n  componentDidMount() {\n    //Check User is Authorized to View Page\n    this.checkAdminPrivileges();\n    this.props.client.getAllAuditTrails({\n      userId: this.props.adminId\n    }).then(trails => {\n      trails = trails.reverse();\n      this.setState({\n        trails: trails,\n        filteredTrails: trails\n      });\n    });\n  }\n\n  checkAdminPrivileges() {\n    this.props.client.checkPrivilege(this.props.adminId, \"readAuditTrail\").then(res => {\n      var canView = res;\n      this.setState({\n        adminCanView: canView,\n        adminPrivsChecked: true\n      });\n    });\n  }\n\n  getAuditTrailRows() {\n    var auditTrailRows = [];\n    var trails = this.state.filteredTrails;\n\n    var _iterator = _createForOfIteratorHelper(trails.entries()),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _slicedToArray(_step.value, 2),\n            index = _step$value[0],\n            value = _step$value[1];\n\n        var date = new Date(value.time);\n\n        if (this.state.trialsFilter == \"ALL\" || this.state.trialsFilter === value.admin) {\n          auditTrailRows.push( /*#__PURE__*/React.createElement(\"tr\", {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }\n          }, value.admin), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }\n          }, value.action), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }\n          }, \"\".concat(date.getMonth(), \"/\").concat(date.getDay(), \"/\").concat(date.getFullYear(), \" : \").concat(date.getHours(), \":\"), date.getMinutes().toString().length == 1 ? \"0\".concat(date.getMinutes()) : \"\".concat(date.getMinutes()))));\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return auditTrailRows;\n  }\n\n  populateFilterDropdown() {\n    var options = [];\n    var uniqueUsernames = [];\n\n    var _iterator2 = _createForOfIteratorHelper(this.state.trails),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var auditTrail = _step2.value;\n\n        if (!uniqueUsernames.includes(auditTrail.admin)) {\n          uniqueUsernames.push(auditTrail.admin);\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    options.push( /*#__PURE__*/React.createElement(\"option\", {\n      value: \"ALL\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 22\n      }\n    }, \"ALL\"));\n\n    for (var _i = 0, _uniqueUsernames = uniqueUsernames; _i < _uniqueUsernames.length; _i++) {\n      var username = _uniqueUsernames[_i];\n      options.push( /*#__PURE__*/React.createElement(\"option\", {\n        value: username,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 26\n        }\n      }, username));\n    }\n\n    return options;\n  }\n\n  changeFilter(event) {\n    this.setState({\n      trialsFilter: event.target.value\n    });\n  }\n\n  filterAuditTrail(e) {\n    console.log(e.target.value);\n    var searchResults = this.state.trails.filter(admin => admin.admin.includes(e.target.value) || admin.action.includes(e.target.value));\n    this.setState({\n      filteredTrails: searchResults\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"adminPageContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"auditTrailLabel\",\n      id: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, \"Select an Admin: \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"auditTrailLabel\",\n      onChange: e => this.changeFilter(e),\n      id: \"admins\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, this.populateFilterDropdown()), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"search\",\n      placeholder: \"search\",\n      onChange: e => this.filterAuditTrail(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"adminTable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, \"Admin\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, \"Action\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, \"Time\")), this.getAuditTrailRows()));\n  }\n\n}\n\nexport default AuditTrails;","map":{"version":3,"sources":["/home/ubuntu/Connor/SandBoxOSU/app/src/pages/AdminPages/AuditTrail/index.tsx"],"names":["React","Component","AuditTrails","constructor","props","state","trails","trialsFilter","adminCanView","adminPrivsChecked","filteredTrails","getAuditTrailRows","bind","populateFilterDropdown","componentDidMount","checkAdminPrivileges","client","getAllAuditTrails","userId","adminId","then","reverse","setState","checkPrivilege","res","canView","auditTrailRows","entries","index","value","date","Date","time","admin","push","action","getMonth","getDay","getFullYear","getHours","getMinutes","toString","length","options","uniqueUsernames","auditTrail","includes","username","changeFilter","event","target","filterAuditTrail","e","console","log","searchResults","filter","render"],"mappings":"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","sourcesContent":["import React, { Component, ReactElement } from 'react'\nimport { AffordableAdminClient } from 'affordable-client'\nimport { AuditTrail, UserInfo} from 'affordable-shared-models'\nimport { Dropdown, Container, Row, Col } from 'react-bootstrap';\nimport NotFound from '../../ErrorPages/NotFound';\nimport { Redirect } from 'react-router-dom';\n\ninterface props {\n    client: AffordableAdminClient;\n    adminId: number;\n    admin: UserInfo;\n}\ninterface state {\n    trails: AuditTrail[],\n    filteredTrails: AuditTrail[],\n    trialsFilter: string, //Admin username dropdown filter\n    adminCanView: boolean,\n    adminPrivsChecked: boolean,\n}\n\nclass AuditTrails extends Component<props, state> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            trails: [],\n            trialsFilter: \"ALL\",\n            adminCanView: false,\n            adminPrivsChecked: false,\n            filteredTrails: []\n        };\n    this.getAuditTrailRows = this.getAuditTrailRows.bind(this);\n    this.populateFilterDropdown = this.populateFilterDropdown.bind(this);\n    }\n\n    componentDidMount() {\n        //Check User is Authorized to View Page\n        this.checkAdminPrivileges();\n        this.props.client.getAllAuditTrails({userId: this.props.adminId}).then((trails: AuditTrail[]) => {\n            trails = trails.reverse();\n            this.setState({\n                trails: trails,\n                filteredTrails: trails\n            })\n        })\n    }\n\n    checkAdminPrivileges() {\n        this.props.client.checkPrivilege(this.props.adminId, \"readAuditTrail\").then(res => {\n            let canView = res;\n            this.setState({\n                adminCanView: canView,\n                adminPrivsChecked: true\n            });\n        });\n    }\n\n    getAuditTrailRows(): JSX.Element[] {\n        let auditTrailRows: JSX.Element[] = [];\n        let trails = this.state.filteredTrails;\n        for (let [index, value] of trails.entries()) {\n            let date = new Date(value.time)\n            if (this.state.trialsFilter == \"ALL\" || this.state.trialsFilter === value.admin) {\n                auditTrailRows.push(\n                    <tr key={index}>\n                        <td>{value.admin}</td>\n                        <td>{value.action}</td>\n                        <td>{`${date.getMonth()}/${date.getDay()}/${date.getFullYear()} : ${date.getHours()}:`}{date.getMinutes().toString().length == 1 ? `0${date.getMinutes()}` : `${date.getMinutes()}`}</td> \n                    </tr>\n                )\n            }\n        }\n        return auditTrailRows\n    }\n\n    populateFilterDropdown(): JSX.Element[] {\n        let options: JSX.Element[] = [];\n        let uniqueUsernames: string[] = [];\n        for (let auditTrail of this.state.trails) {\n            if (!uniqueUsernames.includes(auditTrail.admin)) {\n                uniqueUsernames.push(auditTrail.admin);\n            }\n        }\n        options.push(<option value=\"ALL\">ALL</option>);\n        for (let username of uniqueUsernames) {\n            options.push(<option value={username}>{username}</option>);\n        }\n        return options\n    }\n\n    changeFilter(event) {\n        this.setState ({\n            trialsFilter: event.target.value\n        });\n    }\n\n    filterAuditTrail(e: React.ChangeEvent<HTMLInputElement>): void {\n        console.log(e.target.value);\n        let searchResults = this.state.trails.filter(admin => admin.admin.includes(e.target.value) || admin.action.includes(e.target.value));\n        this.setState({\n            filteredTrails: searchResults\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"adminPageContainer\">\n                <label className=\"auditTrailLabel\" id=\"label\">Select an Admin: </label>\n                <br />\n                <select className=\"auditTrailLabel\" onChange={(e) => this.changeFilter(e)} id=\"admins\">\n                    {this.populateFilterDropdown()}\n                </select>\n                <br />\n                <input name=\"search\" placeholder=\"search\" onChange={(e) => this.filterAuditTrail(e)}/>\n                <table className=\"adminTable\">\n                    <tr>\n                        <th>Admin</th>\n                        <th>Action</th>\n                        <th>Time</th>\n                    </tr>\n                    {this.getAuditTrailRows()}\n                </table>\n            </div>\n\n        )\n    }\n}\n\nexport default AuditTrails;"]},"metadata":{},"sourceType":"module"}