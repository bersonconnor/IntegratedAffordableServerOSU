{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Connor/WorkOSU/app/src/pages/AuthPages/Register/index.tsx\";\nimport { CreateUserRequest, UserType } from \"affordable-shared-models\";\nimport React, { Component } from \"react\";\nimport swal from \"sweetalert\";\nimport \"../../../styles/buttons.css\";\nimport speakeasy from \"speakeasy\";\nimport { AddTwoFactorComponent } from \"../../../components/TwoFactor/TwoFactor\";\n\nvar QRCode = require(\"qrcode\");\n\nvar randomstring = require(\"randomstring\");\n\nclass RegisterState {\n  constructor() {\n    this.secret = void 0;\n    this.tempvar = void 0;\n    this.checkboxState = void 0;\n    this.ipKey = void 0;\n    this.ipAddr = void 0;\n    this.city = void 0;\n    this.state = void 0;\n    this.username = void 0;\n    this.password = void 0;\n    this.registerLater = void 0;\n    this.QRState = void 0;\n    this.passwordInput = void 0;\n    this.imageURL = void 0;\n    this.name = void 0;\n    this.name1 = void 0;\n    this.name2 = void 0;\n    this.usertype = void 0;\n    this.validateUsername = void 0;\n    this.validateEmail = void 0;\n    this.validatePassword = void 0;\n  }\n\n}\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.REACT_APP_AF_BACKEND_URL = process.env.REACT_APP_AF_BACKEND_URL || window.REACT_APP_AF_BACKEND_URL;\n\n    this.handleUpdateUsername = e => {\n      if (e.target.value.length > 4) {\n        var data = new FormData();\n        data.append(\"username\", document.getElementById(\"username\").value);\n        fetch(this.REACT_APP_AF_BACKEND_URL + \"/authentication/username\", {\n          method: \"POST\",\n          body: data\n        }).then(response => {\n          if (response.ok) return response.json();\n        }).then(resData => {\n          if (resData.usernameIsUnique) {\n            var name = \"\".concat(document.getElementById(\"username\").value, \" @ Affordable Admin\");\n            this.setState({\n              name: /*#__PURE__*/React.createElement(\"span\", {\n                className: \"App-pass\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 17\n                }\n              }, \"This username is available\"),\n              validateUsername: true,\n              username: resData,\n              secret: speakeasy.generateSecret({\n                length: 20,\n                issuer: 'Affordable Admin',\n                name: name\n              })\n            });\n          } else {\n            this.setState({\n              name: /*#__PURE__*/React.createElement(\"span\", {\n                className: \"App-fail\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 17\n                }\n              }, \"This username is already in database\"),\n              validateUsername: false\n            });\n          }\n        });\n      } else {\n        this.setState({\n          name: \"\"\n        });\n      }\n    };\n\n    this.handleConfirmPassword = e => {\n      var pass = document.getElementById(\"password\").value;\n      var confPass = document.getElementById(\"confPass\").value;\n\n      if (e.target.value.length > 4 && pass === confPass) {\n        this.setState({\n          name1: /*#__PURE__*/React.createElement(\"span\", {\n            className: \"App-pass\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 16\n            }\n          }, \"Password Match\"),\n          validatePassword: true,\n          password: pass\n        });\n      } else {\n        this.setState({\n          name1: /*#__PURE__*/React.createElement(\"span\", {\n            className: \"App-fail\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 16\n            }\n          }, \"Password Mismatch\"),\n          validatePassword: false\n        });\n      }\n    };\n\n    this.handleChange = key => {\n      return event => {\n        this.setState({\n          [key]: event.target.value\n        });\n      };\n    };\n\n    this.handleCheckPasswordFormat = e => {\n      if (e.target.value.length >= 4) {\n        this.updatePWord(e.target.value);\n        this.setState({\n          name1: \"\"\n        });\n      }\n    };\n\n    this.regiesterLaterButton = () => {\n      this.setState({\n        registerLater: true\n      });\n    };\n\n    this.state = {\n      tempvar: 1,\n      checkboxState: false,\n      ipKey: \"4a51eca5db4bb71dc9fa9cf08dd6294a\",\n      ipAddr: \"\",\n      city: \"\",\n      state: \"\",\n      username: \"\",\n      password: \"\",\n      secret: speakeasy.generateSecret({\n        length: 20,\n        issuer: 'Affordable Admin'\n      }),\n      registerLater: false,\n      QRState: false,\n      passwordInput: \"\",\n      imageURL: \"\",\n      name: \"\",\n      name1: \"\",\n      name2: \"\",\n      usertype: \"\",\n      validateUsername: false,\n      validateEmail: false,\n      validatePassword: false\n    };\n    this.handleUploadRegistrationForm = this.handleUploadRegistrationForm.bind(this);\n    this.handleTwoFactorCodeValidation = this.handleTwoFactorCodeValidation.bind(this);\n    this.validateEmail = this.validateEmail.bind(this);\n    this.twoFactorCheckboxToggle = this.twoFactorCheckboxToggle.bind(this);\n    this.regiesterLaterButton = this.regiesterLaterButton.bind(this);\n    this.handleValidateLoginCredentials = this.handleValidateLoginCredentials.bind(this);\n    this.handleStoreTwoFactorDatabase = this.handleStoreTwoFactorDatabase.bind(this);\n  } // function: Checks whether the username typed by the user already in database\n\n\n  updatePWord(s) {\n    this.setState({\n      passwordInput: s\n    });\n  } // function: Checks the email typed by user already in database\n\n\n  validateEmail() {\n    var email = document.getElementById(\"email\").value;\n\n    if (email.length > 5 && email.includes(\".\")) {\n      var data = new FormData();\n      data.append(\"email\", email);\n      fetch(this.REACT_APP_AF_BACKEND_URL + \"/authentication/email\", {\n        method: \"POST\",\n        body: data\n      }).then(response => {\n        if (response.ok) return response.json();\n      }).then(resData => {\n        if (resData.emailIsUnique) {\n          this.setState({\n            name2: \"\",\n            validateEmail: true\n          });\n        } else {\n          this.setState({\n            name2: /*#__PURE__*/React.createElement(\"span\", {\n              className: \"App-fail\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }\n            }, \"This email is already in database\"),\n            validateEmail: false\n          });\n        }\n      });\n    }\n  } // function: toggle the checkbox for opting for two factor\n\n\n  twoFactorCheckboxToggle() {\n    this.setState({\n      checkboxState: !this.state.checkboxState,\n      tempvar: (this.state.tempvar + 1) % 10\n    });\n    var image;\n    QRCode.toDataURL(this.state.secret.otpauth_url, (err, imageData) => {\n      this.setState({\n        imageURL: imageData\n      });\n      image = imageData;\n    }); //below is how the previous capstones accomplished two factor with qr codes, I thought the above method was simpler\n\n    /* const data = new FormData();\n     var x = this.state.tempvar; //Math.floor((Math.random() * 1000) + 1);\n     data.append('imageid', x);\n     data.append('secret', this.state.secret);\n      fetch(process.env.REACT_APP_AF_BACKEND_URL + '/authentication/qr', {\n       method: 'POST',\n       body: data\n     }).then((response) => {\n       if(response.ok) {\n         this.setState({\n           imageURL: process.env.REACT_APP_AF_BACKEND_URL + '/public/filename' + x + '.png'\n         });\n       }\n     });*/\n  } // function: Validate the two factor code typed by user and with the code associated with the generated QR code in backend\n  //Convert to TS\n\n\n  handleTwoFactorCodeValidation(ev) {\n    ev.preventDefault();\n    var data = new FormData();\n    var token = document.getElementById(\"token\").value;\n    data.append(\"token\", token); // var x = this.state.tempvar; //Math.floor((Math.random() * 1000) + 1);\n\n    data.append(\"imageid\", this.state.imageURL);\n    data.append(\"secret\", this.state.secret.base32);\n    console.log(\"secret:\", this.state.secret);\n    this.props.client.twoFactor(token, this.state.imageURL, this.state.secret.base32).then(response => {\n      if (response.verified) {\n        this.showAlertSucc();\n      } else {\n        this.showAlertFail();\n      }\n    }); // fetch(\"http://localhost:4000/authentication/two-factor\", {\n    //   method: \"POST\",\n    //   body: data\n    // })\n    //   .then(response => response.json())\n    //   .then(response => {\n    //     if (response.verified) {\n    //       this.showAlertSucc();\n    //     } else {\n    //       this.showAlertFail();\n    //     }\n    //   });\n  }\n\n  showAlertSucc() {\n    swal(\"Success!\", \"your device now has 2 factor authentication!we also recommend securing your device with a password to prevent fraud\", \"success\");\n  }\n\n  showAlertFail() {\n    swal(\"Error\", \"Please Try Again\", \"error\");\n  } //Transfer Form Credentials to Backend server\n\n\n  handleUploadRegistrationForm(ev) {\n    ev.preventDefault(this.state.secret);\n\n    if (this.state.validateUsername && this.state.validatePassword && this.state.validateEmail) {\n      var name = document.getElementById(\"username\").value;\n      var pass = document.getElementById(\"password\").value;\n      var email = document.getElementById(\"email\").value;\n      var data = new CreateUserRequest();\n      data.username = name;\n      data.password = pass;\n      data.email = email;\n      data.TwoFactor = this.state.checkboxState;\n      data.TwoFactorCode = this.state.secret.base32;\n      data.usertype = UserType.RECIPIENT; // if (this.state.usertype === \"Donor\") {\n      //   data.usertype = UserType.DONOR;\n      // } else {\n      //   data.usertype = UserType.RECIPIENT;\n      // }\n\n      this.props.client.registerUser(data).then(response => {\n        swal(\"Thank you for registering with Affordable!\", \"Welcome\", \"success\");\n        this.props.setUserInfo(response.userInfo);\n\n        if (this.state.checkboxState) {\n          this.handleStoreTwoFactorDatabase();\n        }\n\n        this.handleValidateLoginCredentials(ev, response.userInfo.username);\n      }).catch(error => {\n        console.log(error);\n        swal(\"Registration failure\", \"There was a problem creating your account\", \"error\");\n      });\n    } else {\n      if (!this.state.validateUsername) {\n        swal(\"Username error\", \"Please verify your username and try again\", \"warning\");\n      } else if (!this.state.validatePassword) {\n        swal(\"Password error\", \"Please confirm your password in the appropriate box\", \"warning\");\n      } else if (!this.state.validateEmail) {\n        swal(\"Email error\", \"Please validate your email\", \"warning\");\n      } else {\n        swal(\"General error\", \"Please verify all your inputs are filled out correctly\", \"warning\");\n      }\n    }\n  } //Convert to TS\n\n\n  handleStoreTwoFactorDatabase() {\n    var deviceName = document.getElementById(\"add-device-input\").value;\n    var userName = document.getElementById(\"username\").value;\n    var email = document.getElementById(\"email\").value;\n    var randomString = randomstring.generate();\n    var timeStamp = Date.now().toString();\n    var secret = this.state.secret.base32;\n    this.props.client.addTwoFactor(deviceName, userName, email, randomString, timeStamp, secret).then(response => {\n      if (response.success) {\n        console.log(\"Secret Inserted\");\n      }\n    });\n  }\n\n  //Validate credentials from backend\n  handleValidateLoginCredentials(ev, username) {\n    ev.preventDefault();\n    var data = new FormData();\n    data.append(\"username\", username);\n    data.append(\"password\", this.state.password);\n    this.props.client.login(username, this.state.password).then(response => {\n      this.props.userHasAuthenticated(true);\n      this.props.setUserInfo(response.userInfo);\n      this.props.history.push(\"/application\");\n    });\n  } //MAIN\n\n\n  render() {\n    // DECLARATION\n    var content;\n    var validateUsernameContent = /*#__PURE__*/React.createElement(\"span\", {\n      className: \"validity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 35\n      }\n    });\n\n    if (!this.state.validateUsername) {\n      validateUsernameContent = /*#__PURE__*/React.createElement(\"span\", {\n        className: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 33\n        }\n      });\n    } // based on checkbox select to opt for Two factor the content below is toggled\n\n\n    if (this.state.checkboxState) {\n      content = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 17\n        }\n      }, \"Option provides additional security to your information on login\"))), /*#__PURE__*/React.createElement(AddTwoFactorComponent, {\n        handleTwoFactorCodeValidation: this.handleTwoFactorCodeValidation,\n        imageURL: this.state.imageURL,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 17\n        }\n      }, \"We also recommend securing your device with a password to prevent fraud\"))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 15\n      }\n    }, \"Open an account\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-center mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"username\",\n      className: \"App-login-in\",\n      placeholder: \"Username\",\n      minLength: 4,\n      maxLength: 20,\n      onChange: this.handleUpdateUsername,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 15\n      }\n    }), \" \", validateUsernameContent, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 15\n      }\n    }, this.state.name))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      className: \"App-login-input\",\n      placeholder: \"Password\",\n      onChange: this.handleCheckPasswordFormat,\n      required: true,\n      pattern: \".*[0-9|\\\\W_]+.*\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"validity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 15\n      }\n    }, \"(Must contain at least 1 number or special character.)\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"confPass\",\n      className: \"App-login-input\",\n      placeholder: \"Confirm Password\",\n      minLength: 4,\n      maxLength: 20,\n      onChange: this.handleConfirmPassword,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"validity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 15\n      }\n    }, this.state.name1))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      className: \"App-login-input\",\n      placeholder: \"Email\" //                 required=\"required\"\n      // onChange={this.handleIsEmailInDatabase}\n      ,\n      required: true,\n      onChange: this.validateEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 15\n      }\n    }, this.state.name2))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-center my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onClick: this.twoFactorCheckboxToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 13\n      }\n    }, \"Request 2-Factor Authentication (Requires a Mobile Device)\")), content, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-3 mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"App-login text-center\",\n      onSubmit: this.handleUploadRegistrationForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"App-login-button3\",\n      value: \"Apply Now\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/ubuntu/Connor/WorkOSU/app/src/pages/AuthPages/Register/index.tsx"],"names":["CreateUserRequest","UserType","React","Component","swal","speakeasy","AddTwoFactorComponent","QRCode","require","randomstring","RegisterState","secret","tempvar","checkboxState","ipKey","ipAddr","city","state","username","password","registerLater","QRState","passwordInput","imageURL","name","name1","name2","usertype","validateUsername","validateEmail","validatePassword","Register","constructor","props","REACT_APP_AF_BACKEND_URL","process","env","window","handleUpdateUsername","e","target","value","length","data","FormData","append","document","getElementById","fetch","method","body","then","response","ok","json","resData","usernameIsUnique","setState","generateSecret","issuer","handleConfirmPassword","pass","confPass","handleChange","key","event","handleCheckPasswordFormat","updatePWord","regiesterLaterButton","handleUploadRegistrationForm","bind","handleTwoFactorCodeValidation","twoFactorCheckboxToggle","handleValidateLoginCredentials","handleStoreTwoFactorDatabase","s","email","includes","emailIsUnique","image","toDataURL","otpauth_url","err","imageData","ev","preventDefault","token","base32","console","log","client","twoFactor","verified","showAlertSucc","showAlertFail","TwoFactor","TwoFactorCode","RECIPIENT","registerUser","setUserInfo","userInfo","catch","error","deviceName","userName","randomString","generate","timeStamp","Date","now","toString","addTwoFactor","success","login","userHasAuthenticated","history","push","render","content","validateUsernameContent"],"mappings":"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","sourcesContent":["import { AffordableClient } from \"affordable-client\";\nimport {\n  CreateUserRequest,\n  UserType,\n  LoginResponse\n} from \"affordable-shared-models\";\nimport React, { Component } from \"react\";\nimport swal from \"sweetalert\";\nimport \"../../../styles/buttons.css\";\nimport speakeasy from \"speakeasy\";\nimport { AddTwoFactorComponent } from \"../../../components/TwoFactor/TwoFactor\";\n\nconst QRCode = require(\"qrcode\");\nconst randomstring = require(\"randomstring\");\n\ninterface RegisterProps {\n  history: any;\n  client: AffordableClient;\n  setUserInfo: (UserInfo) => void;\n  userHasAuthenticated: (boolean) => void;\n}\n\nclass RegisterState {\n  secret: speakeasy.GeneratedSecret;\n  tempvar: number;\n  checkboxState: boolean;\n  ipKey: string;\n  ipAddr: string;\n  city: string;\n  state: string;\n  username: string;\n  password: string;\n  registerLater: boolean;\n  QRState: boolean;\n  passwordInput: string;\n  imageURL: string;\n  name: React.ReactNode;\n  name1: React.ReactNode;\n  name2: React.ReactNode;\n  usertype: string;\n  validateUsername: boolean;\n  validateEmail: boolean;\n  validatePassword: boolean;\n}\n\nclass Register extends Component<RegisterProps, RegisterState> {\n  \n  REACT_APP_AF_BACKEND_URL = process.env.REACT_APP_AF_BACKEND_URL || (window as any).REACT_APP_AF_BACKEND_URL;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tempvar: 1,\n      checkboxState: false,\n      ipKey: \"4a51eca5db4bb71dc9fa9cf08dd6294a\",\n      ipAddr: \"\",\n      city: \"\",\n      state: \"\",\n      username: \"\",\n      password: \"\",\n      secret: speakeasy.generateSecret({ length: 20, issuer: 'Affordable Admin' }),\n      registerLater: false,\n      QRState: false,\n      passwordInput: \"\",\n      imageURL: \"\",\n      name: \"\",\n      name1: \"\",\n      name2: \"\",\n      usertype: \"\",\n      validateUsername: false,\n      validateEmail: false,\n      validatePassword: false\n    };\n\n    this.handleUploadRegistrationForm = this.handleUploadRegistrationForm.bind(this);\n    this.handleTwoFactorCodeValidation = this.handleTwoFactorCodeValidation.bind(this);\n    this.validateEmail = this.validateEmail.bind(this);\n    this.twoFactorCheckboxToggle = this.twoFactorCheckboxToggle.bind(this);\n    this.regiesterLaterButton = this.regiesterLaterButton.bind(this);\n    this.handleValidateLoginCredentials = this.handleValidateLoginCredentials.bind(this);\n    this.handleStoreTwoFactorDatabase = this.handleStoreTwoFactorDatabase.bind(this);\n  }\n\n  // function: Checks whether the username typed by the user already in database\n  handleUpdateUsername = e => {\n    if (e.target.value.length > 4) {\n      const data = new FormData();\n      data.append(\n        \"username\",\n        (document.getElementById(\"username\")! as HTMLInputElement).value\n      );\n\n      fetch(this.REACT_APP_AF_BACKEND_URL + \"/authentication/username\", {\n        method: \"POST\",\n        body: data\n      })\n        .then(response => {\n          if (response.ok) return response.json();\n        })\n        .then(resData => {\n          if (resData.usernameIsUnique) {\n            let name = `${(document.getElementById(\"username\")! as HTMLInputElement).value} @ Affordable Admin`\n            this.setState({\n              name: (\n                <span className=\"App-pass\">This username is available</span>\n              ),\n              validateUsername: true,\n              username: resData,\n              secret: speakeasy.generateSecret({ length: 20, issuer: 'Affordable Admin', name: name })\n            });\n          } else {\n            this.setState({\n              name: (\n                <span className=\"App-fail\">\n                  This username is already in database\n                </span>\n              ),\n              validateUsername: false\n            });\n          }\n        });\n    } else {\n      this.setState({ name: \"\" });\n    }\n  };\n\n  // function: Checks Password matches with Confirm Password\n  handleConfirmPassword = e => {\n    const pass = (document.getElementById(\"password\")! as HTMLInputElement)\n      .value;\n    const confPass = (document.getElementById(\"confPass\")! as HTMLInputElement)\n      .value;\n    if (e.target.value.length > 4 && pass === confPass) {\n      this.setState({\n        name1: <span className=\"App-pass\">Password Match</span>,\n        validatePassword: true,\n        password: pass\n      });\n    } else {\n      this.setState({\n        name1: <span className=\"App-fail\">Password Mismatch</span>,\n        validatePassword: false\n      });\n    }\n  };\n\n  /*Handle Event Functions*/\n  handleChange = key => {\n    return event => {\n      this.setState({ [key]: event.target.value } as Pick<\n        RegisterState,\n        keyof RegisterState\n      >);\n    };\n  };\n\n  // function: Check Password Format\n  handleCheckPasswordFormat = e => {\n    if (e.target.value.length >= 4) {\n      this.updatePWord(e.target.value);\n      this.setState({ name1: \"\" });\n    }\n  };\n  updatePWord(s) {\n    this.setState({ passwordInput: s });\n  }\n  // function: Checks the email typed by user already in database\n  validateEmail() {\n    const email = (document.getElementById(\"email\")! as HTMLInputElement).value;\n    if (email.length > 5 && email.includes(\".\")) {\n      const data = new FormData();\n      data.append(\"email\", email);\n      fetch(this.REACT_APP_AF_BACKEND_URL + \"/authentication/email\", {\n        method: \"POST\",\n        body: data\n      })\n        .then(response => {\n          if (response.ok) return response.json();\n        })\n        .then(resData => {\n          if (resData.emailIsUnique) {\n            this.setState({ name2: \"\", validateEmail: true });\n          } else {\n            this.setState({\n              name2: (\n                <span className=\"App-fail\">\n                  This email is already in database\n                </span>\n              ),\n              validateEmail: false\n            });\n          }\n        });\n    }\n  }\n\n  // function: toggle the checkbox for opting for two factor\n  twoFactorCheckboxToggle() {\n    this.setState({\n      checkboxState: !this.state.checkboxState,\n      tempvar: (this.state.tempvar + 1) % 10\n    });\n\n    let image;\n    QRCode.toDataURL(this.state.secret.otpauth_url, (err, imageData) => {\n      this.setState({\n        imageURL: imageData\n      });\n      image = imageData;\n    });\n\n    //below is how the previous capstones accomplished two factor with qr codes, I thought the above method was simpler\n    /* const data = new FormData();\n     var x = this.state.tempvar; //Math.floor((Math.random() * 1000) + 1);\n     data.append('imageid', x);\n     data.append('secret', this.state.secret);\n\n     fetch(process.env.REACT_APP_AF_BACKEND_URL + '/authentication/qr', {\n       method: 'POST',\n       body: data\n     }).then((response) => {\n       if(response.ok) {\n         this.setState({\n           imageURL: process.env.REACT_APP_AF_BACKEND_URL + '/public/filename' + x + '.png'\n         });\n       }\n     });*/\n  }\n\n  // function: Validate the two factor code typed by user and with the code associated with the generated QR code in backend\n  //Convert to TS\n  handleTwoFactorCodeValidation(ev) {\n    ev.preventDefault();\n\n    const data = new FormData();\n\n    const token = (document.getElementById(\"token\")! as HTMLInputElement).value;\n    data.append(\"token\", token);\n    // var x = this.state.tempvar; //Math.floor((Math.random() * 1000) + 1);\n    data.append(\"imageid\", this.state.imageURL);\n    data.append(\"secret\", this.state.secret.base32);\n    console.log(\"secret:\", this.state.secret);\n\n    this.props.client\n      .twoFactor(token, this.state.imageURL, this.state.secret.base32)\n      .then(response => {\n        if (response.verified) {\n          this.showAlertSucc();\n        }else {\n          this.showAlertFail();\n        }\n      });\n\n    // fetch(\"http://localhost:4000/authentication/two-factor\", {\n    //   method: \"POST\",\n    //   body: data\n    // })\n    //   .then(response => response.json())\n    //   .then(response => {\n    //     if (response.verified) {\n    //       this.showAlertSucc();\n    //     } else {\n    //       this.showAlertFail();\n    //     }\n    //   });\n  }\n  showAlertSucc() {\n    swal(\n      \"Success!\",\n      \"your device now has 2 factor authentication!we also recommend securing your device with a password to prevent fraud\",\n      \"success\"\n    );\n  }\n  showAlertFail() {\n    swal(\"Error\", \"Please Try Again\", \"error\");\n  }\n\n  //Transfer Form Credentials to Backend server\n  handleUploadRegistrationForm(ev) {\n    ev.preventDefault(this.state.secret);\n\n    if (\n      this.state.validateUsername &&\n      this.state.validatePassword &&\n      this.state.validateEmail\n    ) {\n      const name = (document.getElementById(\"username\")! as HTMLInputElement)\n        .value;\n      const pass = (document.getElementById(\"password\")! as HTMLInputElement)\n        .value;\n      const email = (document.getElementById(\"email\")! as HTMLInputElement)\n        .value;\n      const data = new CreateUserRequest();\n      data.username = name;\n      data.password = pass;\n      data.email = email;\n      data.TwoFactor = this.state.checkboxState;\n      data.TwoFactorCode = this.state.secret.base32;\n      data.usertype = UserType.RECIPIENT;\n      // if (this.state.usertype === \"Donor\") {\n      //   data.usertype = UserType.DONOR;\n      // } else {\n      //   data.usertype = UserType.RECIPIENT;\n      // }\n\n      this.props.client\n        .registerUser(data)\n        .then(response => {\n          swal(\n            \"Thank you for registering with Affordable!\",\n            \"Welcome\",\n            \"success\"\n          );\n\n          this.props.setUserInfo(response.userInfo);\n\n          if (this.state.checkboxState) {\n            this.handleStoreTwoFactorDatabase();\n          }\n\n          this.handleValidateLoginCredentials(ev, response.userInfo.username);\n        })\n        .catch(error => {\n          console.log(error);\n          swal(\n            \"Registration failure\",\n            \"There was a problem creating your account\",\n            \"error\"\n          );\n        });\n    } else {\n      if (!this.state.validateUsername) {\n        swal(\n          \"Username error\",\n          \"Please verify your username and try again\",\n          \"warning\"\n        );\n      } else if (!this.state.validatePassword) {\n        swal(\n          \"Password error\",\n          \"Please confirm your password in the appropriate box\",\n          \"warning\"\n        );\n      } else if (!this.state.validateEmail) {\n        swal(\"Email error\", \"Please validate your email\", \"warning\");\n      } else {\n        swal(\n          \"General error\",\n          \"Please verify all your inputs are filled out correctly\",\n          \"warning\"\n        );\n      }\n    }\n  }\n\n\n  //Convert to TS\n  handleStoreTwoFactorDatabase() {\n    const deviceName = (document.getElementById(\"add-device-input\")! as HTMLInputElement).value;\n    const userName = (document.getElementById(\"username\") as HTMLInputElement).value\n    const email = (document.getElementById(\"email\") as HTMLInputElement).value\n    const randomString = randomstring.generate();\n    const timeStamp = Date.now().toString();\n    const secret = this.state.secret.base32;\n\n    this.props.client\n      .addTwoFactor(\n          deviceName,\n          userName,\n          email,\n          randomString,\n          timeStamp,\n          secret\n      ).then(response => {\n        if (response.success) {\n          console.log(\"Secret Inserted\")\n        }\n      });\n  }\n\n  regiesterLaterButton = () => {\n    this.setState({ registerLater: true });\n  };\n\n  //Validate credentials from backend\n  handleValidateLoginCredentials(ev, username) {\n    ev.preventDefault();\n    const data = new FormData();\n    data.append(\"username\", username);\n    data.append(\"password\", this.state.password);\n\n    this.props.client\n      .login(username, this.state.password)\n      .then((response: LoginResponse) => {\n        this.props.userHasAuthenticated(true);\n        this.props.setUserInfo(response.userInfo);\n\n        this.props.history.push(\"/application\");\n      });\n  }\n  //MAIN\n  render() {\n    // DECLARATION\n    let content: React.ReactNode;\n    let validateUsernameContent = <span className=\"validity\"></span>;\n\n    if (!this.state.validateUsername) {\n      validateUsernameContent = <span className=\"invalid\"></span>;\n    }\n    // based on checkbox select to opt for Two factor the content below is toggled\n    if (this.state.checkboxState) {\n      content = (\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"row\">\n              <div className=\"col text-center\">\n                <h4>\n                  Option provides additional security to your information on\n                  login\n                </h4>\n              </div>\n            </div>\n            <AddTwoFactorComponent handleTwoFactorCodeValidation={this.handleTwoFactorCodeValidation} imageURL={this.state.imageURL}/>\n\n            <br />\n\n            <div className=\"row\">\n              <div className=\"col\">\n                <h4 className=\"text-center\">\n                  We also recommend securing your device with a password to\n                  prevent fraud\n                </h4>\n              </div>\n            </div>\n\n            <br />\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"row\">\n        <div className=\"col\">\n          {/* TEXT */}\n          <div className=\"row mt-3\">\n            <div className=\"col text-center\">\n              <h2>Open an account</h2>\n            </div>\n          </div>\n\n          {/* Open Account */}\n\n          {/* USERNAME */}\n          <div className=\"row justify-content-center mt-3\">\n            <div className=\"col text-center\">\n              <input\n                type=\"text\"\n                id=\"username\"\n                className=\"App-login-in\"\n                placeholder=\"Username\"\n                minLength={4}\n                maxLength={20}\n                onChange={this.handleUpdateUsername}\n                required={true}\n              />{\" \"}\n              {validateUsernameContent}\n              <div>{this.state.name}</div>\n            </div>\n          </div>\n\n          {/* PASSWORD */}\n          <div className=\"row mt-3\">\n            <div className=\"col text-center\">\n              <input\n                type=\"password\"\n                id=\"password\"\n                className=\"App-login-input\"\n                placeholder=\"Password\"\n                onChange={this.handleCheckPasswordFormat}\n                required={true}\n                pattern=\".*[0-9|\\W_]+.*\"\n              />\n              <span className=\"validity\"></span>\n              <div>(Must contain at least 1 number or special character.)</div>\n            </div>\n          </div>\n\n          {/* CONFIRM PASSWORD */}\n          <div className=\"row mt-3\">\n            <div className=\"col text-center\">\n              <input\n                type=\"password\"\n                id=\"confPass\"\n                className=\"App-login-input\"\n                placeholder=\"Confirm Password\"\n                minLength={4}\n                maxLength={20}\n                onChange={this.handleConfirmPassword}\n                required={true}\n              />\n              <span className=\"validity\"></span>\n              <div>{this.state.name1}</div>\n            </div>\n          </div>\n\n          {/* EMAIL */}\n          <div className=\"row mt-3\">\n            <div className=\"col text-center\">\n              <input\n                type=\"email\"\n                id=\"email\"\n                className=\"App-login-input\"\n                placeholder=\"Email\"\n                //                 required=\"required\"\n                // onChange={this.handleIsEmailInDatabase}\n\n                required={true}\n                onChange={this.validateEmail}\n              />\n\n              <div>{this.state.name2}</div>\n            </div>\n          </div>\n\n          {/* User Types (Removed for COVID-19 Rollout) */}\n\n          {/* <div className=\"row mt-3\">\n            <div className=\"col text-center\">\n              <input\n                type=\"radio\"\n                value=\"Recipient\"\n                checked={this.state.usertype === \"Recipient\"}\n                onChange={this.handleChange(\"usertype\")}\n              />\n              Recipient\n              <input\n                type=\"radio\"\n                value=\"Donor\"\n                checked={this.state.usertype === \"Donor\"}\n                onChange={this.handleChange(\"usertype\")}\n              />{\" \"}\n              Donor\n            </div>\n          </div> */}\n\n          {/* Two Factor Authentication */}\n\n          <div className=\"row justify-content-center my-3\">\n            <div className=\"col-1 text-right\">\n              <input type=\"checkbox\" onClick={this.twoFactorCheckboxToggle} />\n            </div>\n            <div>\n              Request 2-Factor Authentication (Requires a Mobile Device)\n            </div>\n          </div>\n\n          {content}\n\n          {/* END TWO BUTTONS: REGISTER NOW/ REGISTER LATER */}\n          <div className=\"row mt-3 mb-5\">\n            <div className=\"col\">\n              <form\n                className=\"App-login text-center\"\n                onSubmit={this.handleUploadRegistrationForm}\n              >\n                <input\n                  type=\"submit\"\n                  className=\"App-login-button3\"\n                  value=\"Apply Now\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}